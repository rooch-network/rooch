
import fs from "fs";
import { fileURLToPath } from 'url';
import path, { dirname } from 'path';
import ejs from "ejs";
import prettier from 'prettier';
import { getType } from "./utils.js";

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

export class Generator {
    constructor(language, outputDir) {
        this.language = language;
        this.outputDir = outputDir;
    }

    async execute(openRPCDoc) {
        console.log("openRPCDoc:", openRPCDoc)
        this.ensureOutputDir(this.outputDir)

        await this.renderTypes(openRPCDoc.components.schemas)
    }

    ensureOutputDir(outputDir) {
        if (!fs.existsSync(outputDir)) {
            fs.mkdirSync(outputDir, { recursive: true });
        }
    }

    async renderTypes(schemas) {
        const templatePath = path.join(__dirname, 'template/types.ts.ejs');  // 模板文件路径
        const templateStr = fs.readFileSync(templatePath, 'utf-8');
        const renderResult = ejs.render(templateStr, { schemas, getType });
        const prettyRenderResult = await prettier.format(renderResult, { parser: "typescript" });

        const note = "// This file was generated by `yarn gen:client`. Please, do not modify it.";
        const resultWithNote = `${note}\n${prettyRenderResult}\n${note}`;

        fs.writeFileSync(path.join(this.outputDir, 'types.ts'), resultWithNote);
    }
}
