var Ie=(e,t,r)=>{if(!t.has(e))throw TypeError("Cannot "+r)};var I=(e,t,r)=>(Ie(e,t,"read from private field"),r?r.call(e):t.get(e)),a2=(e,t,r)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,r)},J=(e,t,r,n)=>(Ie(e,t,"write to private field"),n?n.call(e,r):t.set(e,r),r);var V8=(e,t,r,n)=>({set _(i){J(e,t,i,r)},get _(){return I(e,t,n)}}),A2=(e,t,r)=>(Ie(e,t,"access private method"),r);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const o of i)if(o.type==="childList")for(const s of o.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&n(s)}).observe(document,{childList:!0,subtree:!0});function r(i){const o={};return i.integrity&&(o.integrity=i.integrity),i.referrerPolicy&&(o.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?o.credentials="include":i.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function n(i){if(i.ep)return;i.ep=!0;const o=r(i);fetch(i.href,o)}})();var R2=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function m7(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}function Rr(e){if(e.__esModule)return e;var t=e.default;if(typeof t=="function"){var r=function n(){return this instanceof n?Reflect.construct(t,arguments,this.constructor):t.apply(this,arguments)};r.prototype=t.prototype}else r={};return Object.defineProperty(r,"__esModule",{value:!0}),Object.keys(e).forEach(function(n){var i=Object.getOwnPropertyDescriptor(e,n);Object.defineProperty(r,n,i.get?i:{enumerable:!0,get:function(){return e[n]}})}),r}var Ea={exports:{}},x7={},Sa={exports:{}},U2={};/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var D8=Symbol.for("react.element"),Vf=Symbol.for("react.portal"),Kf=Symbol.for("react.fragment"),Gf=Symbol.for("react.strict_mode"),Qf=Symbol.for("react.profiler"),Yf=Symbol.for("react.provider"),Jf=Symbol.for("react.context"),Xf=Symbol.for("react.forward_ref"),Zf=Symbol.for("react.suspense"),ed=Symbol.for("react.memo"),td=Symbol.for("react.lazy"),mi=Symbol.iterator;function rd(e){return e===null||typeof e!="object"?null:(e=mi&&e[mi]||e["@@iterator"],typeof e=="function"?e:null)}var ba={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},Ca=Object.assign,Aa={};function u6(e,t,r){this.props=e,this.context=t,this.refs=Aa,this.updater=r||ba}u6.prototype.isReactComponent={};u6.prototype.setState=function(e,t){if(typeof e!="object"&&typeof e!="function"&&e!=null)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")};u6.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")};function Ba(){}Ba.prototype=u6.prototype;function kr(e,t,r){this.props=e,this.context=t,this.refs=Aa,this.updater=r||ba}var Pr=kr.prototype=new Ba;Pr.constructor=kr;Ca(Pr,u6.prototype);Pr.isPureReactComponent=!0;var xi=Array.isArray,Ta=Object.prototype.hasOwnProperty,Or={current:null},Ia={key:!0,ref:!0,__self:!0,__source:!0};function Fa(e,t,r){var n,i={},o=null,s=null;if(t!=null)for(n in t.ref!==void 0&&(s=t.ref),t.key!==void 0&&(o=""+t.key),t)Ta.call(t,n)&&!Ia.hasOwnProperty(n)&&(i[n]=t[n]);var a=arguments.length-2;if(a===1)i.children=r;else if(1<a){for(var l=Array(a),u=0;u<a;u++)l[u]=arguments[u+2];i.children=l}if(e&&e.defaultProps)for(n in a=e.defaultProps,a)i[n]===void 0&&(i[n]=a[n]);return{$$typeof:D8,type:e,key:o,ref:s,props:i,_owner:Or.current}}function nd(e,t){return{$$typeof:D8,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}function Dr(e){return typeof e=="object"&&e!==null&&e.$$typeof===D8}function id(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,function(r){return t[r]})}var wi=/\/+/g;function Fe(e,t){return typeof e=="object"&&e!==null&&e.key!=null?id(""+e.key):t.toString(36)}function x9(e,t,r,n,i){var o=typeof e;(o==="undefined"||o==="boolean")&&(e=null);var s=!1;if(e===null)s=!0;else switch(o){case"string":case"number":s=!0;break;case"object":switch(e.$$typeof){case D8:case Vf:s=!0}}if(s)return s=e,i=i(s),e=n===""?"."+Fe(s,0):n,xi(i)?(r="",e!=null&&(r=e.replace(wi,"$&/")+"/"),x9(i,t,r,"",function(u){return u})):i!=null&&(Dr(i)&&(i=nd(i,r+(!i.key||s&&s.key===i.key?"":(""+i.key).replace(wi,"$&/")+"/")+e)),t.push(i)),1;if(s=0,n=n===""?".":n+":",xi(e))for(var a=0;a<e.length;a++){o=e[a];var l=n+Fe(o,a);s+=x9(o,t,r,l,i)}else if(l=rd(e),typeof l=="function")for(e=l.call(e),a=0;!(o=e.next()).done;)o=o.value,l=n+Fe(o,a++),s+=x9(o,t,r,l,i);else if(o==="object")throw t=String(e),Error("Objects are not valid as a React child (found: "+(t==="[object Object]"?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return s}function K8(e,t,r){if(e==null)return e;var n=[],i=0;return x9(e,n,"","",function(o){return t.call(r,o,i++)}),n}function od(e){if(e._status===-1){var t=e._result;t=t(),t.then(function(r){(e._status===0||e._status===-1)&&(e._status=1,e._result=r)},function(r){(e._status===0||e._status===-1)&&(e._status=2,e._result=r)}),e._status===-1&&(e._status=0,e._result=t)}if(e._status===1)return e._result.default;throw e._result}var n0={current:null},w9={transition:null},sd={ReactCurrentDispatcher:n0,ReactCurrentBatchConfig:w9,ReactCurrentOwner:Or};U2.Children={map:K8,forEach:function(e,t,r){K8(e,function(){t.apply(this,arguments)},r)},count:function(e){var t=0;return K8(e,function(){t++}),t},toArray:function(e){return K8(e,function(t){return t})||[]},only:function(e){if(!Dr(e))throw Error("React.Children.only expected to receive a single React element child.");return e}};U2.Component=u6;U2.Fragment=Kf;U2.Profiler=Qf;U2.PureComponent=kr;U2.StrictMode=Gf;U2.Suspense=Zf;U2.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=sd;U2.cloneElement=function(e,t,r){if(e==null)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var n=Ca({},e.props),i=e.key,o=e.ref,s=e._owner;if(t!=null){if(t.ref!==void 0&&(o=t.ref,s=Or.current),t.key!==void 0&&(i=""+t.key),e.type&&e.type.defaultProps)var a=e.type.defaultProps;for(l in t)Ta.call(t,l)&&!Ia.hasOwnProperty(l)&&(n[l]=t[l]===void 0&&a!==void 0?a[l]:t[l])}var l=arguments.length-2;if(l===1)n.children=r;else if(1<l){a=Array(l);for(var u=0;u<l;u++)a[u]=arguments[u+2];n.children=a}return{$$typeof:D8,type:e.type,key:i,ref:o,props:n,_owner:s}};U2.createContext=function(e){return e={$$typeof:Jf,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null},e.Provider={$$typeof:Yf,_context:e},e.Consumer=e};U2.createElement=Fa;U2.createFactory=function(e){var t=Fa.bind(null,e);return t.type=e,t};U2.createRef=function(){return{current:null}};U2.forwardRef=function(e){return{$$typeof:Xf,render:e}};U2.isValidElement=Dr;U2.lazy=function(e){return{$$typeof:td,_payload:{_status:-1,_result:e},_init:od}};U2.memo=function(e,t){return{$$typeof:ed,type:e,compare:t===void 0?null:t}};U2.startTransition=function(e){var t=w9.transition;w9.transition={};try{e()}finally{w9.transition=t}};U2.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")};U2.useCallback=function(e,t){return n0.current.useCallback(e,t)};U2.useContext=function(e){return n0.current.useContext(e)};U2.useDebugValue=function(){};U2.useDeferredValue=function(e){return n0.current.useDeferredValue(e)};U2.useEffect=function(e,t){return n0.current.useEffect(e,t)};U2.useId=function(){return n0.current.useId()};U2.useImperativeHandle=function(e,t,r){return n0.current.useImperativeHandle(e,t,r)};U2.useInsertionEffect=function(e,t){return n0.current.useInsertionEffect(e,t)};U2.useLayoutEffect=function(e,t){return n0.current.useLayoutEffect(e,t)};U2.useMemo=function(e,t){return n0.current.useMemo(e,t)};U2.useReducer=function(e,t,r){return n0.current.useReducer(e,t,r)};U2.useRef=function(e){return n0.current.useRef(e)};U2.useState=function(e){return n0.current.useState(e)};U2.useSyncExternalStore=function(e,t,r){return n0.current.useSyncExternalStore(e,t,r)};U2.useTransition=function(){return n0.current.useTransition()};U2.version="18.2.0";Sa.exports=U2;var L=Sa.exports;const Ra=m7(L);/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var ad=L,ud=Symbol.for("react.element"),ld=Symbol.for("react.fragment"),cd=Object.prototype.hasOwnProperty,fd=ad.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,dd={key:!0,ref:!0,__self:!0,__source:!0};function ka(e,t,r){var n,i={},o=null,s=null;r!==void 0&&(o=""+r),t.key!==void 0&&(o=""+t.key),t.ref!==void 0&&(s=t.ref);for(n in t)cd.call(t,n)&&!dd.hasOwnProperty(n)&&(i[n]=t[n]);if(e&&e.defaultProps)for(n in t=e.defaultProps,t)i[n]===void 0&&(i[n]=t[n]);return{$$typeof:ud,type:e,key:o,ref:s,props:i,_owner:fd.current}}x7.Fragment=ld;x7.jsx=ka;x7.jsxs=ka;Ea.exports=x7;var N2=Ea.exports,pt={},Pa={exports:{}},x0={},Oa={exports:{}},Da={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */(function(e){function t(X,p2){var S2=X.length;X.push(p2);e:for(;0<S2;){var b2=S2-1>>>1,D2=X[b2];if(0<i(D2,p2))X[b2]=p2,X[S2]=D2,S2=b2;else break e}}function r(X){return X.length===0?null:X[0]}function n(X){if(X.length===0)return null;var p2=X[0],S2=X.pop();if(S2!==p2){X[0]=S2;e:for(var b2=0,D2=X.length,b3=D2>>>1;b2<b3;){var h3=2*(b2+1)-1,B2=X[h3],l3=h3+1,J0=X[l3];if(0>i(B2,S2))l3<D2&&0>i(J0,B2)?(X[b2]=J0,X[l3]=S2,b2=l3):(X[b2]=B2,X[h3]=S2,b2=h3);else if(l3<D2&&0>i(J0,S2))X[b2]=J0,X[l3]=S2,b2=l3;else break e}}return p2}function i(X,p2){var S2=X.sortIndex-p2.sortIndex;return S2!==0?S2:X.id-p2.id}if(typeof performance=="object"&&typeof performance.now=="function"){var o=performance;e.unstable_now=function(){return o.now()}}else{var s=Date,a=s.now();e.unstable_now=function(){return s.now()-a}}var l=[],u=[],h=1,y=null,x=3,b=!1,C=!1,T=!1,k=typeof setTimeout=="function"?setTimeout:null,S=typeof clearTimeout=="function"?clearTimeout:null,E=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function A(X){for(var p2=r(u);p2!==null;){if(p2.callback===null)n(u);else if(p2.startTime<=X)n(u),p2.sortIndex=p2.expirationTime,t(l,p2);else break;p2=r(u)}}function N(X){if(T=!1,A(X),!C)if(r(l)!==null)C=!0,J3(H);else{var p2=r(u);p2!==null&&h4(N,p2.startTime-X)}}function H(X,p2){C=!1,T&&(T=!1,S(V),V=-1),b=!0;var S2=x;try{for(A(p2),y=r(l);y!==null&&(!(y.expirationTime>p2)||X&&!a3());){var b2=y.callback;if(typeof b2=="function"){y.callback=null,x=y.priorityLevel;var D2=b2(y.expirationTime<=p2);p2=e.unstable_now(),typeof D2=="function"?y.callback=D2:y===r(l)&&n(l),A(p2)}else n(l);y=r(l)}if(y!==null)var b3=!0;else{var h3=r(u);h3!==null&&h4(N,h3.startTime-p2),b3=!1}return b3}finally{y=null,x=S2,b=!1}}var W=!1,Q=null,V=-1,y2=5,h2=-1;function a3(){return!(e.unstable_now()-h2<y2)}function k3(){if(Q!==null){var X=e.unstable_now();h2=X;var p2=!0;try{p2=Q(!0,X)}finally{p2?z3():(W=!1,Q=null)}}else W=!1}var z3;if(typeof E=="function")z3=function(){E(k3)};else if(typeof MessageChannel<"u"){var U0=new MessageChannel,N0=U0.port2;U0.port1.onmessage=k3,z3=function(){N0.postMessage(null)}}else z3=function(){k(k3,0)};function J3(X){Q=X,W||(W=!0,z3())}function h4(X,p2){V=k(function(){X(e.unstable_now())},p2)}e.unstable_IdlePriority=5,e.unstable_ImmediatePriority=1,e.unstable_LowPriority=4,e.unstable_NormalPriority=3,e.unstable_Profiling=null,e.unstable_UserBlockingPriority=2,e.unstable_cancelCallback=function(X){X.callback=null},e.unstable_continueExecution=function(){C||b||(C=!0,J3(H))},e.unstable_forceFrameRate=function(X){0>X||125<X?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):y2=0<X?Math.floor(1e3/X):5},e.unstable_getCurrentPriorityLevel=function(){return x},e.unstable_getFirstCallbackNode=function(){return r(l)},e.unstable_next=function(X){switch(x){case 1:case 2:case 3:var p2=3;break;default:p2=x}var S2=x;x=p2;try{return X()}finally{x=S2}},e.unstable_pauseExecution=function(){},e.unstable_requestPaint=function(){},e.unstable_runWithPriority=function(X,p2){switch(X){case 1:case 2:case 3:case 4:case 5:break;default:X=3}var S2=x;x=X;try{return p2()}finally{x=S2}},e.unstable_scheduleCallback=function(X,p2,S2){var b2=e.unstable_now();switch(typeof S2=="object"&&S2!==null?(S2=S2.delay,S2=typeof S2=="number"&&0<S2?b2+S2:b2):S2=b2,X){case 1:var D2=-1;break;case 2:D2=250;break;case 5:D2=1073741823;break;case 4:D2=1e4;break;default:D2=5e3}return D2=S2+D2,X={id:h++,callback:p2,priorityLevel:X,startTime:S2,expirationTime:D2,sortIndex:-1},S2>b2?(X.sortIndex=S2,t(u,X),r(l)===null&&X===r(u)&&(T?(S(V),V=-1):T=!0,h4(N,S2-b2))):(X.sortIndex=D2,t(l,X),C||b||(C=!0,J3(H))),X},e.unstable_shouldYield=a3,e.unstable_wrapCallback=function(X){var p2=x;return function(){var S2=x;x=p2;try{return X.apply(this,arguments)}finally{x=S2}}}})(Da);Oa.exports=Da;var hd=Oa.exports;/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Ua=L,g0=hd;function G(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=1;r<arguments.length;r++)t+="&args[]="+encodeURIComponent(arguments[r]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var Na=new Set,Z6={};function t1(e,t){X1(e,t),X1(e+"Capture",t)}function X1(e,t){for(Z6[e]=t,e=0;e<t.length;e++)Na.add(t[e])}var T4=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),yt=Object.prototype.hasOwnProperty,pd=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,_i={},Ei={};function yd(e){return yt.call(Ei,e)?!0:yt.call(_i,e)?!1:pd.test(e)?Ei[e]=!0:(_i[e]=!0,!1)}function vd(e,t,r,n){if(r!==null&&r.type===0)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return n?!1:r!==null?!r.acceptsBooleans:(e=e.toLowerCase().slice(0,5),e!=="data-"&&e!=="aria-");default:return!1}}function gd(e,t,r,n){if(t===null||typeof t>"u"||vd(e,t,r,n))return!0;if(n)return!1;if(r!==null)switch(r.type){case 3:return!t;case 4:return t===!1;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}function i0(e,t,r,n,i,o,s){this.acceptsBooleans=t===2||t===3||t===4,this.attributeName=n,this.attributeNamespace=i,this.mustUseProperty=r,this.propertyName=e,this.type=t,this.sanitizeURL=o,this.removeEmptyString=s}var M3={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){M3[e]=new i0(e,0,!1,e,null,!1,!1)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var t=e[0];M3[t]=new i0(t,1,!1,e[1],null,!1,!1)});["contentEditable","draggable","spellCheck","value"].forEach(function(e){M3[e]=new i0(e,2,!1,e.toLowerCase(),null,!1,!1)});["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(e){M3[e]=new i0(e,2,!1,e,null,!1,!1)});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){M3[e]=new i0(e,3,!1,e.toLowerCase(),null,!1,!1)});["checked","multiple","muted","selected"].forEach(function(e){M3[e]=new i0(e,3,!0,e,null,!1,!1)});["capture","download"].forEach(function(e){M3[e]=new i0(e,4,!1,e,null,!1,!1)});["cols","rows","size","span"].forEach(function(e){M3[e]=new i0(e,6,!1,e,null,!1,!1)});["rowSpan","start"].forEach(function(e){M3[e]=new i0(e,5,!1,e.toLowerCase(),null,!1,!1)});var Ur=/[\-:]([a-z])/g;function Nr(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var t=e.replace(Ur,Nr);M3[t]=new i0(t,1,!1,e,null,!1,!1)});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var t=e.replace(Ur,Nr);M3[t]=new i0(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)});["xml:base","xml:lang","xml:space"].forEach(function(e){var t=e.replace(Ur,Nr);M3[t]=new i0(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)});["tabIndex","crossOrigin"].forEach(function(e){M3[e]=new i0(e,1,!1,e.toLowerCase(),null,!1,!1)});M3.xlinkHref=new i0("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1);["src","href","action","formAction"].forEach(function(e){M3[e]=new i0(e,1,!1,e.toLowerCase(),null,!0,!0)});function $r(e,t,r,n){var i=M3.hasOwnProperty(t)?M3[t]:null;(i!==null?i.type!==0:n||!(2<t.length)||t[0]!=="o"&&t[0]!=="O"||t[1]!=="n"&&t[1]!=="N")&&(gd(t,r,i,n)&&(r=null),n||i===null?yd(t)&&(r===null?e.removeAttribute(t):e.setAttribute(t,""+r)):i.mustUseProperty?e[i.propertyName]=r===null?i.type===3?!1:"":r:(t=i.attributeName,n=i.attributeNamespace,r===null?e.removeAttribute(t):(i=i.type,r=i===3||i===4&&r===!0?"":""+r,n?e.setAttributeNS(n,t,r):e.setAttribute(t,r))))}var k4=Ua.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,G8=Symbol.for("react.element"),h1=Symbol.for("react.portal"),p1=Symbol.for("react.fragment"),Lr=Symbol.for("react.strict_mode"),vt=Symbol.for("react.profiler"),$a=Symbol.for("react.provider"),La=Symbol.for("react.context"),Mr=Symbol.for("react.forward_ref"),gt=Symbol.for("react.suspense"),mt=Symbol.for("react.suspense_list"),zr=Symbol.for("react.memo"),q4=Symbol.for("react.lazy"),Ma=Symbol.for("react.offscreen"),Si=Symbol.iterator;function m6(e){return e===null||typeof e!="object"?null:(e=Si&&e[Si]||e["@@iterator"],typeof e=="function"?e:null)}var d3=Object.assign,Re;function N6(e){if(Re===void 0)try{throw Error()}catch(r){var t=r.stack.trim().match(/\n( *(at )?)/);Re=t&&t[1]||""}return`
`+Re+e}var ke=!1;function Pe(e,t){if(!e||ke)return"";ke=!0;var r=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(t,[])}catch(u){var n=u}Reflect.construct(e,[],t)}else{try{t.call()}catch(u){n=u}e.call(t.prototype)}else{try{throw Error()}catch(u){n=u}e()}}catch(u){if(u&&n&&typeof u.stack=="string"){for(var i=u.stack.split(`
`),o=n.stack.split(`
`),s=i.length-1,a=o.length-1;1<=s&&0<=a&&i[s]!==o[a];)a--;for(;1<=s&&0<=a;s--,a--)if(i[s]!==o[a]){if(s!==1||a!==1)do if(s--,a--,0>a||i[s]!==o[a]){var l=`
`+i[s].replace(" at new "," at ");return e.displayName&&l.includes("<anonymous>")&&(l=l.replace("<anonymous>",e.displayName)),l}while(1<=s&&0<=a);break}}}finally{ke=!1,Error.prepareStackTrace=r}return(e=e?e.displayName||e.name:"")?N6(e):""}function md(e){switch(e.tag){case 5:return N6(e.type);case 16:return N6("Lazy");case 13:return N6("Suspense");case 19:return N6("SuspenseList");case 0:case 2:case 15:return e=Pe(e.type,!1),e;case 11:return e=Pe(e.type.render,!1),e;case 1:return e=Pe(e.type,!0),e;default:return""}}function xt(e){if(e==null)return null;if(typeof e=="function")return e.displayName||e.name||null;if(typeof e=="string")return e;switch(e){case p1:return"Fragment";case h1:return"Portal";case vt:return"Profiler";case Lr:return"StrictMode";case gt:return"Suspense";case mt:return"SuspenseList"}if(typeof e=="object")switch(e.$$typeof){case La:return(e.displayName||"Context")+".Consumer";case $a:return(e._context.displayName||"Context")+".Provider";case Mr:var t=e.render;return e=e.displayName,e||(e=t.displayName||t.name||"",e=e!==""?"ForwardRef("+e+")":"ForwardRef"),e;case zr:return t=e.displayName||null,t!==null?t:xt(e.type)||"Memo";case q4:t=e._payload,e=e._init;try{return xt(e(t))}catch{}}return null}function xd(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=t.render,e=e.displayName||e.name||"",t.displayName||(e!==""?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return xt(t);case 8:return t===Lr?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof t=="function")return t.displayName||t.name||null;if(typeof t=="string")return t}return null}function d5(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":return e;case"object":return e;default:return""}}function za(e){var t=e.type;return(e=e.nodeName)&&e.toLowerCase()==="input"&&(t==="checkbox"||t==="radio")}function wd(e){var t=za(e)?"checked":"value",r=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),n=""+e[t];if(!e.hasOwnProperty(t)&&typeof r<"u"&&typeof r.get=="function"&&typeof r.set=="function"){var i=r.get,o=r.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return i.call(this)},set:function(s){n=""+s,o.call(this,s)}}),Object.defineProperty(e,t,{enumerable:r.enumerable}),{getValue:function(){return n},setValue:function(s){n=""+s},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}function Q8(e){e._valueTracker||(e._valueTracker=wd(e))}function ja(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var r=t.getValue(),n="";return e&&(n=za(e)?e.checked?"true":"false":e.value),e=n,e!==r?(t.setValue(e),!0):!1}function $9(e){if(e=e||(typeof document<"u"?document:void 0),typeof e>"u")return null;try{return e.activeElement||e.body}catch{return e.body}}function wt(e,t){var r=t.checked;return d3({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:r??e._wrapperState.initialChecked})}function bi(e,t){var r=t.defaultValue==null?"":t.defaultValue,n=t.checked!=null?t.checked:t.defaultChecked;r=d5(t.value!=null?t.value:r),e._wrapperState={initialChecked:n,initialValue:r,controlled:t.type==="checkbox"||t.type==="radio"?t.checked!=null:t.value!=null}}function Ha(e,t){t=t.checked,t!=null&&$r(e,"checked",t,!1)}function _t(e,t){Ha(e,t);var r=d5(t.value),n=t.type;if(r!=null)n==="number"?(r===0&&e.value===""||e.value!=r)&&(e.value=""+r):e.value!==""+r&&(e.value=""+r);else if(n==="submit"||n==="reset"){e.removeAttribute("value");return}t.hasOwnProperty("value")?Et(e,t.type,r):t.hasOwnProperty("defaultValue")&&Et(e,t.type,d5(t.defaultValue)),t.checked==null&&t.defaultChecked!=null&&(e.defaultChecked=!!t.defaultChecked)}function Ci(e,t,r){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var n=t.type;if(!(n!=="submit"&&n!=="reset"||t.value!==void 0&&t.value!==null))return;t=""+e._wrapperState.initialValue,r||t===e.value||(e.value=t),e.defaultValue=t}r=e.name,r!==""&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,r!==""&&(e.name=r)}function Et(e,t,r){(t!=="number"||$9(e.ownerDocument)!==e)&&(r==null?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+r&&(e.defaultValue=""+r))}var $6=Array.isArray;function B1(e,t,r,n){if(e=e.options,t){t={};for(var i=0;i<r.length;i++)t["$"+r[i]]=!0;for(r=0;r<e.length;r++)i=t.hasOwnProperty("$"+e[r].value),e[r].selected!==i&&(e[r].selected=i),i&&n&&(e[r].defaultSelected=!0)}else{for(r=""+d5(r),t=null,i=0;i<e.length;i++){if(e[i].value===r){e[i].selected=!0,n&&(e[i].defaultSelected=!0);return}t!==null||e[i].disabled||(t=e[i])}t!==null&&(t.selected=!0)}}function St(e,t){if(t.dangerouslySetInnerHTML!=null)throw Error(G(91));return d3({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Ai(e,t){var r=t.value;if(r==null){if(r=t.children,t=t.defaultValue,r!=null){if(t!=null)throw Error(G(92));if($6(r)){if(1<r.length)throw Error(G(93));r=r[0]}t=r}t==null&&(t=""),r=t}e._wrapperState={initialValue:d5(r)}}function qa(e,t){var r=d5(t.value),n=d5(t.defaultValue);r!=null&&(r=""+r,r!==e.value&&(e.value=r),t.defaultValue==null&&e.defaultValue!==r&&(e.defaultValue=r)),n!=null&&(e.defaultValue=""+n)}function Bi(e){var t=e.textContent;t===e._wrapperState.initialValue&&t!==""&&t!==null&&(e.value=t)}function Wa(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function bt(e,t){return e==null||e==="http://www.w3.org/1999/xhtml"?Wa(t):e==="http://www.w3.org/2000/svg"&&t==="foreignObject"?"http://www.w3.org/1999/xhtml":e}var Y8,Va=function(e){return typeof MSApp<"u"&&MSApp.execUnsafeLocalFunction?function(t,r,n,i){MSApp.execUnsafeLocalFunction(function(){return e(t,r,n,i)})}:e}(function(e,t){if(e.namespaceURI!=="http://www.w3.org/2000/svg"||"innerHTML"in e)e.innerHTML=t;else{for(Y8=Y8||document.createElement("div"),Y8.innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=Y8.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}});function e8(e,t){if(t){var r=e.firstChild;if(r&&r===e.lastChild&&r.nodeType===3){r.nodeValue=t;return}}e.textContent=t}var j6={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},_d=["Webkit","ms","Moz","O"];Object.keys(j6).forEach(function(e){_d.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),j6[t]=j6[e]})});function Ka(e,t,r){return t==null||typeof t=="boolean"||t===""?"":r||typeof t!="number"||t===0||j6.hasOwnProperty(e)&&j6[e]?(""+t).trim():t+"px"}function Ga(e,t){e=e.style;for(var r in t)if(t.hasOwnProperty(r)){var n=r.indexOf("--")===0,i=Ka(r,t[r],n);r==="float"&&(r="cssFloat"),n?e.setProperty(r,i):e[r]=i}}var Ed=d3({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Ct(e,t){if(t){if(Ed[e]&&(t.children!=null||t.dangerouslySetInnerHTML!=null))throw Error(G(137,e));if(t.dangerouslySetInnerHTML!=null){if(t.children!=null)throw Error(G(60));if(typeof t.dangerouslySetInnerHTML!="object"||!("__html"in t.dangerouslySetInnerHTML))throw Error(G(61))}if(t.style!=null&&typeof t.style!="object")throw Error(G(62))}}function At(e,t){if(e.indexOf("-")===-1)return typeof t.is=="string";switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var Bt=null;function jr(e){return e=e.target||e.srcElement||window,e.correspondingUseElement&&(e=e.correspondingUseElement),e.nodeType===3?e.parentNode:e}var Tt=null,T1=null,I1=null;function Ti(e){if(e=$8(e)){if(typeof Tt!="function")throw Error(G(280));var t=e.stateNode;t&&(t=b7(t),Tt(e.stateNode,e.type,t))}}function Qa(e){T1?I1?I1.push(e):I1=[e]:T1=e}function Ya(){if(T1){var e=T1,t=I1;if(I1=T1=null,Ti(e),t)for(e=0;e<t.length;e++)Ti(t[e])}}function Ja(e,t){return e(t)}function Xa(){}var Oe=!1;function Za(e,t,r){if(Oe)return e(t,r);Oe=!0;try{return Ja(e,t,r)}finally{Oe=!1,(T1!==null||I1!==null)&&(Xa(),Ya())}}function t8(e,t){var r=e.stateNode;if(r===null)return null;var n=b7(r);if(n===null)return null;r=n[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(n=!n.disabled)||(e=e.type,n=!(e==="button"||e==="input"||e==="select"||e==="textarea")),e=!n;break e;default:e=!1}if(e)return null;if(r&&typeof r!="function")throw Error(G(231,t,typeof r));return r}var It=!1;if(T4)try{var x6={};Object.defineProperty(x6,"passive",{get:function(){It=!0}}),window.addEventListener("test",x6,x6),window.removeEventListener("test",x6,x6)}catch{It=!1}function Sd(e,t,r,n,i,o,s,a,l){var u=Array.prototype.slice.call(arguments,3);try{t.apply(r,u)}catch(h){this.onError(h)}}var H6=!1,L9=null,M9=!1,Ft=null,bd={onError:function(e){H6=!0,L9=e}};function Cd(e,t,r,n,i,o,s,a,l){H6=!1,L9=null,Sd.apply(bd,arguments)}function Ad(e,t,r,n,i,o,s,a,l){if(Cd.apply(this,arguments),H6){if(H6){var u=L9;H6=!1,L9=null}else throw Error(G(198));M9||(M9=!0,Ft=u)}}function r1(e){var t=e,r=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do t=e,t.flags&4098&&(r=t.return),e=t.return;while(e)}return t.tag===3?r:null}function eu(e){if(e.tag===13){var t=e.memoizedState;if(t===null&&(e=e.alternate,e!==null&&(t=e.memoizedState)),t!==null)return t.dehydrated}return null}function Ii(e){if(r1(e)!==e)throw Error(G(188))}function Bd(e){var t=e.alternate;if(!t){if(t=r1(e),t===null)throw Error(G(188));return t!==e?null:e}for(var r=e,n=t;;){var i=r.return;if(i===null)break;var o=i.alternate;if(o===null){if(n=i.return,n!==null){r=n;continue}break}if(i.child===o.child){for(o=i.child;o;){if(o===r)return Ii(i),e;if(o===n)return Ii(i),t;o=o.sibling}throw Error(G(188))}if(r.return!==n.return)r=i,n=o;else{for(var s=!1,a=i.child;a;){if(a===r){s=!0,r=i,n=o;break}if(a===n){s=!0,n=i,r=o;break}a=a.sibling}if(!s){for(a=o.child;a;){if(a===r){s=!0,r=o,n=i;break}if(a===n){s=!0,n=o,r=i;break}a=a.sibling}if(!s)throw Error(G(189))}}if(r.alternate!==n)throw Error(G(190))}if(r.tag!==3)throw Error(G(188));return r.stateNode.current===r?e:t}function tu(e){return e=Bd(e),e!==null?ru(e):null}function ru(e){if(e.tag===5||e.tag===6)return e;for(e=e.child;e!==null;){var t=ru(e);if(t!==null)return t;e=e.sibling}return null}var nu=g0.unstable_scheduleCallback,Fi=g0.unstable_cancelCallback,Td=g0.unstable_shouldYield,Id=g0.unstable_requestPaint,E3=g0.unstable_now,Fd=g0.unstable_getCurrentPriorityLevel,Hr=g0.unstable_ImmediatePriority,iu=g0.unstable_UserBlockingPriority,z9=g0.unstable_NormalPriority,Rd=g0.unstable_LowPriority,ou=g0.unstable_IdlePriority,w7=null,u4=null;function kd(e){if(u4&&typeof u4.onCommitFiberRoot=="function")try{u4.onCommitFiberRoot(w7,e,void 0,(e.current.flags&128)===128)}catch{}}var V0=Math.clz32?Math.clz32:Dd,Pd=Math.log,Od=Math.LN2;function Dd(e){return e>>>=0,e===0?32:31-(Pd(e)/Od|0)|0}var J8=64,X8=4194304;function L6(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return e&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return e&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function j9(e,t){var r=e.pendingLanes;if(r===0)return 0;var n=0,i=e.suspendedLanes,o=e.pingedLanes,s=r&268435455;if(s!==0){var a=s&~i;a!==0?n=L6(a):(o&=s,o!==0&&(n=L6(o)))}else s=r&~i,s!==0?n=L6(s):o!==0&&(n=L6(o));if(n===0)return 0;if(t!==0&&t!==n&&!(t&i)&&(i=n&-n,o=t&-t,i>=o||i===16&&(o&4194240)!==0))return t;if(n&4&&(n|=r&16),t=e.entangledLanes,t!==0)for(e=e.entanglements,t&=n;0<t;)r=31-V0(t),i=1<<r,n|=e[r],t&=~i;return n}function Ud(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function Nd(e,t){for(var r=e.suspendedLanes,n=e.pingedLanes,i=e.expirationTimes,o=e.pendingLanes;0<o;){var s=31-V0(o),a=1<<s,l=i[s];l===-1?(!(a&r)||a&n)&&(i[s]=Ud(a,t)):l<=t&&(e.expiredLanes|=a),o&=~a}}function Rt(e){return e=e.pendingLanes&-1073741825,e!==0?e:e&1073741824?1073741824:0}function su(){var e=J8;return J8<<=1,!(J8&4194240)&&(J8=64),e}function De(e){for(var t=[],r=0;31>r;r++)t.push(e);return t}function U8(e,t,r){e.pendingLanes|=t,t!==536870912&&(e.suspendedLanes=0,e.pingedLanes=0),e=e.eventTimes,t=31-V0(t),e[t]=r}function $d(e,t){var r=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var n=e.eventTimes;for(e=e.expirationTimes;0<r;){var i=31-V0(r),o=1<<i;t[i]=0,n[i]=-1,e[i]=-1,r&=~o}}function qr(e,t){var r=e.entangledLanes|=t;for(e=e.entanglements;r;){var n=31-V0(r),i=1<<n;i&t|e[n]&t&&(e[n]|=t),r&=~i}}var X2=0;function au(e){return e&=-e,1<e?4<e?e&268435455?16:536870912:4:1}var uu,Wr,lu,cu,fu,kt=!1,Z8=[],i5=null,o5=null,s5=null,r8=new Map,n8=new Map,V4=[],Ld="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Ri(e,t){switch(e){case"focusin":case"focusout":i5=null;break;case"dragenter":case"dragleave":o5=null;break;case"mouseover":case"mouseout":s5=null;break;case"pointerover":case"pointerout":r8.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":n8.delete(t.pointerId)}}function w6(e,t,r,n,i,o){return e===null||e.nativeEvent!==o?(e={blockedOn:t,domEventName:r,eventSystemFlags:n,nativeEvent:o,targetContainers:[i]},t!==null&&(t=$8(t),t!==null&&Wr(t)),e):(e.eventSystemFlags|=n,t=e.targetContainers,i!==null&&t.indexOf(i)===-1&&t.push(i),e)}function Md(e,t,r,n,i){switch(t){case"focusin":return i5=w6(i5,e,t,r,n,i),!0;case"dragenter":return o5=w6(o5,e,t,r,n,i),!0;case"mouseover":return s5=w6(s5,e,t,r,n,i),!0;case"pointerover":var o=i.pointerId;return r8.set(o,w6(r8.get(o)||null,e,t,r,n,i)),!0;case"gotpointercapture":return o=i.pointerId,n8.set(o,w6(n8.get(o)||null,e,t,r,n,i)),!0}return!1}function du(e){var t=D5(e.target);if(t!==null){var r=r1(t);if(r!==null){if(t=r.tag,t===13){if(t=eu(r),t!==null){e.blockedOn=t,fu(e.priority,function(){lu(r)});return}}else if(t===3&&r.stateNode.current.memoizedState.isDehydrated){e.blockedOn=r.tag===3?r.stateNode.containerInfo:null;return}}}e.blockedOn=null}function _9(e){if(e.blockedOn!==null)return!1;for(var t=e.targetContainers;0<t.length;){var r=Pt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(r===null){r=e.nativeEvent;var n=new r.constructor(r.type,r);Bt=n,r.target.dispatchEvent(n),Bt=null}else return t=$8(r),t!==null&&Wr(t),e.blockedOn=r,!1;t.shift()}return!0}function ki(e,t,r){_9(e)&&r.delete(t)}function zd(){kt=!1,i5!==null&&_9(i5)&&(i5=null),o5!==null&&_9(o5)&&(o5=null),s5!==null&&_9(s5)&&(s5=null),r8.forEach(ki),n8.forEach(ki)}function _6(e,t){e.blockedOn===t&&(e.blockedOn=null,kt||(kt=!0,g0.unstable_scheduleCallback(g0.unstable_NormalPriority,zd)))}function i8(e){function t(i){return _6(i,e)}if(0<Z8.length){_6(Z8[0],e);for(var r=1;r<Z8.length;r++){var n=Z8[r];n.blockedOn===e&&(n.blockedOn=null)}}for(i5!==null&&_6(i5,e),o5!==null&&_6(o5,e),s5!==null&&_6(s5,e),r8.forEach(t),n8.forEach(t),r=0;r<V4.length;r++)n=V4[r],n.blockedOn===e&&(n.blockedOn=null);for(;0<V4.length&&(r=V4[0],r.blockedOn===null);)du(r),r.blockedOn===null&&V4.shift()}var F1=k4.ReactCurrentBatchConfig,H9=!0;function jd(e,t,r,n){var i=X2,o=F1.transition;F1.transition=null;try{X2=1,Vr(e,t,r,n)}finally{X2=i,F1.transition=o}}function Hd(e,t,r,n){var i=X2,o=F1.transition;F1.transition=null;try{X2=4,Vr(e,t,r,n)}finally{X2=i,F1.transition=o}}function Vr(e,t,r,n){if(H9){var i=Pt(e,t,r,n);if(i===null)We(e,t,n,q9,r),Ri(e,n);else if(Md(i,e,t,r,n))n.stopPropagation();else if(Ri(e,n),t&4&&-1<Ld.indexOf(e)){for(;i!==null;){var o=$8(i);if(o!==null&&uu(o),o=Pt(e,t,r,n),o===null&&We(e,t,n,q9,r),o===i)break;i=o}i!==null&&n.stopPropagation()}else We(e,t,n,null,r)}}var q9=null;function Pt(e,t,r,n){if(q9=null,e=jr(n),e=D5(e),e!==null)if(t=r1(e),t===null)e=null;else if(r=t.tag,r===13){if(e=eu(t),e!==null)return e;e=null}else if(r===3){if(t.stateNode.current.memoizedState.isDehydrated)return t.tag===3?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return q9=e,null}function hu(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Fd()){case Hr:return 1;case iu:return 4;case z9:case Rd:return 16;case ou:return 536870912;default:return 16}default:return 16}}var r5=null,Kr=null,E9=null;function pu(){if(E9)return E9;var e,t=Kr,r=t.length,n,i="value"in r5?r5.value:r5.textContent,o=i.length;for(e=0;e<r&&t[e]===i[e];e++);var s=r-e;for(n=1;n<=s&&t[r-n]===i[o-n];n++);return E9=i.slice(e,1<n?1-n:void 0)}function S9(e){var t=e.keyCode;return"charCode"in e?(e=e.charCode,e===0&&t===13&&(e=13)):e=t,e===10&&(e=13),32<=e||e===13?e:0}function e9(){return!0}function Pi(){return!1}function w0(e){function t(r,n,i,o,s){this._reactName=r,this._targetInst=i,this.type=n,this.nativeEvent=o,this.target=s,this.currentTarget=null;for(var a in e)e.hasOwnProperty(a)&&(r=e[a],this[a]=r?r(o):o[a]);return this.isDefaultPrevented=(o.defaultPrevented!=null?o.defaultPrevented:o.returnValue===!1)?e9:Pi,this.isPropagationStopped=Pi,this}return d3(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var r=this.nativeEvent;r&&(r.preventDefault?r.preventDefault():typeof r.returnValue!="unknown"&&(r.returnValue=!1),this.isDefaultPrevented=e9)},stopPropagation:function(){var r=this.nativeEvent;r&&(r.stopPropagation?r.stopPropagation():typeof r.cancelBubble!="unknown"&&(r.cancelBubble=!0),this.isPropagationStopped=e9)},persist:function(){},isPersistent:e9}),t}var l6={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},Gr=w0(l6),N8=d3({},l6,{view:0,detail:0}),qd=w0(N8),Ue,Ne,E6,_7=d3({},N8,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Qr,button:0,buttons:0,relatedTarget:function(e){return e.relatedTarget===void 0?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==E6&&(E6&&e.type==="mousemove"?(Ue=e.screenX-E6.screenX,Ne=e.screenY-E6.screenY):Ne=Ue=0,E6=e),Ue)},movementY:function(e){return"movementY"in e?e.movementY:Ne}}),Oi=w0(_7),Wd=d3({},_7,{dataTransfer:0}),Vd=w0(Wd),Kd=d3({},N8,{relatedTarget:0}),$e=w0(Kd),Gd=d3({},l6,{animationName:0,elapsedTime:0,pseudoElement:0}),Qd=w0(Gd),Yd=d3({},l6,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Jd=w0(Yd),Xd=d3({},l6,{data:0}),Di=w0(Xd),Zd={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},eh={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},th={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function rh(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):(e=th[e])?!!t[e]:!1}function Qr(){return rh}var nh=d3({},N8,{key:function(e){if(e.key){var t=Zd[e.key]||e.key;if(t!=="Unidentified")return t}return e.type==="keypress"?(e=S9(e),e===13?"Enter":String.fromCharCode(e)):e.type==="keydown"||e.type==="keyup"?eh[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Qr,charCode:function(e){return e.type==="keypress"?S9(e):0},keyCode:function(e){return e.type==="keydown"||e.type==="keyup"?e.keyCode:0},which:function(e){return e.type==="keypress"?S9(e):e.type==="keydown"||e.type==="keyup"?e.keyCode:0}}),ih=w0(nh),oh=d3({},_7,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Ui=w0(oh),sh=d3({},N8,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Qr}),ah=w0(sh),uh=d3({},l6,{propertyName:0,elapsedTime:0,pseudoElement:0}),lh=w0(uh),ch=d3({},_7,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),fh=w0(ch),dh=[9,13,27,32],Yr=T4&&"CompositionEvent"in window,q6=null;T4&&"documentMode"in document&&(q6=document.documentMode);var hh=T4&&"TextEvent"in window&&!q6,yu=T4&&(!Yr||q6&&8<q6&&11>=q6),Ni=String.fromCharCode(32),$i=!1;function vu(e,t){switch(e){case"keyup":return dh.indexOf(t.keyCode)!==-1;case"keydown":return t.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function gu(e){return e=e.detail,typeof e=="object"&&"data"in e?e.data:null}var y1=!1;function ph(e,t){switch(e){case"compositionend":return gu(t);case"keypress":return t.which!==32?null:($i=!0,Ni);case"textInput":return e=t.data,e===Ni&&$i?null:e;default:return null}}function yh(e,t){if(y1)return e==="compositionend"||!Yr&&vu(e,t)?(e=pu(),E9=Kr=r5=null,y1=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return yu&&t.locale!=="ko"?null:t.data;default:return null}}var vh={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Li(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t==="input"?!!vh[e.type]:t==="textarea"}function mu(e,t,r,n){Qa(n),t=W9(t,"onChange"),0<t.length&&(r=new Gr("onChange","change",null,r,n),e.push({event:r,listeners:t}))}var W6=null,o8=null;function gh(e){Iu(e,0)}function E7(e){var t=m1(e);if(ja(t))return e}function mh(e,t){if(e==="change")return t}var xu=!1;if(T4){var Le;if(T4){var Me="oninput"in document;if(!Me){var Mi=document.createElement("div");Mi.setAttribute("oninput","return;"),Me=typeof Mi.oninput=="function"}Le=Me}else Le=!1;xu=Le&&(!document.documentMode||9<document.documentMode)}function zi(){W6&&(W6.detachEvent("onpropertychange",wu),o8=W6=null)}function wu(e){if(e.propertyName==="value"&&E7(o8)){var t=[];mu(t,o8,e,jr(e)),Za(gh,t)}}function xh(e,t,r){e==="focusin"?(zi(),W6=t,o8=r,W6.attachEvent("onpropertychange",wu)):e==="focusout"&&zi()}function wh(e){if(e==="selectionchange"||e==="keyup"||e==="keydown")return E7(o8)}function _h(e,t){if(e==="click")return E7(t)}function Eh(e,t){if(e==="input"||e==="change")return E7(t)}function Sh(e,t){return e===t&&(e!==0||1/e===1/t)||e!==e&&t!==t}var Q0=typeof Object.is=="function"?Object.is:Sh;function s8(e,t){if(Q0(e,t))return!0;if(typeof e!="object"||e===null||typeof t!="object"||t===null)return!1;var r=Object.keys(e),n=Object.keys(t);if(r.length!==n.length)return!1;for(n=0;n<r.length;n++){var i=r[n];if(!yt.call(t,i)||!Q0(e[i],t[i]))return!1}return!0}function ji(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Hi(e,t){var r=ji(e);e=0;for(var n;r;){if(r.nodeType===3){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=ji(r)}}function _u(e,t){return e&&t?e===t?!0:e&&e.nodeType===3?!1:t&&t.nodeType===3?_u(e,t.parentNode):"contains"in e?e.contains(t):e.compareDocumentPosition?!!(e.compareDocumentPosition(t)&16):!1:!1}function Eu(){for(var e=window,t=$9();t instanceof e.HTMLIFrameElement;){try{var r=typeof t.contentWindow.location.href=="string"}catch{r=!1}if(r)e=t.contentWindow;else break;t=$9(e.document)}return t}function Jr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&(t==="input"&&(e.type==="text"||e.type==="search"||e.type==="tel"||e.type==="url"||e.type==="password")||t==="textarea"||e.contentEditable==="true")}function bh(e){var t=Eu(),r=e.focusedElem,n=e.selectionRange;if(t!==r&&r&&r.ownerDocument&&_u(r.ownerDocument.documentElement,r)){if(n!==null&&Jr(r)){if(t=n.start,e=n.end,e===void 0&&(e=t),"selectionStart"in r)r.selectionStart=t,r.selectionEnd=Math.min(e,r.value.length);else if(e=(t=r.ownerDocument||document)&&t.defaultView||window,e.getSelection){e=e.getSelection();var i=r.textContent.length,o=Math.min(n.start,i);n=n.end===void 0?o:Math.min(n.end,i),!e.extend&&o>n&&(i=n,n=o,o=i),i=Hi(r,o);var s=Hi(r,n);i&&s&&(e.rangeCount!==1||e.anchorNode!==i.node||e.anchorOffset!==i.offset||e.focusNode!==s.node||e.focusOffset!==s.offset)&&(t=t.createRange(),t.setStart(i.node,i.offset),e.removeAllRanges(),o>n?(e.addRange(t),e.extend(s.node,s.offset)):(t.setEnd(s.node,s.offset),e.addRange(t)))}}for(t=[],e=r;e=e.parentNode;)e.nodeType===1&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for(typeof r.focus=="function"&&r.focus(),r=0;r<t.length;r++)e=t[r],e.element.scrollLeft=e.left,e.element.scrollTop=e.top}}var Ch=T4&&"documentMode"in document&&11>=document.documentMode,v1=null,Ot=null,V6=null,Dt=!1;function qi(e,t,r){var n=r.window===r?r.document:r.nodeType===9?r:r.ownerDocument;Dt||v1==null||v1!==$9(n)||(n=v1,"selectionStart"in n&&Jr(n)?n={start:n.selectionStart,end:n.selectionEnd}:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection(),n={anchorNode:n.anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset}),V6&&s8(V6,n)||(V6=n,n=W9(Ot,"onSelect"),0<n.length&&(t=new Gr("onSelect","select",null,t,r),e.push({event:t,listeners:n}),t.target=v1)))}function t9(e,t){var r={};return r[e.toLowerCase()]=t.toLowerCase(),r["Webkit"+e]="webkit"+t,r["Moz"+e]="moz"+t,r}var g1={animationend:t9("Animation","AnimationEnd"),animationiteration:t9("Animation","AnimationIteration"),animationstart:t9("Animation","AnimationStart"),transitionend:t9("Transition","TransitionEnd")},ze={},Su={};T4&&(Su=document.createElement("div").style,"AnimationEvent"in window||(delete g1.animationend.animation,delete g1.animationiteration.animation,delete g1.animationstart.animation),"TransitionEvent"in window||delete g1.transitionend.transition);function S7(e){if(ze[e])return ze[e];if(!g1[e])return e;var t=g1[e],r;for(r in t)if(t.hasOwnProperty(r)&&r in Su)return ze[e]=t[r];return e}var bu=S7("animationend"),Cu=S7("animationiteration"),Au=S7("animationstart"),Bu=S7("transitionend"),Tu=new Map,Wi="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function y5(e,t){Tu.set(e,t),t1(t,[e])}for(var je=0;je<Wi.length;je++){var He=Wi[je],Ah=He.toLowerCase(),Bh=He[0].toUpperCase()+He.slice(1);y5(Ah,"on"+Bh)}y5(bu,"onAnimationEnd");y5(Cu,"onAnimationIteration");y5(Au,"onAnimationStart");y5("dblclick","onDoubleClick");y5("focusin","onFocus");y5("focusout","onBlur");y5(Bu,"onTransitionEnd");X1("onMouseEnter",["mouseout","mouseover"]);X1("onMouseLeave",["mouseout","mouseover"]);X1("onPointerEnter",["pointerout","pointerover"]);X1("onPointerLeave",["pointerout","pointerover"]);t1("onChange","change click focusin focusout input keydown keyup selectionchange".split(" "));t1("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));t1("onBeforeInput",["compositionend","keypress","textInput","paste"]);t1("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" "));t1("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" "));t1("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var M6="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Th=new Set("cancel close invalid load scroll toggle".split(" ").concat(M6));function Vi(e,t,r){var n=e.type||"unknown-event";e.currentTarget=r,Ad(n,t,void 0,e),e.currentTarget=null}function Iu(e,t){t=(t&4)!==0;for(var r=0;r<e.length;r++){var n=e[r],i=n.event;n=n.listeners;e:{var o=void 0;if(t)for(var s=n.length-1;0<=s;s--){var a=n[s],l=a.instance,u=a.currentTarget;if(a=a.listener,l!==o&&i.isPropagationStopped())break e;Vi(i,a,u),o=l}else for(s=0;s<n.length;s++){if(a=n[s],l=a.instance,u=a.currentTarget,a=a.listener,l!==o&&i.isPropagationStopped())break e;Vi(i,a,u),o=l}}}if(M9)throw e=Ft,M9=!1,Ft=null,e}function i3(e,t){var r=t[Mt];r===void 0&&(r=t[Mt]=new Set);var n=e+"__bubble";r.has(n)||(Fu(t,e,2,!1),r.add(n))}function qe(e,t,r){var n=0;t&&(n|=4),Fu(r,e,n,t)}var r9="_reactListening"+Math.random().toString(36).slice(2);function a8(e){if(!e[r9]){e[r9]=!0,Na.forEach(function(r){r!=="selectionchange"&&(Th.has(r)||qe(r,!1,e),qe(r,!0,e))});var t=e.nodeType===9?e:e.ownerDocument;t===null||t[r9]||(t[r9]=!0,qe("selectionchange",!1,t))}}function Fu(e,t,r,n){switch(hu(t)){case 1:var i=jd;break;case 4:i=Hd;break;default:i=Vr}r=i.bind(null,t,r,e),i=void 0,!It||t!=="touchstart"&&t!=="touchmove"&&t!=="wheel"||(i=!0),n?i!==void 0?e.addEventListener(t,r,{capture:!0,passive:i}):e.addEventListener(t,r,!0):i!==void 0?e.addEventListener(t,r,{passive:i}):e.addEventListener(t,r,!1)}function We(e,t,r,n,i){var o=n;if(!(t&1)&&!(t&2)&&n!==null)e:for(;;){if(n===null)return;var s=n.tag;if(s===3||s===4){var a=n.stateNode.containerInfo;if(a===i||a.nodeType===8&&a.parentNode===i)break;if(s===4)for(s=n.return;s!==null;){var l=s.tag;if((l===3||l===4)&&(l=s.stateNode.containerInfo,l===i||l.nodeType===8&&l.parentNode===i))return;s=s.return}for(;a!==null;){if(s=D5(a),s===null)return;if(l=s.tag,l===5||l===6){n=o=s;continue e}a=a.parentNode}}n=n.return}Za(function(){var u=o,h=jr(r),y=[];e:{var x=Tu.get(e);if(x!==void 0){var b=Gr,C=e;switch(e){case"keypress":if(S9(r)===0)break e;case"keydown":case"keyup":b=ih;break;case"focusin":C="focus",b=$e;break;case"focusout":C="blur",b=$e;break;case"beforeblur":case"afterblur":b=$e;break;case"click":if(r.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":b=Oi;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":b=Vd;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":b=ah;break;case bu:case Cu:case Au:b=Qd;break;case Bu:b=lh;break;case"scroll":b=qd;break;case"wheel":b=fh;break;case"copy":case"cut":case"paste":b=Jd;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":b=Ui}var T=(t&4)!==0,k=!T&&e==="scroll",S=T?x!==null?x+"Capture":null:x;T=[];for(var E=u,A;E!==null;){A=E;var N=A.stateNode;if(A.tag===5&&N!==null&&(A=N,S!==null&&(N=t8(E,S),N!=null&&T.push(u8(E,N,A)))),k)break;E=E.return}0<T.length&&(x=new b(x,C,null,r,h),y.push({event:x,listeners:T}))}}if(!(t&7)){e:{if(x=e==="mouseover"||e==="pointerover",b=e==="mouseout"||e==="pointerout",x&&r!==Bt&&(C=r.relatedTarget||r.fromElement)&&(D5(C)||C[I4]))break e;if((b||x)&&(x=h.window===h?h:(x=h.ownerDocument)?x.defaultView||x.parentWindow:window,b?(C=r.relatedTarget||r.toElement,b=u,C=C?D5(C):null,C!==null&&(k=r1(C),C!==k||C.tag!==5&&C.tag!==6)&&(C=null)):(b=null,C=u),b!==C)){if(T=Oi,N="onMouseLeave",S="onMouseEnter",E="mouse",(e==="pointerout"||e==="pointerover")&&(T=Ui,N="onPointerLeave",S="onPointerEnter",E="pointer"),k=b==null?x:m1(b),A=C==null?x:m1(C),x=new T(N,E+"leave",b,r,h),x.target=k,x.relatedTarget=A,N=null,D5(h)===u&&(T=new T(S,E+"enter",C,r,h),T.target=A,T.relatedTarget=k,N=T),k=N,b&&C)t:{for(T=b,S=C,E=0,A=T;A;A=a1(A))E++;for(A=0,N=S;N;N=a1(N))A++;for(;0<E-A;)T=a1(T),E--;for(;0<A-E;)S=a1(S),A--;for(;E--;){if(T===S||S!==null&&T===S.alternate)break t;T=a1(T),S=a1(S)}T=null}else T=null;b!==null&&Ki(y,x,b,T,!1),C!==null&&k!==null&&Ki(y,k,C,T,!0)}}e:{if(x=u?m1(u):window,b=x.nodeName&&x.nodeName.toLowerCase(),b==="select"||b==="input"&&x.type==="file")var H=mh;else if(Li(x))if(xu)H=Eh;else{H=wh;var W=xh}else(b=x.nodeName)&&b.toLowerCase()==="input"&&(x.type==="checkbox"||x.type==="radio")&&(H=_h);if(H&&(H=H(e,u))){mu(y,H,r,h);break e}W&&W(e,x,u),e==="focusout"&&(W=x._wrapperState)&&W.controlled&&x.type==="number"&&Et(x,"number",x.value)}switch(W=u?m1(u):window,e){case"focusin":(Li(W)||W.contentEditable==="true")&&(v1=W,Ot=u,V6=null);break;case"focusout":V6=Ot=v1=null;break;case"mousedown":Dt=!0;break;case"contextmenu":case"mouseup":case"dragend":Dt=!1,qi(y,r,h);break;case"selectionchange":if(Ch)break;case"keydown":case"keyup":qi(y,r,h)}var Q;if(Yr)e:{switch(e){case"compositionstart":var V="onCompositionStart";break e;case"compositionend":V="onCompositionEnd";break e;case"compositionupdate":V="onCompositionUpdate";break e}V=void 0}else y1?vu(e,r)&&(V="onCompositionEnd"):e==="keydown"&&r.keyCode===229&&(V="onCompositionStart");V&&(yu&&r.locale!=="ko"&&(y1||V!=="onCompositionStart"?V==="onCompositionEnd"&&y1&&(Q=pu()):(r5=h,Kr="value"in r5?r5.value:r5.textContent,y1=!0)),W=W9(u,V),0<W.length&&(V=new Di(V,e,null,r,h),y.push({event:V,listeners:W}),Q?V.data=Q:(Q=gu(r),Q!==null&&(V.data=Q)))),(Q=hh?ph(e,r):yh(e,r))&&(u=W9(u,"onBeforeInput"),0<u.length&&(h=new Di("onBeforeInput","beforeinput",null,r,h),y.push({event:h,listeners:u}),h.data=Q))}Iu(y,t)})}function u8(e,t,r){return{instance:e,listener:t,currentTarget:r}}function W9(e,t){for(var r=t+"Capture",n=[];e!==null;){var i=e,o=i.stateNode;i.tag===5&&o!==null&&(i=o,o=t8(e,r),o!=null&&n.unshift(u8(e,o,i)),o=t8(e,t),o!=null&&n.push(u8(e,o,i))),e=e.return}return n}function a1(e){if(e===null)return null;do e=e.return;while(e&&e.tag!==5);return e||null}function Ki(e,t,r,n,i){for(var o=t._reactName,s=[];r!==null&&r!==n;){var a=r,l=a.alternate,u=a.stateNode;if(l!==null&&l===n)break;a.tag===5&&u!==null&&(a=u,i?(l=t8(r,o),l!=null&&s.unshift(u8(r,l,a))):i||(l=t8(r,o),l!=null&&s.push(u8(r,l,a)))),r=r.return}s.length!==0&&e.push({event:t,listeners:s})}var Ih=/\r\n?/g,Fh=/\u0000|\uFFFD/g;function Gi(e){return(typeof e=="string"?e:""+e).replace(Ih,`
`).replace(Fh,"")}function n9(e,t,r){if(t=Gi(t),Gi(e)!==t&&r)throw Error(G(425))}function V9(){}var Ut=null,Nt=null;function $t(e,t){return e==="textarea"||e==="noscript"||typeof t.children=="string"||typeof t.children=="number"||typeof t.dangerouslySetInnerHTML=="object"&&t.dangerouslySetInnerHTML!==null&&t.dangerouslySetInnerHTML.__html!=null}var Lt=typeof setTimeout=="function"?setTimeout:void 0,Rh=typeof clearTimeout=="function"?clearTimeout:void 0,Qi=typeof Promise=="function"?Promise:void 0,kh=typeof queueMicrotask=="function"?queueMicrotask:typeof Qi<"u"?function(e){return Qi.resolve(null).then(e).catch(Ph)}:Lt;function Ph(e){setTimeout(function(){throw e})}function Ve(e,t){var r=t,n=0;do{var i=r.nextSibling;if(e.removeChild(r),i&&i.nodeType===8)if(r=i.data,r==="/$"){if(n===0){e.removeChild(i),i8(t);return}n--}else r!=="$"&&r!=="$?"&&r!=="$!"||n++;r=i}while(r);i8(t)}function a5(e){for(;e!=null;e=e.nextSibling){var t=e.nodeType;if(t===1||t===3)break;if(t===8){if(t=e.data,t==="$"||t==="$!"||t==="$?")break;if(t==="/$")return null}}return e}function Yi(e){e=e.previousSibling;for(var t=0;e;){if(e.nodeType===8){var r=e.data;if(r==="$"||r==="$!"||r==="$?"){if(t===0)return e;t--}else r==="/$"&&t++}e=e.previousSibling}return null}var c6=Math.random().toString(36).slice(2),s4="__reactFiber$"+c6,l8="__reactProps$"+c6,I4="__reactContainer$"+c6,Mt="__reactEvents$"+c6,Oh="__reactListeners$"+c6,Dh="__reactHandles$"+c6;function D5(e){var t=e[s4];if(t)return t;for(var r=e.parentNode;r;){if(t=r[I4]||r[s4]){if(r=t.alternate,t.child!==null||r!==null&&r.child!==null)for(e=Yi(e);e!==null;){if(r=e[s4])return r;e=Yi(e)}return t}e=r,r=e.parentNode}return null}function $8(e){return e=e[s4]||e[I4],!e||e.tag!==5&&e.tag!==6&&e.tag!==13&&e.tag!==3?null:e}function m1(e){if(e.tag===5||e.tag===6)return e.stateNode;throw Error(G(33))}function b7(e){return e[l8]||null}var zt=[],x1=-1;function v5(e){return{current:e}}function o3(e){0>x1||(e.current=zt[x1],zt[x1]=null,x1--)}function n3(e,t){x1++,zt[x1]=e.current,e.current=t}var h5={},Y3=v5(h5),l0=v5(!1),Q5=h5;function Z1(e,t){var r=e.type.contextTypes;if(!r)return h5;var n=e.stateNode;if(n&&n.__reactInternalMemoizedUnmaskedChildContext===t)return n.__reactInternalMemoizedMaskedChildContext;var i={},o;for(o in r)i[o]=t[o];return n&&(e=e.stateNode,e.__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function c0(e){return e=e.childContextTypes,e!=null}function K9(){o3(l0),o3(Y3)}function Ji(e,t,r){if(Y3.current!==h5)throw Error(G(168));n3(Y3,t),n3(l0,r)}function Ru(e,t,r){var n=e.stateNode;if(t=t.childContextTypes,typeof n.getChildContext!="function")return r;n=n.getChildContext();for(var i in n)if(!(i in t))throw Error(G(108,xd(e)||"Unknown",i));return d3({},r,n)}function G9(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||h5,Q5=Y3.current,n3(Y3,e),n3(l0,l0.current),!0}function Xi(e,t,r){var n=e.stateNode;if(!n)throw Error(G(169));r?(e=Ru(e,t,Q5),n.__reactInternalMemoizedMergedChildContext=e,o3(l0),o3(Y3),n3(Y3,e)):o3(l0),n3(l0,r)}var w4=null,C7=!1,Ke=!1;function ku(e){w4===null?w4=[e]:w4.push(e)}function Uh(e){C7=!0,ku(e)}function g5(){if(!Ke&&w4!==null){Ke=!0;var e=0,t=X2;try{var r=w4;for(X2=1;e<r.length;e++){var n=r[e];do n=n(!0);while(n!==null)}w4=null,C7=!1}catch(i){throw w4!==null&&(w4=w4.slice(e+1)),nu(Hr,g5),i}finally{X2=t,Ke=!1}}return null}var w1=[],_1=0,Q9=null,Y9=0,F0=[],R0=0,Y5=null,E4=1,S4="";function k5(e,t){w1[_1++]=Y9,w1[_1++]=Q9,Q9=e,Y9=t}function Pu(e,t,r){F0[R0++]=E4,F0[R0++]=S4,F0[R0++]=Y5,Y5=e;var n=E4;e=S4;var i=32-V0(n)-1;n&=~(1<<i),r+=1;var o=32-V0(t)+i;if(30<o){var s=i-i%5;o=(n&(1<<s)-1).toString(32),n>>=s,i-=s,E4=1<<32-V0(t)+i|r<<i|n,S4=o+e}else E4=1<<o|r<<i|n,S4=e}function Xr(e){e.return!==null&&(k5(e,1),Pu(e,1,0))}function Zr(e){for(;e===Q9;)Q9=w1[--_1],w1[_1]=null,Y9=w1[--_1],w1[_1]=null;for(;e===Y5;)Y5=F0[--R0],F0[R0]=null,S4=F0[--R0],F0[R0]=null,E4=F0[--R0],F0[R0]=null}var v0=null,y0=null,u3=!1,q0=null;function Ou(e,t){var r=k0(5,null,null,0);r.elementType="DELETED",r.stateNode=t,r.return=e,t=e.deletions,t===null?(e.deletions=[r],e.flags|=16):t.push(r)}function Zi(e,t){switch(e.tag){case 5:var r=e.type;return t=t.nodeType!==1||r.toLowerCase()!==t.nodeName.toLowerCase()?null:t,t!==null?(e.stateNode=t,v0=e,y0=a5(t.firstChild),!0):!1;case 6:return t=e.pendingProps===""||t.nodeType!==3?null:t,t!==null?(e.stateNode=t,v0=e,y0=null,!0):!1;case 13:return t=t.nodeType!==8?null:t,t!==null?(r=Y5!==null?{id:E4,overflow:S4}:null,e.memoizedState={dehydrated:t,treeContext:r,retryLane:1073741824},r=k0(18,null,null,0),r.stateNode=t,r.return=e,e.child=r,v0=e,y0=null,!0):!1;default:return!1}}function jt(e){return(e.mode&1)!==0&&(e.flags&128)===0}function Ht(e){if(u3){var t=y0;if(t){var r=t;if(!Zi(e,t)){if(jt(e))throw Error(G(418));t=a5(r.nextSibling);var n=v0;t&&Zi(e,t)?Ou(n,r):(e.flags=e.flags&-4097|2,u3=!1,v0=e)}}else{if(jt(e))throw Error(G(418));e.flags=e.flags&-4097|2,u3=!1,v0=e}}}function eo(e){for(e=e.return;e!==null&&e.tag!==5&&e.tag!==3&&e.tag!==13;)e=e.return;v0=e}function i9(e){if(e!==v0)return!1;if(!u3)return eo(e),u3=!0,!1;var t;if((t=e.tag!==3)&&!(t=e.tag!==5)&&(t=e.type,t=t!=="head"&&t!=="body"&&!$t(e.type,e.memoizedProps)),t&&(t=y0)){if(jt(e))throw Du(),Error(G(418));for(;t;)Ou(e,t),t=a5(t.nextSibling)}if(eo(e),e.tag===13){if(e=e.memoizedState,e=e!==null?e.dehydrated:null,!e)throw Error(G(317));e:{for(e=e.nextSibling,t=0;e;){if(e.nodeType===8){var r=e.data;if(r==="/$"){if(t===0){y0=a5(e.nextSibling);break e}t--}else r!=="$"&&r!=="$!"&&r!=="$?"||t++}e=e.nextSibling}y0=null}}else y0=v0?a5(e.stateNode.nextSibling):null;return!0}function Du(){for(var e=y0;e;)e=a5(e.nextSibling)}function e6(){y0=v0=null,u3=!1}function en(e){q0===null?q0=[e]:q0.push(e)}var Nh=k4.ReactCurrentBatchConfig;function M0(e,t){if(e&&e.defaultProps){t=d3({},t),e=e.defaultProps;for(var r in e)t[r]===void 0&&(t[r]=e[r]);return t}return t}var J9=v5(null),X9=null,E1=null,tn=null;function rn(){tn=E1=X9=null}function nn(e){var t=J9.current;o3(J9),e._currentValue=t}function qt(e,t,r){for(;e!==null;){var n=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,n!==null&&(n.childLanes|=t)):n!==null&&(n.childLanes&t)!==t&&(n.childLanes|=t),e===r)break;e=e.return}}function R1(e,t){X9=e,tn=E1=null,e=e.dependencies,e!==null&&e.firstContext!==null&&(e.lanes&t&&(u0=!0),e.firstContext=null)}function O0(e){var t=e._currentValue;if(tn!==e)if(e={context:e,memoizedValue:t,next:null},E1===null){if(X9===null)throw Error(G(308));E1=e,X9.dependencies={lanes:0,firstContext:e}}else E1=E1.next=e;return t}var U5=null;function on(e){U5===null?U5=[e]:U5.push(e)}function Uu(e,t,r,n){var i=t.interleaved;return i===null?(r.next=r,on(t)):(r.next=i.next,i.next=r),t.interleaved=r,F4(e,n)}function F4(e,t){e.lanes|=t;var r=e.alternate;for(r!==null&&(r.lanes|=t),r=e,e=e.return;e!==null;)e.childLanes|=t,r=e.alternate,r!==null&&(r.childLanes|=t),r=e,e=e.return;return r.tag===3?r.stateNode:null}var W4=!1;function sn(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Nu(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function C4(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function u5(e,t,r){var n=e.updateQueue;if(n===null)return null;if(n=n.shared,W2&2){var i=n.pending;return i===null?t.next=t:(t.next=i.next,i.next=t),n.pending=t,F4(e,r)}return i=n.interleaved,i===null?(t.next=t,on(n)):(t.next=i.next,i.next=t),n.interleaved=t,F4(e,r)}function b9(e,t,r){if(t=t.updateQueue,t!==null&&(t=t.shared,(r&4194240)!==0)){var n=t.lanes;n&=e.pendingLanes,r|=n,t.lanes=r,qr(e,r)}}function to(e,t){var r=e.updateQueue,n=e.alternate;if(n!==null&&(n=n.updateQueue,r===n)){var i=null,o=null;if(r=r.firstBaseUpdate,r!==null){do{var s={eventTime:r.eventTime,lane:r.lane,tag:r.tag,payload:r.payload,callback:r.callback,next:null};o===null?i=o=s:o=o.next=s,r=r.next}while(r!==null);o===null?i=o=t:o=o.next=t}else i=o=t;r={baseState:n.baseState,firstBaseUpdate:i,lastBaseUpdate:o,shared:n.shared,effects:n.effects},e.updateQueue=r;return}e=r.lastBaseUpdate,e===null?r.firstBaseUpdate=t:e.next=t,r.lastBaseUpdate=t}function Z9(e,t,r,n){var i=e.updateQueue;W4=!1;var o=i.firstBaseUpdate,s=i.lastBaseUpdate,a=i.shared.pending;if(a!==null){i.shared.pending=null;var l=a,u=l.next;l.next=null,s===null?o=u:s.next=u,s=l;var h=e.alternate;h!==null&&(h=h.updateQueue,a=h.lastBaseUpdate,a!==s&&(a===null?h.firstBaseUpdate=u:a.next=u,h.lastBaseUpdate=l))}if(o!==null){var y=i.baseState;s=0,h=u=l=null,a=o;do{var x=a.lane,b=a.eventTime;if((n&x)===x){h!==null&&(h=h.next={eventTime:b,lane:0,tag:a.tag,payload:a.payload,callback:a.callback,next:null});e:{var C=e,T=a;switch(x=t,b=r,T.tag){case 1:if(C=T.payload,typeof C=="function"){y=C.call(b,y,x);break e}y=C;break e;case 3:C.flags=C.flags&-65537|128;case 0:if(C=T.payload,x=typeof C=="function"?C.call(b,y,x):C,x==null)break e;y=d3({},y,x);break e;case 2:W4=!0}}a.callback!==null&&a.lane!==0&&(e.flags|=64,x=i.effects,x===null?i.effects=[a]:x.push(a))}else b={eventTime:b,lane:x,tag:a.tag,payload:a.payload,callback:a.callback,next:null},h===null?(u=h=b,l=y):h=h.next=b,s|=x;if(a=a.next,a===null){if(a=i.shared.pending,a===null)break;x=a,a=x.next,x.next=null,i.lastBaseUpdate=x,i.shared.pending=null}}while(1);if(h===null&&(l=y),i.baseState=l,i.firstBaseUpdate=u,i.lastBaseUpdate=h,t=i.shared.interleaved,t!==null){i=t;do s|=i.lane,i=i.next;while(i!==t)}else o===null&&(i.shared.lanes=0);X5|=s,e.lanes=s,e.memoizedState=y}}function ro(e,t,r){if(e=t.effects,t.effects=null,e!==null)for(t=0;t<e.length;t++){var n=e[t],i=n.callback;if(i!==null){if(n.callback=null,n=r,typeof i!="function")throw Error(G(191,i));i.call(n)}}}var $u=new Ua.Component().refs;function Wt(e,t,r,n){t=e.memoizedState,r=r(n,t),r=r==null?t:d3({},t,r),e.memoizedState=r,e.lanes===0&&(e.updateQueue.baseState=r)}var A7={isMounted:function(e){return(e=e._reactInternals)?r1(e)===e:!1},enqueueSetState:function(e,t,r){e=e._reactInternals;var n=r0(),i=c5(e),o=C4(n,i);o.payload=t,r!=null&&(o.callback=r),t=u5(e,o,i),t!==null&&(K0(t,e,i,n),b9(t,e,i))},enqueueReplaceState:function(e,t,r){e=e._reactInternals;var n=r0(),i=c5(e),o=C4(n,i);o.tag=1,o.payload=t,r!=null&&(o.callback=r),t=u5(e,o,i),t!==null&&(K0(t,e,i,n),b9(t,e,i))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var r=r0(),n=c5(e),i=C4(r,n);i.tag=2,t!=null&&(i.callback=t),t=u5(e,i,n),t!==null&&(K0(t,e,n,r),b9(t,e,n))}};function no(e,t,r,n,i,o,s){return e=e.stateNode,typeof e.shouldComponentUpdate=="function"?e.shouldComponentUpdate(n,o,s):t.prototype&&t.prototype.isPureReactComponent?!s8(r,n)||!s8(i,o):!0}function Lu(e,t,r){var n=!1,i=h5,o=t.contextType;return typeof o=="object"&&o!==null?o=O0(o):(i=c0(t)?Q5:Y3.current,n=t.contextTypes,o=(n=n!=null)?Z1(e,i):h5),t=new t(r,o),e.memoizedState=t.state!==null&&t.state!==void 0?t.state:null,t.updater=A7,e.stateNode=t,t._reactInternals=e,n&&(e=e.stateNode,e.__reactInternalMemoizedUnmaskedChildContext=i,e.__reactInternalMemoizedMaskedChildContext=o),t}function io(e,t,r,n){e=t.state,typeof t.componentWillReceiveProps=="function"&&t.componentWillReceiveProps(r,n),typeof t.UNSAFE_componentWillReceiveProps=="function"&&t.UNSAFE_componentWillReceiveProps(r,n),t.state!==e&&A7.enqueueReplaceState(t,t.state,null)}function Vt(e,t,r,n){var i=e.stateNode;i.props=r,i.state=e.memoizedState,i.refs=$u,sn(e);var o=t.contextType;typeof o=="object"&&o!==null?i.context=O0(o):(o=c0(t)?Q5:Y3.current,i.context=Z1(e,o)),i.state=e.memoizedState,o=t.getDerivedStateFromProps,typeof o=="function"&&(Wt(e,t,o,r),i.state=e.memoizedState),typeof t.getDerivedStateFromProps=="function"||typeof i.getSnapshotBeforeUpdate=="function"||typeof i.UNSAFE_componentWillMount!="function"&&typeof i.componentWillMount!="function"||(t=i.state,typeof i.componentWillMount=="function"&&i.componentWillMount(),typeof i.UNSAFE_componentWillMount=="function"&&i.UNSAFE_componentWillMount(),t!==i.state&&A7.enqueueReplaceState(i,i.state,null),Z9(e,r,i,n),i.state=e.memoizedState),typeof i.componentDidMount=="function"&&(e.flags|=4194308)}function S6(e,t,r){if(e=r.ref,e!==null&&typeof e!="function"&&typeof e!="object"){if(r._owner){if(r=r._owner,r){if(r.tag!==1)throw Error(G(309));var n=r.stateNode}if(!n)throw Error(G(147,e));var i=n,o=""+e;return t!==null&&t.ref!==null&&typeof t.ref=="function"&&t.ref._stringRef===o?t.ref:(t=function(s){var a=i.refs;a===$u&&(a=i.refs={}),s===null?delete a[o]:a[o]=s},t._stringRef=o,t)}if(typeof e!="string")throw Error(G(284));if(!r._owner)throw Error(G(290,e))}return e}function o9(e,t){throw e=Object.prototype.toString.call(t),Error(G(31,e==="[object Object]"?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function oo(e){var t=e._init;return t(e._payload)}function Mu(e){function t(S,E){if(e){var A=S.deletions;A===null?(S.deletions=[E],S.flags|=16):A.push(E)}}function r(S,E){if(!e)return null;for(;E!==null;)t(S,E),E=E.sibling;return null}function n(S,E){for(S=new Map;E!==null;)E.key!==null?S.set(E.key,E):S.set(E.index,E),E=E.sibling;return S}function i(S,E){return S=f5(S,E),S.index=0,S.sibling=null,S}function o(S,E,A){return S.index=A,e?(A=S.alternate,A!==null?(A=A.index,A<E?(S.flags|=2,E):A):(S.flags|=2,E)):(S.flags|=1048576,E)}function s(S){return e&&S.alternate===null&&(S.flags|=2),S}function a(S,E,A,N){return E===null||E.tag!==6?(E=et(A,S.mode,N),E.return=S,E):(E=i(E,A),E.return=S,E)}function l(S,E,A,N){var H=A.type;return H===p1?h(S,E,A.props.children,N,A.key):E!==null&&(E.elementType===H||typeof H=="object"&&H!==null&&H.$$typeof===q4&&oo(H)===E.type)?(N=i(E,A.props),N.ref=S6(S,E,A),N.return=S,N):(N=F9(A.type,A.key,A.props,null,S.mode,N),N.ref=S6(S,E,A),N.return=S,N)}function u(S,E,A,N){return E===null||E.tag!==4||E.stateNode.containerInfo!==A.containerInfo||E.stateNode.implementation!==A.implementation?(E=tt(A,S.mode,N),E.return=S,E):(E=i(E,A.children||[]),E.return=S,E)}function h(S,E,A,N,H){return E===null||E.tag!==7?(E=G5(A,S.mode,N,H),E.return=S,E):(E=i(E,A),E.return=S,E)}function y(S,E,A){if(typeof E=="string"&&E!==""||typeof E=="number")return E=et(""+E,S.mode,A),E.return=S,E;if(typeof E=="object"&&E!==null){switch(E.$$typeof){case G8:return A=F9(E.type,E.key,E.props,null,S.mode,A),A.ref=S6(S,null,E),A.return=S,A;case h1:return E=tt(E,S.mode,A),E.return=S,E;case q4:var N=E._init;return y(S,N(E._payload),A)}if($6(E)||m6(E))return E=G5(E,S.mode,A,null),E.return=S,E;o9(S,E)}return null}function x(S,E,A,N){var H=E!==null?E.key:null;if(typeof A=="string"&&A!==""||typeof A=="number")return H!==null?null:a(S,E,""+A,N);if(typeof A=="object"&&A!==null){switch(A.$$typeof){case G8:return A.key===H?l(S,E,A,N):null;case h1:return A.key===H?u(S,E,A,N):null;case q4:return H=A._init,x(S,E,H(A._payload),N)}if($6(A)||m6(A))return H!==null?null:h(S,E,A,N,null);o9(S,A)}return null}function b(S,E,A,N,H){if(typeof N=="string"&&N!==""||typeof N=="number")return S=S.get(A)||null,a(E,S,""+N,H);if(typeof N=="object"&&N!==null){switch(N.$$typeof){case G8:return S=S.get(N.key===null?A:N.key)||null,l(E,S,N,H);case h1:return S=S.get(N.key===null?A:N.key)||null,u(E,S,N,H);case q4:var W=N._init;return b(S,E,A,W(N._payload),H)}if($6(N)||m6(N))return S=S.get(A)||null,h(E,S,N,H,null);o9(E,N)}return null}function C(S,E,A,N){for(var H=null,W=null,Q=E,V=E=0,y2=null;Q!==null&&V<A.length;V++){Q.index>V?(y2=Q,Q=null):y2=Q.sibling;var h2=x(S,Q,A[V],N);if(h2===null){Q===null&&(Q=y2);break}e&&Q&&h2.alternate===null&&t(S,Q),E=o(h2,E,V),W===null?H=h2:W.sibling=h2,W=h2,Q=y2}if(V===A.length)return r(S,Q),u3&&k5(S,V),H;if(Q===null){for(;V<A.length;V++)Q=y(S,A[V],N),Q!==null&&(E=o(Q,E,V),W===null?H=Q:W.sibling=Q,W=Q);return u3&&k5(S,V),H}for(Q=n(S,Q);V<A.length;V++)y2=b(Q,S,V,A[V],N),y2!==null&&(e&&y2.alternate!==null&&Q.delete(y2.key===null?V:y2.key),E=o(y2,E,V),W===null?H=y2:W.sibling=y2,W=y2);return e&&Q.forEach(function(a3){return t(S,a3)}),u3&&k5(S,V),H}function T(S,E,A,N){var H=m6(A);if(typeof H!="function")throw Error(G(150));if(A=H.call(A),A==null)throw Error(G(151));for(var W=H=null,Q=E,V=E=0,y2=null,h2=A.next();Q!==null&&!h2.done;V++,h2=A.next()){Q.index>V?(y2=Q,Q=null):y2=Q.sibling;var a3=x(S,Q,h2.value,N);if(a3===null){Q===null&&(Q=y2);break}e&&Q&&a3.alternate===null&&t(S,Q),E=o(a3,E,V),W===null?H=a3:W.sibling=a3,W=a3,Q=y2}if(h2.done)return r(S,Q),u3&&k5(S,V),H;if(Q===null){for(;!h2.done;V++,h2=A.next())h2=y(S,h2.value,N),h2!==null&&(E=o(h2,E,V),W===null?H=h2:W.sibling=h2,W=h2);return u3&&k5(S,V),H}for(Q=n(S,Q);!h2.done;V++,h2=A.next())h2=b(Q,S,V,h2.value,N),h2!==null&&(e&&h2.alternate!==null&&Q.delete(h2.key===null?V:h2.key),E=o(h2,E,V),W===null?H=h2:W.sibling=h2,W=h2);return e&&Q.forEach(function(k3){return t(S,k3)}),u3&&k5(S,V),H}function k(S,E,A,N){if(typeof A=="object"&&A!==null&&A.type===p1&&A.key===null&&(A=A.props.children),typeof A=="object"&&A!==null){switch(A.$$typeof){case G8:e:{for(var H=A.key,W=E;W!==null;){if(W.key===H){if(H=A.type,H===p1){if(W.tag===7){r(S,W.sibling),E=i(W,A.props.children),E.return=S,S=E;break e}}else if(W.elementType===H||typeof H=="object"&&H!==null&&H.$$typeof===q4&&oo(H)===W.type){r(S,W.sibling),E=i(W,A.props),E.ref=S6(S,W,A),E.return=S,S=E;break e}r(S,W);break}else t(S,W);W=W.sibling}A.type===p1?(E=G5(A.props.children,S.mode,N,A.key),E.return=S,S=E):(N=F9(A.type,A.key,A.props,null,S.mode,N),N.ref=S6(S,E,A),N.return=S,S=N)}return s(S);case h1:e:{for(W=A.key;E!==null;){if(E.key===W)if(E.tag===4&&E.stateNode.containerInfo===A.containerInfo&&E.stateNode.implementation===A.implementation){r(S,E.sibling),E=i(E,A.children||[]),E.return=S,S=E;break e}else{r(S,E);break}else t(S,E);E=E.sibling}E=tt(A,S.mode,N),E.return=S,S=E}return s(S);case q4:return W=A._init,k(S,E,W(A._payload),N)}if($6(A))return C(S,E,A,N);if(m6(A))return T(S,E,A,N);o9(S,A)}return typeof A=="string"&&A!==""||typeof A=="number"?(A=""+A,E!==null&&E.tag===6?(r(S,E.sibling),E=i(E,A),E.return=S,S=E):(r(S,E),E=et(A,S.mode,N),E.return=S,S=E),s(S)):r(S,E)}return k}var t6=Mu(!0),zu=Mu(!1),L8={},l4=v5(L8),c8=v5(L8),f8=v5(L8);function N5(e){if(e===L8)throw Error(G(174));return e}function an(e,t){switch(n3(f8,t),n3(c8,e),n3(l4,L8),e=t.nodeType,e){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:bt(null,"");break;default:e=e===8?t.parentNode:t,t=e.namespaceURI||null,e=e.tagName,t=bt(t,e)}o3(l4),n3(l4,t)}function r6(){o3(l4),o3(c8),o3(f8)}function ju(e){N5(f8.current);var t=N5(l4.current),r=bt(t,e.type);t!==r&&(n3(c8,e),n3(l4,r))}function un(e){c8.current===e&&(o3(l4),o3(c8))}var c3=v5(0);function e7(e){for(var t=e;t!==null;){if(t.tag===13){var r=t.memoizedState;if(r!==null&&(r=r.dehydrated,r===null||r.data==="$?"||r.data==="$!"))return t}else if(t.tag===19&&t.memoizedProps.revealOrder!==void 0){if(t.flags&128)return t}else if(t.child!==null){t.child.return=t,t=t.child;continue}if(t===e)break;for(;t.sibling===null;){if(t.return===null||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var Ge=[];function ln(){for(var e=0;e<Ge.length;e++)Ge[e]._workInProgressVersionPrimary=null;Ge.length=0}var C9=k4.ReactCurrentDispatcher,Qe=k4.ReactCurrentBatchConfig,J5=0,f3=null,T3=null,O3=null,t7=!1,K6=!1,d8=0,$h=0;function W3(){throw Error(G(321))}function cn(e,t){if(t===null)return!1;for(var r=0;r<t.length&&r<e.length;r++)if(!Q0(e[r],t[r]))return!1;return!0}function fn(e,t,r,n,i,o){if(J5=o,f3=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,C9.current=e===null||e.memoizedState===null?jh:Hh,e=r(n,i),K6){o=0;do{if(K6=!1,d8=0,25<=o)throw Error(G(301));o+=1,O3=T3=null,t.updateQueue=null,C9.current=qh,e=r(n,i)}while(K6)}if(C9.current=r7,t=T3!==null&&T3.next!==null,J5=0,O3=T3=f3=null,t7=!1,t)throw Error(G(300));return e}function dn(){var e=d8!==0;return d8=0,e}function e4(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return O3===null?f3.memoizedState=O3=e:O3=O3.next=e,O3}function D0(){if(T3===null){var e=f3.alternate;e=e!==null?e.memoizedState:null}else e=T3.next;var t=O3===null?f3.memoizedState:O3.next;if(t!==null)O3=t,T3=e;else{if(e===null)throw Error(G(310));T3=e,e={memoizedState:T3.memoizedState,baseState:T3.baseState,baseQueue:T3.baseQueue,queue:T3.queue,next:null},O3===null?f3.memoizedState=O3=e:O3=O3.next=e}return O3}function h8(e,t){return typeof t=="function"?t(e):t}function Ye(e){var t=D0(),r=t.queue;if(r===null)throw Error(G(311));r.lastRenderedReducer=e;var n=T3,i=n.baseQueue,o=r.pending;if(o!==null){if(i!==null){var s=i.next;i.next=o.next,o.next=s}n.baseQueue=i=o,r.pending=null}if(i!==null){o=i.next,n=n.baseState;var a=s=null,l=null,u=o;do{var h=u.lane;if((J5&h)===h)l!==null&&(l=l.next={lane:0,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null}),n=u.hasEagerState?u.eagerState:e(n,u.action);else{var y={lane:h,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null};l===null?(a=l=y,s=n):l=l.next=y,f3.lanes|=h,X5|=h}u=u.next}while(u!==null&&u!==o);l===null?s=n:l.next=a,Q0(n,t.memoizedState)||(u0=!0),t.memoizedState=n,t.baseState=s,t.baseQueue=l,r.lastRenderedState=n}if(e=r.interleaved,e!==null){i=e;do o=i.lane,f3.lanes|=o,X5|=o,i=i.next;while(i!==e)}else i===null&&(r.lanes=0);return[t.memoizedState,r.dispatch]}function Je(e){var t=D0(),r=t.queue;if(r===null)throw Error(G(311));r.lastRenderedReducer=e;var n=r.dispatch,i=r.pending,o=t.memoizedState;if(i!==null){r.pending=null;var s=i=i.next;do o=e(o,s.action),s=s.next;while(s!==i);Q0(o,t.memoizedState)||(u0=!0),t.memoizedState=o,t.baseQueue===null&&(t.baseState=o),r.lastRenderedState=o}return[o,n]}function Hu(){}function qu(e,t){var r=f3,n=D0(),i=t(),o=!Q0(n.memoizedState,i);if(o&&(n.memoizedState=i,u0=!0),n=n.queue,hn(Ku.bind(null,r,n,e),[e]),n.getSnapshot!==t||o||O3!==null&&O3.memoizedState.tag&1){if(r.flags|=2048,p8(9,Vu.bind(null,r,n,i,t),void 0,null),D3===null)throw Error(G(349));J5&30||Wu(r,t,i)}return i}function Wu(e,t,r){e.flags|=16384,e={getSnapshot:t,value:r},t=f3.updateQueue,t===null?(t={lastEffect:null,stores:null},f3.updateQueue=t,t.stores=[e]):(r=t.stores,r===null?t.stores=[e]:r.push(e))}function Vu(e,t,r,n){t.value=r,t.getSnapshot=n,Gu(t)&&Qu(e)}function Ku(e,t,r){return r(function(){Gu(t)&&Qu(e)})}function Gu(e){var t=e.getSnapshot;e=e.value;try{var r=t();return!Q0(e,r)}catch{return!0}}function Qu(e){var t=F4(e,1);t!==null&&K0(t,e,1,-1)}function so(e){var t=e4();return typeof e=="function"&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:h8,lastRenderedState:e},t.queue=e,e=e.dispatch=zh.bind(null,f3,e),[t.memoizedState,e]}function p8(e,t,r,n){return e={tag:e,create:t,destroy:r,deps:n,next:null},t=f3.updateQueue,t===null?(t={lastEffect:null,stores:null},f3.updateQueue=t,t.lastEffect=e.next=e):(r=t.lastEffect,r===null?t.lastEffect=e.next=e:(n=r.next,r.next=e,e.next=n,t.lastEffect=e)),e}function Yu(){return D0().memoizedState}function A9(e,t,r,n){var i=e4();f3.flags|=e,i.memoizedState=p8(1|t,r,void 0,n===void 0?null:n)}function B7(e,t,r,n){var i=D0();n=n===void 0?null:n;var o=void 0;if(T3!==null){var s=T3.memoizedState;if(o=s.destroy,n!==null&&cn(n,s.deps)){i.memoizedState=p8(t,r,o,n);return}}f3.flags|=e,i.memoizedState=p8(1|t,r,o,n)}function ao(e,t){return A9(8390656,8,e,t)}function hn(e,t){return B7(2048,8,e,t)}function Ju(e,t){return B7(4,2,e,t)}function Xu(e,t){return B7(4,4,e,t)}function Zu(e,t){if(typeof t=="function")return e=e(),t(e),function(){t(null)};if(t!=null)return e=e(),t.current=e,function(){t.current=null}}function el(e,t,r){return r=r!=null?r.concat([e]):null,B7(4,4,Zu.bind(null,t,e),r)}function pn(){}function tl(e,t){var r=D0();t=t===void 0?null:t;var n=r.memoizedState;return n!==null&&t!==null&&cn(t,n[1])?n[0]:(r.memoizedState=[e,t],e)}function rl(e,t){var r=D0();t=t===void 0?null:t;var n=r.memoizedState;return n!==null&&t!==null&&cn(t,n[1])?n[0]:(e=e(),r.memoizedState=[e,t],e)}function nl(e,t,r){return J5&21?(Q0(r,t)||(r=su(),f3.lanes|=r,X5|=r,e.baseState=!0),t):(e.baseState&&(e.baseState=!1,u0=!0),e.memoizedState=r)}function Lh(e,t){var r=X2;X2=r!==0&&4>r?r:4,e(!0);var n=Qe.transition;Qe.transition={};try{e(!1),t()}finally{X2=r,Qe.transition=n}}function il(){return D0().memoizedState}function Mh(e,t,r){var n=c5(e);if(r={lane:n,action:r,hasEagerState:!1,eagerState:null,next:null},ol(e))sl(t,r);else if(r=Uu(e,t,r,n),r!==null){var i=r0();K0(r,e,n,i),al(r,t,n)}}function zh(e,t,r){var n=c5(e),i={lane:n,action:r,hasEagerState:!1,eagerState:null,next:null};if(ol(e))sl(t,i);else{var o=e.alternate;if(e.lanes===0&&(o===null||o.lanes===0)&&(o=t.lastRenderedReducer,o!==null))try{var s=t.lastRenderedState,a=o(s,r);if(i.hasEagerState=!0,i.eagerState=a,Q0(a,s)){var l=t.interleaved;l===null?(i.next=i,on(t)):(i.next=l.next,l.next=i),t.interleaved=i;return}}catch{}finally{}r=Uu(e,t,i,n),r!==null&&(i=r0(),K0(r,e,n,i),al(r,t,n))}}function ol(e){var t=e.alternate;return e===f3||t!==null&&t===f3}function sl(e,t){K6=t7=!0;var r=e.pending;r===null?t.next=t:(t.next=r.next,r.next=t),e.pending=t}function al(e,t,r){if(r&4194240){var n=t.lanes;n&=e.pendingLanes,r|=n,t.lanes=r,qr(e,r)}}var r7={readContext:O0,useCallback:W3,useContext:W3,useEffect:W3,useImperativeHandle:W3,useInsertionEffect:W3,useLayoutEffect:W3,useMemo:W3,useReducer:W3,useRef:W3,useState:W3,useDebugValue:W3,useDeferredValue:W3,useTransition:W3,useMutableSource:W3,useSyncExternalStore:W3,useId:W3,unstable_isNewReconciler:!1},jh={readContext:O0,useCallback:function(e,t){return e4().memoizedState=[e,t===void 0?null:t],e},useContext:O0,useEffect:ao,useImperativeHandle:function(e,t,r){return r=r!=null?r.concat([e]):null,A9(4194308,4,Zu.bind(null,t,e),r)},useLayoutEffect:function(e,t){return A9(4194308,4,e,t)},useInsertionEffect:function(e,t){return A9(4,2,e,t)},useMemo:function(e,t){var r=e4();return t=t===void 0?null:t,e=e(),r.memoizedState=[e,t],e},useReducer:function(e,t,r){var n=e4();return t=r!==void 0?r(t):t,n.memoizedState=n.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},n.queue=e,e=e.dispatch=Mh.bind(null,f3,e),[n.memoizedState,e]},useRef:function(e){var t=e4();return e={current:e},t.memoizedState=e},useState:so,useDebugValue:pn,useDeferredValue:function(e){return e4().memoizedState=e},useTransition:function(){var e=so(!1),t=e[0];return e=Lh.bind(null,e[1]),e4().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,r){var n=f3,i=e4();if(u3){if(r===void 0)throw Error(G(407));r=r()}else{if(r=t(),D3===null)throw Error(G(349));J5&30||Wu(n,t,r)}i.memoizedState=r;var o={value:r,getSnapshot:t};return i.queue=o,ao(Ku.bind(null,n,o,e),[e]),n.flags|=2048,p8(9,Vu.bind(null,n,o,r,t),void 0,null),r},useId:function(){var e=e4(),t=D3.identifierPrefix;if(u3){var r=S4,n=E4;r=(n&~(1<<32-V0(n)-1)).toString(32)+r,t=":"+t+"R"+r,r=d8++,0<r&&(t+="H"+r.toString(32)),t+=":"}else r=$h++,t=":"+t+"r"+r.toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},Hh={readContext:O0,useCallback:tl,useContext:O0,useEffect:hn,useImperativeHandle:el,useInsertionEffect:Ju,useLayoutEffect:Xu,useMemo:rl,useReducer:Ye,useRef:Yu,useState:function(){return Ye(h8)},useDebugValue:pn,useDeferredValue:function(e){var t=D0();return nl(t,T3.memoizedState,e)},useTransition:function(){var e=Ye(h8)[0],t=D0().memoizedState;return[e,t]},useMutableSource:Hu,useSyncExternalStore:qu,useId:il,unstable_isNewReconciler:!1},qh={readContext:O0,useCallback:tl,useContext:O0,useEffect:hn,useImperativeHandle:el,useInsertionEffect:Ju,useLayoutEffect:Xu,useMemo:rl,useReducer:Je,useRef:Yu,useState:function(){return Je(h8)},useDebugValue:pn,useDeferredValue:function(e){var t=D0();return T3===null?t.memoizedState=e:nl(t,T3.memoizedState,e)},useTransition:function(){var e=Je(h8)[0],t=D0().memoizedState;return[e,t]},useMutableSource:Hu,useSyncExternalStore:qu,useId:il,unstable_isNewReconciler:!1};function n6(e,t){try{var r="",n=t;do r+=md(n),n=n.return;while(n);var i=r}catch(o){i=`
Error generating stack: `+o.message+`
`+o.stack}return{value:e,source:t,stack:i,digest:null}}function Xe(e,t,r){return{value:e,source:null,stack:r??null,digest:t??null}}function Kt(e,t){try{console.error(t.value)}catch(r){setTimeout(function(){throw r})}}var Wh=typeof WeakMap=="function"?WeakMap:Map;function ul(e,t,r){r=C4(-1,r),r.tag=3,r.payload={element:null};var n=t.value;return r.callback=function(){i7||(i7=!0,nr=n),Kt(e,t)},r}function ll(e,t,r){r=C4(-1,r),r.tag=3;var n=e.type.getDerivedStateFromError;if(typeof n=="function"){var i=t.value;r.payload=function(){return n(i)},r.callback=function(){Kt(e,t)}}var o=e.stateNode;return o!==null&&typeof o.componentDidCatch=="function"&&(r.callback=function(){Kt(e,t),typeof n!="function"&&(l5===null?l5=new Set([this]):l5.add(this));var s=t.stack;this.componentDidCatch(t.value,{componentStack:s!==null?s:""})}),r}function uo(e,t,r){var n=e.pingCache;if(n===null){n=e.pingCache=new Wh;var i=new Set;n.set(t,i)}else i=n.get(t),i===void 0&&(i=new Set,n.set(t,i));i.has(r)||(i.add(r),e=op.bind(null,e,t,r),t.then(e,e))}function lo(e){do{var t;if((t=e.tag===13)&&(t=e.memoizedState,t=t!==null?t.dehydrated!==null:!0),t)return e;e=e.return}while(e!==null);return null}function co(e,t,r,n,i){return e.mode&1?(e.flags|=65536,e.lanes=i,e):(e===t?e.flags|=65536:(e.flags|=128,r.flags|=131072,r.flags&=-52805,r.tag===1&&(r.alternate===null?r.tag=17:(t=C4(-1,1),t.tag=2,u5(r,t,1))),r.lanes|=1),e)}var Vh=k4.ReactCurrentOwner,u0=!1;function e0(e,t,r,n){t.child=e===null?zu(t,null,r,n):t6(t,e.child,r,n)}function fo(e,t,r,n,i){r=r.render;var o=t.ref;return R1(t,i),n=fn(e,t,r,n,o,i),r=dn(),e!==null&&!u0?(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~i,R4(e,t,i)):(u3&&r&&Xr(t),t.flags|=1,e0(e,t,n,i),t.child)}function ho(e,t,r,n,i){if(e===null){var o=r.type;return typeof o=="function"&&!En(o)&&o.defaultProps===void 0&&r.compare===null&&r.defaultProps===void 0?(t.tag=15,t.type=o,cl(e,t,o,n,i)):(e=F9(r.type,null,n,t,t.mode,i),e.ref=t.ref,e.return=t,t.child=e)}if(o=e.child,!(e.lanes&i)){var s=o.memoizedProps;if(r=r.compare,r=r!==null?r:s8,r(s,n)&&e.ref===t.ref)return R4(e,t,i)}return t.flags|=1,e=f5(o,n),e.ref=t.ref,e.return=t,t.child=e}function cl(e,t,r,n,i){if(e!==null){var o=e.memoizedProps;if(s8(o,n)&&e.ref===t.ref)if(u0=!1,t.pendingProps=n=o,(e.lanes&i)!==0)e.flags&131072&&(u0=!0);else return t.lanes=e.lanes,R4(e,t,i)}return Gt(e,t,r,n,i)}function fl(e,t,r){var n=t.pendingProps,i=n.children,o=e!==null?e.memoizedState:null;if(n.mode==="hidden")if(!(t.mode&1))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},n3(b1,p0),p0|=r;else{if(!(r&1073741824))return e=o!==null?o.baseLanes|r:r,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,n3(b1,p0),p0|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},n=o!==null?o.baseLanes:r,n3(b1,p0),p0|=n}else o!==null?(n=o.baseLanes|r,t.memoizedState=null):n=r,n3(b1,p0),p0|=n;return e0(e,t,i,r),t.child}function dl(e,t){var r=t.ref;(e===null&&r!==null||e!==null&&e.ref!==r)&&(t.flags|=512,t.flags|=2097152)}function Gt(e,t,r,n,i){var o=c0(r)?Q5:Y3.current;return o=Z1(t,o),R1(t,i),r=fn(e,t,r,n,o,i),n=dn(),e!==null&&!u0?(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~i,R4(e,t,i)):(u3&&n&&Xr(t),t.flags|=1,e0(e,t,r,i),t.child)}function po(e,t,r,n,i){if(c0(r)){var o=!0;G9(t)}else o=!1;if(R1(t,i),t.stateNode===null)B9(e,t),Lu(t,r,n),Vt(t,r,n,i),n=!0;else if(e===null){var s=t.stateNode,a=t.memoizedProps;s.props=a;var l=s.context,u=r.contextType;typeof u=="object"&&u!==null?u=O0(u):(u=c0(r)?Q5:Y3.current,u=Z1(t,u));var h=r.getDerivedStateFromProps,y=typeof h=="function"||typeof s.getSnapshotBeforeUpdate=="function";y||typeof s.UNSAFE_componentWillReceiveProps!="function"&&typeof s.componentWillReceiveProps!="function"||(a!==n||l!==u)&&io(t,s,n,u),W4=!1;var x=t.memoizedState;s.state=x,Z9(t,n,s,i),l=t.memoizedState,a!==n||x!==l||l0.current||W4?(typeof h=="function"&&(Wt(t,r,h,n),l=t.memoizedState),(a=W4||no(t,r,a,n,x,l,u))?(y||typeof s.UNSAFE_componentWillMount!="function"&&typeof s.componentWillMount!="function"||(typeof s.componentWillMount=="function"&&s.componentWillMount(),typeof s.UNSAFE_componentWillMount=="function"&&s.UNSAFE_componentWillMount()),typeof s.componentDidMount=="function"&&(t.flags|=4194308)):(typeof s.componentDidMount=="function"&&(t.flags|=4194308),t.memoizedProps=n,t.memoizedState=l),s.props=n,s.state=l,s.context=u,n=a):(typeof s.componentDidMount=="function"&&(t.flags|=4194308),n=!1)}else{s=t.stateNode,Nu(e,t),a=t.memoizedProps,u=t.type===t.elementType?a:M0(t.type,a),s.props=u,y=t.pendingProps,x=s.context,l=r.contextType,typeof l=="object"&&l!==null?l=O0(l):(l=c0(r)?Q5:Y3.current,l=Z1(t,l));var b=r.getDerivedStateFromProps;(h=typeof b=="function"||typeof s.getSnapshotBeforeUpdate=="function")||typeof s.UNSAFE_componentWillReceiveProps!="function"&&typeof s.componentWillReceiveProps!="function"||(a!==y||x!==l)&&io(t,s,n,l),W4=!1,x=t.memoizedState,s.state=x,Z9(t,n,s,i);var C=t.memoizedState;a!==y||x!==C||l0.current||W4?(typeof b=="function"&&(Wt(t,r,b,n),C=t.memoizedState),(u=W4||no(t,r,u,n,x,C,l)||!1)?(h||typeof s.UNSAFE_componentWillUpdate!="function"&&typeof s.componentWillUpdate!="function"||(typeof s.componentWillUpdate=="function"&&s.componentWillUpdate(n,C,l),typeof s.UNSAFE_componentWillUpdate=="function"&&s.UNSAFE_componentWillUpdate(n,C,l)),typeof s.componentDidUpdate=="function"&&(t.flags|=4),typeof s.getSnapshotBeforeUpdate=="function"&&(t.flags|=1024)):(typeof s.componentDidUpdate!="function"||a===e.memoizedProps&&x===e.memoizedState||(t.flags|=4),typeof s.getSnapshotBeforeUpdate!="function"||a===e.memoizedProps&&x===e.memoizedState||(t.flags|=1024),t.memoizedProps=n,t.memoizedState=C),s.props=n,s.state=C,s.context=l,n=u):(typeof s.componentDidUpdate!="function"||a===e.memoizedProps&&x===e.memoizedState||(t.flags|=4),typeof s.getSnapshotBeforeUpdate!="function"||a===e.memoizedProps&&x===e.memoizedState||(t.flags|=1024),n=!1)}return Qt(e,t,r,n,o,i)}function Qt(e,t,r,n,i,o){dl(e,t);var s=(t.flags&128)!==0;if(!n&&!s)return i&&Xi(t,r,!1),R4(e,t,o);n=t.stateNode,Vh.current=t;var a=s&&typeof r.getDerivedStateFromError!="function"?null:n.render();return t.flags|=1,e!==null&&s?(t.child=t6(t,e.child,null,o),t.child=t6(t,null,a,o)):e0(e,t,a,o),t.memoizedState=n.state,i&&Xi(t,r,!0),t.child}function hl(e){var t=e.stateNode;t.pendingContext?Ji(e,t.pendingContext,t.pendingContext!==t.context):t.context&&Ji(e,t.context,!1),an(e,t.containerInfo)}function yo(e,t,r,n,i){return e6(),en(i),t.flags|=256,e0(e,t,r,n),t.child}var Yt={dehydrated:null,treeContext:null,retryLane:0};function Jt(e){return{baseLanes:e,cachePool:null,transitions:null}}function pl(e,t,r){var n=t.pendingProps,i=c3.current,o=!1,s=(t.flags&128)!==0,a;if((a=s)||(a=e!==null&&e.memoizedState===null?!1:(i&2)!==0),a?(o=!0,t.flags&=-129):(e===null||e.memoizedState!==null)&&(i|=1),n3(c3,i&1),e===null)return Ht(t),e=t.memoizedState,e!==null&&(e=e.dehydrated,e!==null)?(t.mode&1?e.data==="$!"?t.lanes=8:t.lanes=1073741824:t.lanes=1,null):(s=n.children,e=n.fallback,o?(n=t.mode,o=t.child,s={mode:"hidden",children:s},!(n&1)&&o!==null?(o.childLanes=0,o.pendingProps=s):o=F7(s,n,0,null),e=G5(e,n,r,null),o.return=t,e.return=t,o.sibling=e,t.child=o,t.child.memoizedState=Jt(r),t.memoizedState=Yt,e):yn(t,s));if(i=e.memoizedState,i!==null&&(a=i.dehydrated,a!==null))return Kh(e,t,s,n,a,i,r);if(o){o=n.fallback,s=t.mode,i=e.child,a=i.sibling;var l={mode:"hidden",children:n.children};return!(s&1)&&t.child!==i?(n=t.child,n.childLanes=0,n.pendingProps=l,t.deletions=null):(n=f5(i,l),n.subtreeFlags=i.subtreeFlags&14680064),a!==null?o=f5(a,o):(o=G5(o,s,r,null),o.flags|=2),o.return=t,n.return=t,n.sibling=o,t.child=n,n=o,o=t.child,s=e.child.memoizedState,s=s===null?Jt(r):{baseLanes:s.baseLanes|r,cachePool:null,transitions:s.transitions},o.memoizedState=s,o.childLanes=e.childLanes&~r,t.memoizedState=Yt,n}return o=e.child,e=o.sibling,n=f5(o,{mode:"visible",children:n.children}),!(t.mode&1)&&(n.lanes=r),n.return=t,n.sibling=null,e!==null&&(r=t.deletions,r===null?(t.deletions=[e],t.flags|=16):r.push(e)),t.child=n,t.memoizedState=null,n}function yn(e,t){return t=F7({mode:"visible",children:t},e.mode,0,null),t.return=e,e.child=t}function s9(e,t,r,n){return n!==null&&en(n),t6(t,e.child,null,r),e=yn(t,t.pendingProps.children),e.flags|=2,t.memoizedState=null,e}function Kh(e,t,r,n,i,o,s){if(r)return t.flags&256?(t.flags&=-257,n=Xe(Error(G(422))),s9(e,t,s,n)):t.memoizedState!==null?(t.child=e.child,t.flags|=128,null):(o=n.fallback,i=t.mode,n=F7({mode:"visible",children:n.children},i,0,null),o=G5(o,i,s,null),o.flags|=2,n.return=t,o.return=t,n.sibling=o,t.child=n,t.mode&1&&t6(t,e.child,null,s),t.child.memoizedState=Jt(s),t.memoizedState=Yt,o);if(!(t.mode&1))return s9(e,t,s,null);if(i.data==="$!"){if(n=i.nextSibling&&i.nextSibling.dataset,n)var a=n.dgst;return n=a,o=Error(G(419)),n=Xe(o,n,void 0),s9(e,t,s,n)}if(a=(s&e.childLanes)!==0,u0||a){if(n=D3,n!==null){switch(s&-s){case 4:i=2;break;case 16:i=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:i=32;break;case 536870912:i=268435456;break;default:i=0}i=i&(n.suspendedLanes|s)?0:i,i!==0&&i!==o.retryLane&&(o.retryLane=i,F4(e,i),K0(n,e,i,-1))}return _n(),n=Xe(Error(G(421))),s9(e,t,s,n)}return i.data==="$?"?(t.flags|=128,t.child=e.child,t=sp.bind(null,e),i._reactRetry=t,null):(e=o.treeContext,y0=a5(i.nextSibling),v0=t,u3=!0,q0=null,e!==null&&(F0[R0++]=E4,F0[R0++]=S4,F0[R0++]=Y5,E4=e.id,S4=e.overflow,Y5=t),t=yn(t,n.children),t.flags|=4096,t)}function vo(e,t,r){e.lanes|=t;var n=e.alternate;n!==null&&(n.lanes|=t),qt(e.return,t,r)}function Ze(e,t,r,n,i){var o=e.memoizedState;o===null?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:n,tail:r,tailMode:i}:(o.isBackwards=t,o.rendering=null,o.renderingStartTime=0,o.last=n,o.tail=r,o.tailMode=i)}function yl(e,t,r){var n=t.pendingProps,i=n.revealOrder,o=n.tail;if(e0(e,t,n.children,r),n=c3.current,n&2)n=n&1|2,t.flags|=128;else{if(e!==null&&e.flags&128)e:for(e=t.child;e!==null;){if(e.tag===13)e.memoizedState!==null&&vo(e,r,t);else if(e.tag===19)vo(e,r,t);else if(e.child!==null){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;e.sibling===null;){if(e.return===null||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}n&=1}if(n3(c3,n),!(t.mode&1))t.memoizedState=null;else switch(i){case"forwards":for(r=t.child,i=null;r!==null;)e=r.alternate,e!==null&&e7(e)===null&&(i=r),r=r.sibling;r=i,r===null?(i=t.child,t.child=null):(i=r.sibling,r.sibling=null),Ze(t,!1,i,r,o);break;case"backwards":for(r=null,i=t.child,t.child=null;i!==null;){if(e=i.alternate,e!==null&&e7(e)===null){t.child=i;break}e=i.sibling,i.sibling=r,r=i,i=e}Ze(t,!0,r,null,o);break;case"together":Ze(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function B9(e,t){!(t.mode&1)&&e!==null&&(e.alternate=null,t.alternate=null,t.flags|=2)}function R4(e,t,r){if(e!==null&&(t.dependencies=e.dependencies),X5|=t.lanes,!(r&t.childLanes))return null;if(e!==null&&t.child!==e.child)throw Error(G(153));if(t.child!==null){for(e=t.child,r=f5(e,e.pendingProps),t.child=r,r.return=t;e.sibling!==null;)e=e.sibling,r=r.sibling=f5(e,e.pendingProps),r.return=t;r.sibling=null}return t.child}function Gh(e,t,r){switch(t.tag){case 3:hl(t),e6();break;case 5:ju(t);break;case 1:c0(t.type)&&G9(t);break;case 4:an(t,t.stateNode.containerInfo);break;case 10:var n=t.type._context,i=t.memoizedProps.value;n3(J9,n._currentValue),n._currentValue=i;break;case 13:if(n=t.memoizedState,n!==null)return n.dehydrated!==null?(n3(c3,c3.current&1),t.flags|=128,null):r&t.child.childLanes?pl(e,t,r):(n3(c3,c3.current&1),e=R4(e,t,r),e!==null?e.sibling:null);n3(c3,c3.current&1);break;case 19:if(n=(r&t.childLanes)!==0,e.flags&128){if(n)return yl(e,t,r);t.flags|=128}if(i=t.memoizedState,i!==null&&(i.rendering=null,i.tail=null,i.lastEffect=null),n3(c3,c3.current),n)break;return null;case 22:case 23:return t.lanes=0,fl(e,t,r)}return R4(e,t,r)}var vl,Xt,gl,ml;vl=function(e,t){for(var r=t.child;r!==null;){if(r.tag===5||r.tag===6)e.appendChild(r.stateNode);else if(r.tag!==4&&r.child!==null){r.child.return=r,r=r.child;continue}if(r===t)break;for(;r.sibling===null;){if(r.return===null||r.return===t)return;r=r.return}r.sibling.return=r.return,r=r.sibling}};Xt=function(){};gl=function(e,t,r,n){var i=e.memoizedProps;if(i!==n){e=t.stateNode,N5(l4.current);var o=null;switch(r){case"input":i=wt(e,i),n=wt(e,n),o=[];break;case"select":i=d3({},i,{value:void 0}),n=d3({},n,{value:void 0}),o=[];break;case"textarea":i=St(e,i),n=St(e,n),o=[];break;default:typeof i.onClick!="function"&&typeof n.onClick=="function"&&(e.onclick=V9)}Ct(r,n);var s;r=null;for(u in i)if(!n.hasOwnProperty(u)&&i.hasOwnProperty(u)&&i[u]!=null)if(u==="style"){var a=i[u];for(s in a)a.hasOwnProperty(s)&&(r||(r={}),r[s]="")}else u!=="dangerouslySetInnerHTML"&&u!=="children"&&u!=="suppressContentEditableWarning"&&u!=="suppressHydrationWarning"&&u!=="autoFocus"&&(Z6.hasOwnProperty(u)?o||(o=[]):(o=o||[]).push(u,null));for(u in n){var l=n[u];if(a=i!=null?i[u]:void 0,n.hasOwnProperty(u)&&l!==a&&(l!=null||a!=null))if(u==="style")if(a){for(s in a)!a.hasOwnProperty(s)||l&&l.hasOwnProperty(s)||(r||(r={}),r[s]="");for(s in l)l.hasOwnProperty(s)&&a[s]!==l[s]&&(r||(r={}),r[s]=l[s])}else r||(o||(o=[]),o.push(u,r)),r=l;else u==="dangerouslySetInnerHTML"?(l=l?l.__html:void 0,a=a?a.__html:void 0,l!=null&&a!==l&&(o=o||[]).push(u,l)):u==="children"?typeof l!="string"&&typeof l!="number"||(o=o||[]).push(u,""+l):u!=="suppressContentEditableWarning"&&u!=="suppressHydrationWarning"&&(Z6.hasOwnProperty(u)?(l!=null&&u==="onScroll"&&i3("scroll",e),o||a===l||(o=[])):(o=o||[]).push(u,l))}r&&(o=o||[]).push("style",r);var u=o;(t.updateQueue=u)&&(t.flags|=4)}};ml=function(e,t,r,n){r!==n&&(t.flags|=4)};function b6(e,t){if(!u3)switch(e.tailMode){case"hidden":t=e.tail;for(var r=null;t!==null;)t.alternate!==null&&(r=t),t=t.sibling;r===null?e.tail=null:r.sibling=null;break;case"collapsed":r=e.tail;for(var n=null;r!==null;)r.alternate!==null&&(n=r),r=r.sibling;n===null?t||e.tail===null?e.tail=null:e.tail.sibling=null:n.sibling=null}}function V3(e){var t=e.alternate!==null&&e.alternate.child===e.child,r=0,n=0;if(t)for(var i=e.child;i!==null;)r|=i.lanes|i.childLanes,n|=i.subtreeFlags&14680064,n|=i.flags&14680064,i.return=e,i=i.sibling;else for(i=e.child;i!==null;)r|=i.lanes|i.childLanes,n|=i.subtreeFlags,n|=i.flags,i.return=e,i=i.sibling;return e.subtreeFlags|=n,e.childLanes=r,t}function Qh(e,t,r){var n=t.pendingProps;switch(Zr(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return V3(t),null;case 1:return c0(t.type)&&K9(),V3(t),null;case 3:return n=t.stateNode,r6(),o3(l0),o3(Y3),ln(),n.pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),(e===null||e.child===null)&&(i9(t)?t.flags|=4:e===null||e.memoizedState.isDehydrated&&!(t.flags&256)||(t.flags|=1024,q0!==null&&(sr(q0),q0=null))),Xt(e,t),V3(t),null;case 5:un(t);var i=N5(f8.current);if(r=t.type,e!==null&&t.stateNode!=null)gl(e,t,r,n,i),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!n){if(t.stateNode===null)throw Error(G(166));return V3(t),null}if(e=N5(l4.current),i9(t)){n=t.stateNode,r=t.type;var o=t.memoizedProps;switch(n[s4]=t,n[l8]=o,e=(t.mode&1)!==0,r){case"dialog":i3("cancel",n),i3("close",n);break;case"iframe":case"object":case"embed":i3("load",n);break;case"video":case"audio":for(i=0;i<M6.length;i++)i3(M6[i],n);break;case"source":i3("error",n);break;case"img":case"image":case"link":i3("error",n),i3("load",n);break;case"details":i3("toggle",n);break;case"input":bi(n,o),i3("invalid",n);break;case"select":n._wrapperState={wasMultiple:!!o.multiple},i3("invalid",n);break;case"textarea":Ai(n,o),i3("invalid",n)}Ct(r,o),i=null;for(var s in o)if(o.hasOwnProperty(s)){var a=o[s];s==="children"?typeof a=="string"?n.textContent!==a&&(o.suppressHydrationWarning!==!0&&n9(n.textContent,a,e),i=["children",a]):typeof a=="number"&&n.textContent!==""+a&&(o.suppressHydrationWarning!==!0&&n9(n.textContent,a,e),i=["children",""+a]):Z6.hasOwnProperty(s)&&a!=null&&s==="onScroll"&&i3("scroll",n)}switch(r){case"input":Q8(n),Ci(n,o,!0);break;case"textarea":Q8(n),Bi(n);break;case"select":case"option":break;default:typeof o.onClick=="function"&&(n.onclick=V9)}n=i,t.updateQueue=n,n!==null&&(t.flags|=4)}else{s=i.nodeType===9?i:i.ownerDocument,e==="http://www.w3.org/1999/xhtml"&&(e=Wa(r)),e==="http://www.w3.org/1999/xhtml"?r==="script"?(e=s.createElement("div"),e.innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):typeof n.is=="string"?e=s.createElement(r,{is:n.is}):(e=s.createElement(r),r==="select"&&(s=e,n.multiple?s.multiple=!0:n.size&&(s.size=n.size))):e=s.createElementNS(e,r),e[s4]=t,e[l8]=n,vl(e,t,!1,!1),t.stateNode=e;e:{switch(s=At(r,n),r){case"dialog":i3("cancel",e),i3("close",e),i=n;break;case"iframe":case"object":case"embed":i3("load",e),i=n;break;case"video":case"audio":for(i=0;i<M6.length;i++)i3(M6[i],e);i=n;break;case"source":i3("error",e),i=n;break;case"img":case"image":case"link":i3("error",e),i3("load",e),i=n;break;case"details":i3("toggle",e),i=n;break;case"input":bi(e,n),i=wt(e,n),i3("invalid",e);break;case"option":i=n;break;case"select":e._wrapperState={wasMultiple:!!n.multiple},i=d3({},n,{value:void 0}),i3("invalid",e);break;case"textarea":Ai(e,n),i=St(e,n),i3("invalid",e);break;default:i=n}Ct(r,i),a=i;for(o in a)if(a.hasOwnProperty(o)){var l=a[o];o==="style"?Ga(e,l):o==="dangerouslySetInnerHTML"?(l=l?l.__html:void 0,l!=null&&Va(e,l)):o==="children"?typeof l=="string"?(r!=="textarea"||l!=="")&&e8(e,l):typeof l=="number"&&e8(e,""+l):o!=="suppressContentEditableWarning"&&o!=="suppressHydrationWarning"&&o!=="autoFocus"&&(Z6.hasOwnProperty(o)?l!=null&&o==="onScroll"&&i3("scroll",e):l!=null&&$r(e,o,l,s))}switch(r){case"input":Q8(e),Ci(e,n,!1);break;case"textarea":Q8(e),Bi(e);break;case"option":n.value!=null&&e.setAttribute("value",""+d5(n.value));break;case"select":e.multiple=!!n.multiple,o=n.value,o!=null?B1(e,!!n.multiple,o,!1):n.defaultValue!=null&&B1(e,!!n.multiple,n.defaultValue,!0);break;default:typeof i.onClick=="function"&&(e.onclick=V9)}switch(r){case"button":case"input":case"select":case"textarea":n=!!n.autoFocus;break e;case"img":n=!0;break e;default:n=!1}}n&&(t.flags|=4)}t.ref!==null&&(t.flags|=512,t.flags|=2097152)}return V3(t),null;case 6:if(e&&t.stateNode!=null)ml(e,t,e.memoizedProps,n);else{if(typeof n!="string"&&t.stateNode===null)throw Error(G(166));if(r=N5(f8.current),N5(l4.current),i9(t)){if(n=t.stateNode,r=t.memoizedProps,n[s4]=t,(o=n.nodeValue!==r)&&(e=v0,e!==null))switch(e.tag){case 3:n9(n.nodeValue,r,(e.mode&1)!==0);break;case 5:e.memoizedProps.suppressHydrationWarning!==!0&&n9(n.nodeValue,r,(e.mode&1)!==0)}o&&(t.flags|=4)}else n=(r.nodeType===9?r:r.ownerDocument).createTextNode(n),n[s4]=t,t.stateNode=n}return V3(t),null;case 13:if(o3(c3),n=t.memoizedState,e===null||e.memoizedState!==null&&e.memoizedState.dehydrated!==null){if(u3&&y0!==null&&t.mode&1&&!(t.flags&128))Du(),e6(),t.flags|=98560,o=!1;else if(o=i9(t),n!==null&&n.dehydrated!==null){if(e===null){if(!o)throw Error(G(318));if(o=t.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(G(317));o[s4]=t}else e6(),!(t.flags&128)&&(t.memoizedState=null),t.flags|=4;V3(t),o=!1}else q0!==null&&(sr(q0),q0=null),o=!0;if(!o)return t.flags&65536?t:null}return t.flags&128?(t.lanes=r,t):(n=n!==null,n!==(e!==null&&e.memoizedState!==null)&&n&&(t.child.flags|=8192,t.mode&1&&(e===null||c3.current&1?F3===0&&(F3=3):_n())),t.updateQueue!==null&&(t.flags|=4),V3(t),null);case 4:return r6(),Xt(e,t),e===null&&a8(t.stateNode.containerInfo),V3(t),null;case 10:return nn(t.type._context),V3(t),null;case 17:return c0(t.type)&&K9(),V3(t),null;case 19:if(o3(c3),o=t.memoizedState,o===null)return V3(t),null;if(n=(t.flags&128)!==0,s=o.rendering,s===null)if(n)b6(o,!1);else{if(F3!==0||e!==null&&e.flags&128)for(e=t.child;e!==null;){if(s=e7(e),s!==null){for(t.flags|=128,b6(o,!1),n=s.updateQueue,n!==null&&(t.updateQueue=n,t.flags|=4),t.subtreeFlags=0,n=r,r=t.child;r!==null;)o=r,e=n,o.flags&=14680066,s=o.alternate,s===null?(o.childLanes=0,o.lanes=e,o.child=null,o.subtreeFlags=0,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=s.childLanes,o.lanes=s.lanes,o.child=s.child,o.subtreeFlags=0,o.deletions=null,o.memoizedProps=s.memoizedProps,o.memoizedState=s.memoizedState,o.updateQueue=s.updateQueue,o.type=s.type,e=s.dependencies,o.dependencies=e===null?null:{lanes:e.lanes,firstContext:e.firstContext}),r=r.sibling;return n3(c3,c3.current&1|2),t.child}e=e.sibling}o.tail!==null&&E3()>i6&&(t.flags|=128,n=!0,b6(o,!1),t.lanes=4194304)}else{if(!n)if(e=e7(s),e!==null){if(t.flags|=128,n=!0,r=e.updateQueue,r!==null&&(t.updateQueue=r,t.flags|=4),b6(o,!0),o.tail===null&&o.tailMode==="hidden"&&!s.alternate&&!u3)return V3(t),null}else 2*E3()-o.renderingStartTime>i6&&r!==1073741824&&(t.flags|=128,n=!0,b6(o,!1),t.lanes=4194304);o.isBackwards?(s.sibling=t.child,t.child=s):(r=o.last,r!==null?r.sibling=s:t.child=s,o.last=s)}return o.tail!==null?(t=o.tail,o.rendering=t,o.tail=t.sibling,o.renderingStartTime=E3(),t.sibling=null,r=c3.current,n3(c3,n?r&1|2:r&1),t):(V3(t),null);case 22:case 23:return wn(),n=t.memoizedState!==null,e!==null&&e.memoizedState!==null!==n&&(t.flags|=8192),n&&t.mode&1?p0&1073741824&&(V3(t),t.subtreeFlags&6&&(t.flags|=8192)):V3(t),null;case 24:return null;case 25:return null}throw Error(G(156,t.tag))}function Yh(e,t){switch(Zr(t),t.tag){case 1:return c0(t.type)&&K9(),e=t.flags,e&65536?(t.flags=e&-65537|128,t):null;case 3:return r6(),o3(l0),o3(Y3),ln(),e=t.flags,e&65536&&!(e&128)?(t.flags=e&-65537|128,t):null;case 5:return un(t),null;case 13:if(o3(c3),e=t.memoizedState,e!==null&&e.dehydrated!==null){if(t.alternate===null)throw Error(G(340));e6()}return e=t.flags,e&65536?(t.flags=e&-65537|128,t):null;case 19:return o3(c3),null;case 4:return r6(),null;case 10:return nn(t.type._context),null;case 22:case 23:return wn(),null;case 24:return null;default:return null}}var a9=!1,Q3=!1,Jh=typeof WeakSet=="function"?WeakSet:Set,i2=null;function S1(e,t){var r=e.ref;if(r!==null)if(typeof r=="function")try{r(null)}catch(n){m3(e,t,n)}else r.current=null}function Zt(e,t,r){try{r()}catch(n){m3(e,t,n)}}var go=!1;function Xh(e,t){if(Ut=H9,e=Eu(),Jr(e)){if("selectionStart"in e)var r={start:e.selectionStart,end:e.selectionEnd};else e:{r=(r=e.ownerDocument)&&r.defaultView||window;var n=r.getSelection&&r.getSelection();if(n&&n.rangeCount!==0){r=n.anchorNode;var i=n.anchorOffset,o=n.focusNode;n=n.focusOffset;try{r.nodeType,o.nodeType}catch{r=null;break e}var s=0,a=-1,l=-1,u=0,h=0,y=e,x=null;t:for(;;){for(var b;y!==r||i!==0&&y.nodeType!==3||(a=s+i),y!==o||n!==0&&y.nodeType!==3||(l=s+n),y.nodeType===3&&(s+=y.nodeValue.length),(b=y.firstChild)!==null;)x=y,y=b;for(;;){if(y===e)break t;if(x===r&&++u===i&&(a=s),x===o&&++h===n&&(l=s),(b=y.nextSibling)!==null)break;y=x,x=y.parentNode}y=b}r=a===-1||l===-1?null:{start:a,end:l}}else r=null}r=r||{start:0,end:0}}else r=null;for(Nt={focusedElem:e,selectionRange:r},H9=!1,i2=t;i2!==null;)if(t=i2,e=t.child,(t.subtreeFlags&1028)!==0&&e!==null)e.return=t,i2=e;else for(;i2!==null;){t=i2;try{var C=t.alternate;if(t.flags&1024)switch(t.tag){case 0:case 11:case 15:break;case 1:if(C!==null){var T=C.memoizedProps,k=C.memoizedState,S=t.stateNode,E=S.getSnapshotBeforeUpdate(t.elementType===t.type?T:M0(t.type,T),k);S.__reactInternalSnapshotBeforeUpdate=E}break;case 3:var A=t.stateNode.containerInfo;A.nodeType===1?A.textContent="":A.nodeType===9&&A.documentElement&&A.removeChild(A.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(G(163))}}catch(N){m3(t,t.return,N)}if(e=t.sibling,e!==null){e.return=t.return,i2=e;break}i2=t.return}return C=go,go=!1,C}function G6(e,t,r){var n=t.updateQueue;if(n=n!==null?n.lastEffect:null,n!==null){var i=n=n.next;do{if((i.tag&e)===e){var o=i.destroy;i.destroy=void 0,o!==void 0&&Zt(t,r,o)}i=i.next}while(i!==n)}}function T7(e,t){if(t=t.updateQueue,t=t!==null?t.lastEffect:null,t!==null){var r=t=t.next;do{if((r.tag&e)===e){var n=r.create;r.destroy=n()}r=r.next}while(r!==t)}}function er(e){var t=e.ref;if(t!==null){var r=e.stateNode;switch(e.tag){case 5:e=r;break;default:e=r}typeof t=="function"?t(e):t.current=e}}function xl(e){var t=e.alternate;t!==null&&(e.alternate=null,xl(t)),e.child=null,e.deletions=null,e.sibling=null,e.tag===5&&(t=e.stateNode,t!==null&&(delete t[s4],delete t[l8],delete t[Mt],delete t[Oh],delete t[Dh])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function wl(e){return e.tag===5||e.tag===3||e.tag===4}function mo(e){e:for(;;){for(;e.sibling===null;){if(e.return===null||wl(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;e.tag!==5&&e.tag!==6&&e.tag!==18;){if(e.flags&2||e.child===null||e.tag===4)continue e;e.child.return=e,e=e.child}if(!(e.flags&2))return e.stateNode}}function tr(e,t,r){var n=e.tag;if(n===5||n===6)e=e.stateNode,t?r.nodeType===8?r.parentNode.insertBefore(e,t):r.insertBefore(e,t):(r.nodeType===8?(t=r.parentNode,t.insertBefore(e,r)):(t=r,t.appendChild(e)),r=r._reactRootContainer,r!=null||t.onclick!==null||(t.onclick=V9));else if(n!==4&&(e=e.child,e!==null))for(tr(e,t,r),e=e.sibling;e!==null;)tr(e,t,r),e=e.sibling}function rr(e,t,r){var n=e.tag;if(n===5||n===6)e=e.stateNode,t?r.insertBefore(e,t):r.appendChild(e);else if(n!==4&&(e=e.child,e!==null))for(rr(e,t,r),e=e.sibling;e!==null;)rr(e,t,r),e=e.sibling}var U3=null,H0=!1;function O4(e,t,r){for(r=r.child;r!==null;)_l(e,t,r),r=r.sibling}function _l(e,t,r){if(u4&&typeof u4.onCommitFiberUnmount=="function")try{u4.onCommitFiberUnmount(w7,r)}catch{}switch(r.tag){case 5:Q3||S1(r,t);case 6:var n=U3,i=H0;U3=null,O4(e,t,r),U3=n,H0=i,U3!==null&&(H0?(e=U3,r=r.stateNode,e.nodeType===8?e.parentNode.removeChild(r):e.removeChild(r)):U3.removeChild(r.stateNode));break;case 18:U3!==null&&(H0?(e=U3,r=r.stateNode,e.nodeType===8?Ve(e.parentNode,r):e.nodeType===1&&Ve(e,r),i8(e)):Ve(U3,r.stateNode));break;case 4:n=U3,i=H0,U3=r.stateNode.containerInfo,H0=!0,O4(e,t,r),U3=n,H0=i;break;case 0:case 11:case 14:case 15:if(!Q3&&(n=r.updateQueue,n!==null&&(n=n.lastEffect,n!==null))){i=n=n.next;do{var o=i,s=o.destroy;o=o.tag,s!==void 0&&(o&2||o&4)&&Zt(r,t,s),i=i.next}while(i!==n)}O4(e,t,r);break;case 1:if(!Q3&&(S1(r,t),n=r.stateNode,typeof n.componentWillUnmount=="function"))try{n.props=r.memoizedProps,n.state=r.memoizedState,n.componentWillUnmount()}catch(a){m3(r,t,a)}O4(e,t,r);break;case 21:O4(e,t,r);break;case 22:r.mode&1?(Q3=(n=Q3)||r.memoizedState!==null,O4(e,t,r),Q3=n):O4(e,t,r);break;default:O4(e,t,r)}}function xo(e){var t=e.updateQueue;if(t!==null){e.updateQueue=null;var r=e.stateNode;r===null&&(r=e.stateNode=new Jh),t.forEach(function(n){var i=ap.bind(null,e,n);r.has(n)||(r.add(n),n.then(i,i))})}}function $0(e,t){var r=t.deletions;if(r!==null)for(var n=0;n<r.length;n++){var i=r[n];try{var o=e,s=t,a=s;e:for(;a!==null;){switch(a.tag){case 5:U3=a.stateNode,H0=!1;break e;case 3:U3=a.stateNode.containerInfo,H0=!0;break e;case 4:U3=a.stateNode.containerInfo,H0=!0;break e}a=a.return}if(U3===null)throw Error(G(160));_l(o,s,i),U3=null,H0=!1;var l=i.alternate;l!==null&&(l.return=null),i.return=null}catch(u){m3(i,t,u)}}if(t.subtreeFlags&12854)for(t=t.child;t!==null;)El(t,e),t=t.sibling}function El(e,t){var r=e.alternate,n=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if($0(t,e),X0(e),n&4){try{G6(3,e,e.return),T7(3,e)}catch(T){m3(e,e.return,T)}try{G6(5,e,e.return)}catch(T){m3(e,e.return,T)}}break;case 1:$0(t,e),X0(e),n&512&&r!==null&&S1(r,r.return);break;case 5:if($0(t,e),X0(e),n&512&&r!==null&&S1(r,r.return),e.flags&32){var i=e.stateNode;try{e8(i,"")}catch(T){m3(e,e.return,T)}}if(n&4&&(i=e.stateNode,i!=null)){var o=e.memoizedProps,s=r!==null?r.memoizedProps:o,a=e.type,l=e.updateQueue;if(e.updateQueue=null,l!==null)try{a==="input"&&o.type==="radio"&&o.name!=null&&Ha(i,o),At(a,s);var u=At(a,o);for(s=0;s<l.length;s+=2){var h=l[s],y=l[s+1];h==="style"?Ga(i,y):h==="dangerouslySetInnerHTML"?Va(i,y):h==="children"?e8(i,y):$r(i,h,y,u)}switch(a){case"input":_t(i,o);break;case"textarea":qa(i,o);break;case"select":var x=i._wrapperState.wasMultiple;i._wrapperState.wasMultiple=!!o.multiple;var b=o.value;b!=null?B1(i,!!o.multiple,b,!1):x!==!!o.multiple&&(o.defaultValue!=null?B1(i,!!o.multiple,o.defaultValue,!0):B1(i,!!o.multiple,o.multiple?[]:"",!1))}i[l8]=o}catch(T){m3(e,e.return,T)}}break;case 6:if($0(t,e),X0(e),n&4){if(e.stateNode===null)throw Error(G(162));i=e.stateNode,o=e.memoizedProps;try{i.nodeValue=o}catch(T){m3(e,e.return,T)}}break;case 3:if($0(t,e),X0(e),n&4&&r!==null&&r.memoizedState.isDehydrated)try{i8(t.containerInfo)}catch(T){m3(e,e.return,T)}break;case 4:$0(t,e),X0(e);break;case 13:$0(t,e),X0(e),i=e.child,i.flags&8192&&(o=i.memoizedState!==null,i.stateNode.isHidden=o,!o||i.alternate!==null&&i.alternate.memoizedState!==null||(mn=E3())),n&4&&xo(e);break;case 22:if(h=r!==null&&r.memoizedState!==null,e.mode&1?(Q3=(u=Q3)||h,$0(t,e),Q3=u):$0(t,e),X0(e),n&8192){if(u=e.memoizedState!==null,(e.stateNode.isHidden=u)&&!h&&e.mode&1)for(i2=e,h=e.child;h!==null;){for(y=i2=h;i2!==null;){switch(x=i2,b=x.child,x.tag){case 0:case 11:case 14:case 15:G6(4,x,x.return);break;case 1:S1(x,x.return);var C=x.stateNode;if(typeof C.componentWillUnmount=="function"){n=x,r=x.return;try{t=n,C.props=t.memoizedProps,C.state=t.memoizedState,C.componentWillUnmount()}catch(T){m3(n,r,T)}}break;case 5:S1(x,x.return);break;case 22:if(x.memoizedState!==null){_o(y);continue}}b!==null?(b.return=x,i2=b):_o(y)}h=h.sibling}e:for(h=null,y=e;;){if(y.tag===5){if(h===null){h=y;try{i=y.stateNode,u?(o=i.style,typeof o.setProperty=="function"?o.setProperty("display","none","important"):o.display="none"):(a=y.stateNode,l=y.memoizedProps.style,s=l!=null&&l.hasOwnProperty("display")?l.display:null,a.style.display=Ka("display",s))}catch(T){m3(e,e.return,T)}}}else if(y.tag===6){if(h===null)try{y.stateNode.nodeValue=u?"":y.memoizedProps}catch(T){m3(e,e.return,T)}}else if((y.tag!==22&&y.tag!==23||y.memoizedState===null||y===e)&&y.child!==null){y.child.return=y,y=y.child;continue}if(y===e)break e;for(;y.sibling===null;){if(y.return===null||y.return===e)break e;h===y&&(h=null),y=y.return}h===y&&(h=null),y.sibling.return=y.return,y=y.sibling}}break;case 19:$0(t,e),X0(e),n&4&&xo(e);break;case 21:break;default:$0(t,e),X0(e)}}function X0(e){var t=e.flags;if(t&2){try{e:{for(var r=e.return;r!==null;){if(wl(r)){var n=r;break e}r=r.return}throw Error(G(160))}switch(n.tag){case 5:var i=n.stateNode;n.flags&32&&(e8(i,""),n.flags&=-33);var o=mo(e);rr(e,o,i);break;case 3:case 4:var s=n.stateNode.containerInfo,a=mo(e);tr(e,a,s);break;default:throw Error(G(161))}}catch(l){m3(e,e.return,l)}e.flags&=-3}t&4096&&(e.flags&=-4097)}function Zh(e,t,r){i2=e,Sl(e)}function Sl(e,t,r){for(var n=(e.mode&1)!==0;i2!==null;){var i=i2,o=i.child;if(i.tag===22&&n){var s=i.memoizedState!==null||a9;if(!s){var a=i.alternate,l=a!==null&&a.memoizedState!==null||Q3;a=a9;var u=Q3;if(a9=s,(Q3=l)&&!u)for(i2=i;i2!==null;)s=i2,l=s.child,s.tag===22&&s.memoizedState!==null?Eo(i):l!==null?(l.return=s,i2=l):Eo(i);for(;o!==null;)i2=o,Sl(o),o=o.sibling;i2=i,a9=a,Q3=u}wo(e)}else i.subtreeFlags&8772&&o!==null?(o.return=i,i2=o):wo(e)}}function wo(e){for(;i2!==null;){var t=i2;if(t.flags&8772){var r=t.alternate;try{if(t.flags&8772)switch(t.tag){case 0:case 11:case 15:Q3||T7(5,t);break;case 1:var n=t.stateNode;if(t.flags&4&&!Q3)if(r===null)n.componentDidMount();else{var i=t.elementType===t.type?r.memoizedProps:M0(t.type,r.memoizedProps);n.componentDidUpdate(i,r.memoizedState,n.__reactInternalSnapshotBeforeUpdate)}var o=t.updateQueue;o!==null&&ro(t,o,n);break;case 3:var s=t.updateQueue;if(s!==null){if(r=null,t.child!==null)switch(t.child.tag){case 5:r=t.child.stateNode;break;case 1:r=t.child.stateNode}ro(t,s,r)}break;case 5:var a=t.stateNode;if(r===null&&t.flags&4){r=a;var l=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":l.autoFocus&&r.focus();break;case"img":l.src&&(r.src=l.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(t.memoizedState===null){var u=t.alternate;if(u!==null){var h=u.memoizedState;if(h!==null){var y=h.dehydrated;y!==null&&i8(y)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;default:throw Error(G(163))}Q3||t.flags&512&&er(t)}catch(x){m3(t,t.return,x)}}if(t===e){i2=null;break}if(r=t.sibling,r!==null){r.return=t.return,i2=r;break}i2=t.return}}function _o(e){for(;i2!==null;){var t=i2;if(t===e){i2=null;break}var r=t.sibling;if(r!==null){r.return=t.return,i2=r;break}i2=t.return}}function Eo(e){for(;i2!==null;){var t=i2;try{switch(t.tag){case 0:case 11:case 15:var r=t.return;try{T7(4,t)}catch(l){m3(t,r,l)}break;case 1:var n=t.stateNode;if(typeof n.componentDidMount=="function"){var i=t.return;try{n.componentDidMount()}catch(l){m3(t,i,l)}}var o=t.return;try{er(t)}catch(l){m3(t,o,l)}break;case 5:var s=t.return;try{er(t)}catch(l){m3(t,s,l)}}}catch(l){m3(t,t.return,l)}if(t===e){i2=null;break}var a=t.sibling;if(a!==null){a.return=t.return,i2=a;break}i2=t.return}}var ep=Math.ceil,n7=k4.ReactCurrentDispatcher,vn=k4.ReactCurrentOwner,P0=k4.ReactCurrentBatchConfig,W2=0,D3=null,S3=null,L3=0,p0=0,b1=v5(0),F3=0,y8=null,X5=0,I7=0,gn=0,Q6=null,a0=null,mn=0,i6=1/0,x4=null,i7=!1,nr=null,l5=null,u9=!1,n5=null,o7=0,Y6=0,ir=null,T9=-1,I9=0;function r0(){return W2&6?E3():T9!==-1?T9:T9=E3()}function c5(e){return e.mode&1?W2&2&&L3!==0?L3&-L3:Nh.transition!==null?(I9===0&&(I9=su()),I9):(e=X2,e!==0||(e=window.event,e=e===void 0?16:hu(e.type)),e):1}function K0(e,t,r,n){if(50<Y6)throw Y6=0,ir=null,Error(G(185));U8(e,r,n),(!(W2&2)||e!==D3)&&(e===D3&&(!(W2&2)&&(I7|=r),F3===4&&K4(e,L3)),f0(e,n),r===1&&W2===0&&!(t.mode&1)&&(i6=E3()+500,C7&&g5()))}function f0(e,t){var r=e.callbackNode;Nd(e,t);var n=j9(e,e===D3?L3:0);if(n===0)r!==null&&Fi(r),e.callbackNode=null,e.callbackPriority=0;else if(t=n&-n,e.callbackPriority!==t){if(r!=null&&Fi(r),t===1)e.tag===0?Uh(So.bind(null,e)):ku(So.bind(null,e)),kh(function(){!(W2&6)&&g5()}),r=null;else{switch(au(n)){case 1:r=Hr;break;case 4:r=iu;break;case 16:r=z9;break;case 536870912:r=ou;break;default:r=z9}r=Rl(r,bl.bind(null,e))}e.callbackPriority=t,e.callbackNode=r}}function bl(e,t){if(T9=-1,I9=0,W2&6)throw Error(G(327));var r=e.callbackNode;if(k1()&&e.callbackNode!==r)return null;var n=j9(e,e===D3?L3:0);if(n===0)return null;if(n&30||n&e.expiredLanes||t)t=s7(e,n);else{t=n;var i=W2;W2|=2;var o=Al();(D3!==e||L3!==t)&&(x4=null,i6=E3()+500,K5(e,t));do try{np();break}catch(a){Cl(e,a)}while(1);rn(),n7.current=o,W2=i,S3!==null?t=0:(D3=null,L3=0,t=F3)}if(t!==0){if(t===2&&(i=Rt(e),i!==0&&(n=i,t=or(e,i))),t===1)throw r=y8,K5(e,0),K4(e,n),f0(e,E3()),r;if(t===6)K4(e,n);else{if(i=e.current.alternate,!(n&30)&&!tp(i)&&(t=s7(e,n),t===2&&(o=Rt(e),o!==0&&(n=o,t=or(e,o))),t===1))throw r=y8,K5(e,0),K4(e,n),f0(e,E3()),r;switch(e.finishedWork=i,e.finishedLanes=n,t){case 0:case 1:throw Error(G(345));case 2:P5(e,a0,x4);break;case 3:if(K4(e,n),(n&130023424)===n&&(t=mn+500-E3(),10<t)){if(j9(e,0)!==0)break;if(i=e.suspendedLanes,(i&n)!==n){r0(),e.pingedLanes|=e.suspendedLanes&i;break}e.timeoutHandle=Lt(P5.bind(null,e,a0,x4),t);break}P5(e,a0,x4);break;case 4:if(K4(e,n),(n&4194240)===n)break;for(t=e.eventTimes,i=-1;0<n;){var s=31-V0(n);o=1<<s,s=t[s],s>i&&(i=s),n&=~o}if(n=i,n=E3()-n,n=(120>n?120:480>n?480:1080>n?1080:1920>n?1920:3e3>n?3e3:4320>n?4320:1960*ep(n/1960))-n,10<n){e.timeoutHandle=Lt(P5.bind(null,e,a0,x4),n);break}P5(e,a0,x4);break;case 5:P5(e,a0,x4);break;default:throw Error(G(329))}}}return f0(e,E3()),e.callbackNode===r?bl.bind(null,e):null}function or(e,t){var r=Q6;return e.current.memoizedState.isDehydrated&&(K5(e,t).flags|=256),e=s7(e,t),e!==2&&(t=a0,a0=r,t!==null&&sr(t)),e}function sr(e){a0===null?a0=e:a0.push.apply(a0,e)}function tp(e){for(var t=e;;){if(t.flags&16384){var r=t.updateQueue;if(r!==null&&(r=r.stores,r!==null))for(var n=0;n<r.length;n++){var i=r[n],o=i.getSnapshot;i=i.value;try{if(!Q0(o(),i))return!1}catch{return!1}}}if(r=t.child,t.subtreeFlags&16384&&r!==null)r.return=t,t=r;else{if(t===e)break;for(;t.sibling===null;){if(t.return===null||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}function K4(e,t){for(t&=~gn,t&=~I7,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var r=31-V0(t),n=1<<r;e[r]=-1,t&=~n}}function So(e){if(W2&6)throw Error(G(327));k1();var t=j9(e,0);if(!(t&1))return f0(e,E3()),null;var r=s7(e,t);if(e.tag!==0&&r===2){var n=Rt(e);n!==0&&(t=n,r=or(e,n))}if(r===1)throw r=y8,K5(e,0),K4(e,t),f0(e,E3()),r;if(r===6)throw Error(G(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,P5(e,a0,x4),f0(e,E3()),null}function xn(e,t){var r=W2;W2|=1;try{return e(t)}finally{W2=r,W2===0&&(i6=E3()+500,C7&&g5())}}function Z5(e){n5!==null&&n5.tag===0&&!(W2&6)&&k1();var t=W2;W2|=1;var r=P0.transition,n=X2;try{if(P0.transition=null,X2=1,e)return e()}finally{X2=n,P0.transition=r,W2=t,!(W2&6)&&g5()}}function wn(){p0=b1.current,o3(b1)}function K5(e,t){e.finishedWork=null,e.finishedLanes=0;var r=e.timeoutHandle;if(r!==-1&&(e.timeoutHandle=-1,Rh(r)),S3!==null)for(r=S3.return;r!==null;){var n=r;switch(Zr(n),n.tag){case 1:n=n.type.childContextTypes,n!=null&&K9();break;case 3:r6(),o3(l0),o3(Y3),ln();break;case 5:un(n);break;case 4:r6();break;case 13:o3(c3);break;case 19:o3(c3);break;case 10:nn(n.type._context);break;case 22:case 23:wn()}r=r.return}if(D3=e,S3=e=f5(e.current,null),L3=p0=t,F3=0,y8=null,gn=I7=X5=0,a0=Q6=null,U5!==null){for(t=0;t<U5.length;t++)if(r=U5[t],n=r.interleaved,n!==null){r.interleaved=null;var i=n.next,o=r.pending;if(o!==null){var s=o.next;o.next=i,n.next=s}r.pending=n}U5=null}return e}function Cl(e,t){do{var r=S3;try{if(rn(),C9.current=r7,t7){for(var n=f3.memoizedState;n!==null;){var i=n.queue;i!==null&&(i.pending=null),n=n.next}t7=!1}if(J5=0,O3=T3=f3=null,K6=!1,d8=0,vn.current=null,r===null||r.return===null){F3=1,y8=t,S3=null;break}e:{var o=e,s=r.return,a=r,l=t;if(t=L3,a.flags|=32768,l!==null&&typeof l=="object"&&typeof l.then=="function"){var u=l,h=a,y=h.tag;if(!(h.mode&1)&&(y===0||y===11||y===15)){var x=h.alternate;x?(h.updateQueue=x.updateQueue,h.memoizedState=x.memoizedState,h.lanes=x.lanes):(h.updateQueue=null,h.memoizedState=null)}var b=lo(s);if(b!==null){b.flags&=-257,co(b,s,a,o,t),b.mode&1&&uo(o,u,t),t=b,l=u;var C=t.updateQueue;if(C===null){var T=new Set;T.add(l),t.updateQueue=T}else C.add(l);break e}else{if(!(t&1)){uo(o,u,t),_n();break e}l=Error(G(426))}}else if(u3&&a.mode&1){var k=lo(s);if(k!==null){!(k.flags&65536)&&(k.flags|=256),co(k,s,a,o,t),en(n6(l,a));break e}}o=l=n6(l,a),F3!==4&&(F3=2),Q6===null?Q6=[o]:Q6.push(o),o=s;do{switch(o.tag){case 3:o.flags|=65536,t&=-t,o.lanes|=t;var S=ul(o,l,t);to(o,S);break e;case 1:a=l;var E=o.type,A=o.stateNode;if(!(o.flags&128)&&(typeof E.getDerivedStateFromError=="function"||A!==null&&typeof A.componentDidCatch=="function"&&(l5===null||!l5.has(A)))){o.flags|=65536,t&=-t,o.lanes|=t;var N=ll(o,a,t);to(o,N);break e}}o=o.return}while(o!==null)}Tl(r)}catch(H){t=H,S3===r&&r!==null&&(S3=r=r.return);continue}break}while(1)}function Al(){var e=n7.current;return n7.current=r7,e===null?r7:e}function _n(){(F3===0||F3===3||F3===2)&&(F3=4),D3===null||!(X5&268435455)&&!(I7&268435455)||K4(D3,L3)}function s7(e,t){var r=W2;W2|=2;var n=Al();(D3!==e||L3!==t)&&(x4=null,K5(e,t));do try{rp();break}catch(i){Cl(e,i)}while(1);if(rn(),W2=r,n7.current=n,S3!==null)throw Error(G(261));return D3=null,L3=0,F3}function rp(){for(;S3!==null;)Bl(S3)}function np(){for(;S3!==null&&!Td();)Bl(S3)}function Bl(e){var t=Fl(e.alternate,e,p0);e.memoizedProps=e.pendingProps,t===null?Tl(e):S3=t,vn.current=null}function Tl(e){var t=e;do{var r=t.alternate;if(e=t.return,t.flags&32768){if(r=Yh(r,t),r!==null){r.flags&=32767,S3=r;return}if(e!==null)e.flags|=32768,e.subtreeFlags=0,e.deletions=null;else{F3=6,S3=null;return}}else if(r=Qh(r,t,p0),r!==null){S3=r;return}if(t=t.sibling,t!==null){S3=t;return}S3=t=e}while(t!==null);F3===0&&(F3=5)}function P5(e,t,r){var n=X2,i=P0.transition;try{P0.transition=null,X2=1,ip(e,t,r,n)}finally{P0.transition=i,X2=n}return null}function ip(e,t,r,n){do k1();while(n5!==null);if(W2&6)throw Error(G(327));r=e.finishedWork;var i=e.finishedLanes;if(r===null)return null;if(e.finishedWork=null,e.finishedLanes=0,r===e.current)throw Error(G(177));e.callbackNode=null,e.callbackPriority=0;var o=r.lanes|r.childLanes;if($d(e,o),e===D3&&(S3=D3=null,L3=0),!(r.subtreeFlags&2064)&&!(r.flags&2064)||u9||(u9=!0,Rl(z9,function(){return k1(),null})),o=(r.flags&15990)!==0,r.subtreeFlags&15990||o){o=P0.transition,P0.transition=null;var s=X2;X2=1;var a=W2;W2|=4,vn.current=null,Xh(e,r),El(r,e),bh(Nt),H9=!!Ut,Nt=Ut=null,e.current=r,Zh(r),Id(),W2=a,X2=s,P0.transition=o}else e.current=r;if(u9&&(u9=!1,n5=e,o7=i),o=e.pendingLanes,o===0&&(l5=null),kd(r.stateNode),f0(e,E3()),t!==null)for(n=e.onRecoverableError,r=0;r<t.length;r++)i=t[r],n(i.value,{componentStack:i.stack,digest:i.digest});if(i7)throw i7=!1,e=nr,nr=null,e;return o7&1&&e.tag!==0&&k1(),o=e.pendingLanes,o&1?e===ir?Y6++:(Y6=0,ir=e):Y6=0,g5(),null}function k1(){if(n5!==null){var e=au(o7),t=P0.transition,r=X2;try{if(P0.transition=null,X2=16>e?16:e,n5===null)var n=!1;else{if(e=n5,n5=null,o7=0,W2&6)throw Error(G(331));var i=W2;for(W2|=4,i2=e.current;i2!==null;){var o=i2,s=o.child;if(i2.flags&16){var a=o.deletions;if(a!==null){for(var l=0;l<a.length;l++){var u=a[l];for(i2=u;i2!==null;){var h=i2;switch(h.tag){case 0:case 11:case 15:G6(8,h,o)}var y=h.child;if(y!==null)y.return=h,i2=y;else for(;i2!==null;){h=i2;var x=h.sibling,b=h.return;if(xl(h),h===u){i2=null;break}if(x!==null){x.return=b,i2=x;break}i2=b}}}var C=o.alternate;if(C!==null){var T=C.child;if(T!==null){C.child=null;do{var k=T.sibling;T.sibling=null,T=k}while(T!==null)}}i2=o}}if(o.subtreeFlags&2064&&s!==null)s.return=o,i2=s;else e:for(;i2!==null;){if(o=i2,o.flags&2048)switch(o.tag){case 0:case 11:case 15:G6(9,o,o.return)}var S=o.sibling;if(S!==null){S.return=o.return,i2=S;break e}i2=o.return}}var E=e.current;for(i2=E;i2!==null;){s=i2;var A=s.child;if(s.subtreeFlags&2064&&A!==null)A.return=s,i2=A;else e:for(s=E;i2!==null;){if(a=i2,a.flags&2048)try{switch(a.tag){case 0:case 11:case 15:T7(9,a)}}catch(H){m3(a,a.return,H)}if(a===s){i2=null;break e}var N=a.sibling;if(N!==null){N.return=a.return,i2=N;break e}i2=a.return}}if(W2=i,g5(),u4&&typeof u4.onPostCommitFiberRoot=="function")try{u4.onPostCommitFiberRoot(w7,e)}catch{}n=!0}return n}finally{X2=r,P0.transition=t}}return!1}function bo(e,t,r){t=n6(r,t),t=ul(e,t,1),e=u5(e,t,1),t=r0(),e!==null&&(U8(e,1,t),f0(e,t))}function m3(e,t,r){if(e.tag===3)bo(e,e,r);else for(;t!==null;){if(t.tag===3){bo(t,e,r);break}else if(t.tag===1){var n=t.stateNode;if(typeof t.type.getDerivedStateFromError=="function"||typeof n.componentDidCatch=="function"&&(l5===null||!l5.has(n))){e=n6(r,e),e=ll(t,e,1),t=u5(t,e,1),e=r0(),t!==null&&(U8(t,1,e),f0(t,e));break}}t=t.return}}function op(e,t,r){var n=e.pingCache;n!==null&&n.delete(t),t=r0(),e.pingedLanes|=e.suspendedLanes&r,D3===e&&(L3&r)===r&&(F3===4||F3===3&&(L3&130023424)===L3&&500>E3()-mn?K5(e,0):gn|=r),f0(e,t)}function Il(e,t){t===0&&(e.mode&1?(t=X8,X8<<=1,!(X8&130023424)&&(X8=4194304)):t=1);var r=r0();e=F4(e,t),e!==null&&(U8(e,t,r),f0(e,r))}function sp(e){var t=e.memoizedState,r=0;t!==null&&(r=t.retryLane),Il(e,r)}function ap(e,t){var r=0;switch(e.tag){case 13:var n=e.stateNode,i=e.memoizedState;i!==null&&(r=i.retryLane);break;case 19:n=e.stateNode;break;default:throw Error(G(314))}n!==null&&n.delete(t),Il(e,r)}var Fl;Fl=function(e,t,r){if(e!==null)if(e.memoizedProps!==t.pendingProps||l0.current)u0=!0;else{if(!(e.lanes&r)&&!(t.flags&128))return u0=!1,Gh(e,t,r);u0=!!(e.flags&131072)}else u0=!1,u3&&t.flags&1048576&&Pu(t,Y9,t.index);switch(t.lanes=0,t.tag){case 2:var n=t.type;B9(e,t),e=t.pendingProps;var i=Z1(t,Y3.current);R1(t,r),i=fn(null,t,n,e,i,r);var o=dn();return t.flags|=1,typeof i=="object"&&i!==null&&typeof i.render=="function"&&i.$$typeof===void 0?(t.tag=1,t.memoizedState=null,t.updateQueue=null,c0(n)?(o=!0,G9(t)):o=!1,t.memoizedState=i.state!==null&&i.state!==void 0?i.state:null,sn(t),i.updater=A7,t.stateNode=i,i._reactInternals=t,Vt(t,n,e,r),t=Qt(null,t,n,!0,o,r)):(t.tag=0,u3&&o&&Xr(t),e0(null,t,i,r),t=t.child),t;case 16:n=t.elementType;e:{switch(B9(e,t),e=t.pendingProps,i=n._init,n=i(n._payload),t.type=n,i=t.tag=lp(n),e=M0(n,e),i){case 0:t=Gt(null,t,n,e,r);break e;case 1:t=po(null,t,n,e,r);break e;case 11:t=fo(null,t,n,e,r);break e;case 14:t=ho(null,t,n,M0(n.type,e),r);break e}throw Error(G(306,n,""))}return t;case 0:return n=t.type,i=t.pendingProps,i=t.elementType===n?i:M0(n,i),Gt(e,t,n,i,r);case 1:return n=t.type,i=t.pendingProps,i=t.elementType===n?i:M0(n,i),po(e,t,n,i,r);case 3:e:{if(hl(t),e===null)throw Error(G(387));n=t.pendingProps,o=t.memoizedState,i=o.element,Nu(e,t),Z9(t,n,null,r);var s=t.memoizedState;if(n=s.element,o.isDehydrated)if(o={element:n,isDehydrated:!1,cache:s.cache,pendingSuspenseBoundaries:s.pendingSuspenseBoundaries,transitions:s.transitions},t.updateQueue.baseState=o,t.memoizedState=o,t.flags&256){i=n6(Error(G(423)),t),t=yo(e,t,n,r,i);break e}else if(n!==i){i=n6(Error(G(424)),t),t=yo(e,t,n,r,i);break e}else for(y0=a5(t.stateNode.containerInfo.firstChild),v0=t,u3=!0,q0=null,r=zu(t,null,n,r),t.child=r;r;)r.flags=r.flags&-3|4096,r=r.sibling;else{if(e6(),n===i){t=R4(e,t,r);break e}e0(e,t,n,r)}t=t.child}return t;case 5:return ju(t),e===null&&Ht(t),n=t.type,i=t.pendingProps,o=e!==null?e.memoizedProps:null,s=i.children,$t(n,i)?s=null:o!==null&&$t(n,o)&&(t.flags|=32),dl(e,t),e0(e,t,s,r),t.child;case 6:return e===null&&Ht(t),null;case 13:return pl(e,t,r);case 4:return an(t,t.stateNode.containerInfo),n=t.pendingProps,e===null?t.child=t6(t,null,n,r):e0(e,t,n,r),t.child;case 11:return n=t.type,i=t.pendingProps,i=t.elementType===n?i:M0(n,i),fo(e,t,n,i,r);case 7:return e0(e,t,t.pendingProps,r),t.child;case 8:return e0(e,t,t.pendingProps.children,r),t.child;case 12:return e0(e,t,t.pendingProps.children,r),t.child;case 10:e:{if(n=t.type._context,i=t.pendingProps,o=t.memoizedProps,s=i.value,n3(J9,n._currentValue),n._currentValue=s,o!==null)if(Q0(o.value,s)){if(o.children===i.children&&!l0.current){t=R4(e,t,r);break e}}else for(o=t.child,o!==null&&(o.return=t);o!==null;){var a=o.dependencies;if(a!==null){s=o.child;for(var l=a.firstContext;l!==null;){if(l.context===n){if(o.tag===1){l=C4(-1,r&-r),l.tag=2;var u=o.updateQueue;if(u!==null){u=u.shared;var h=u.pending;h===null?l.next=l:(l.next=h.next,h.next=l),u.pending=l}}o.lanes|=r,l=o.alternate,l!==null&&(l.lanes|=r),qt(o.return,r,t),a.lanes|=r;break}l=l.next}}else if(o.tag===10)s=o.type===t.type?null:o.child;else if(o.tag===18){if(s=o.return,s===null)throw Error(G(341));s.lanes|=r,a=s.alternate,a!==null&&(a.lanes|=r),qt(s,r,t),s=o.sibling}else s=o.child;if(s!==null)s.return=o;else for(s=o;s!==null;){if(s===t){s=null;break}if(o=s.sibling,o!==null){o.return=s.return,s=o;break}s=s.return}o=s}e0(e,t,i.children,r),t=t.child}return t;case 9:return i=t.type,n=t.pendingProps.children,R1(t,r),i=O0(i),n=n(i),t.flags|=1,e0(e,t,n,r),t.child;case 14:return n=t.type,i=M0(n,t.pendingProps),i=M0(n.type,i),ho(e,t,n,i,r);case 15:return cl(e,t,t.type,t.pendingProps,r);case 17:return n=t.type,i=t.pendingProps,i=t.elementType===n?i:M0(n,i),B9(e,t),t.tag=1,c0(n)?(e=!0,G9(t)):e=!1,R1(t,r),Lu(t,n,i),Vt(t,n,i,r),Qt(null,t,n,!0,e,r);case 19:return yl(e,t,r);case 22:return fl(e,t,r)}throw Error(G(156,t.tag))};function Rl(e,t){return nu(e,t)}function up(e,t,r,n){this.tag=e,this.key=r,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=n,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function k0(e,t,r,n){return new up(e,t,r,n)}function En(e){return e=e.prototype,!(!e||!e.isReactComponent)}function lp(e){if(typeof e=="function")return En(e)?1:0;if(e!=null){if(e=e.$$typeof,e===Mr)return 11;if(e===zr)return 14}return 2}function f5(e,t){var r=e.alternate;return r===null?(r=k0(e.tag,t,e.key,e.mode),r.elementType=e.elementType,r.type=e.type,r.stateNode=e.stateNode,r.alternate=e,e.alternate=r):(r.pendingProps=t,r.type=e.type,r.flags=0,r.subtreeFlags=0,r.deletions=null),r.flags=e.flags&14680064,r.childLanes=e.childLanes,r.lanes=e.lanes,r.child=e.child,r.memoizedProps=e.memoizedProps,r.memoizedState=e.memoizedState,r.updateQueue=e.updateQueue,t=e.dependencies,r.dependencies=t===null?null:{lanes:t.lanes,firstContext:t.firstContext},r.sibling=e.sibling,r.index=e.index,r.ref=e.ref,r}function F9(e,t,r,n,i,o){var s=2;if(n=e,typeof e=="function")En(e)&&(s=1);else if(typeof e=="string")s=5;else e:switch(e){case p1:return G5(r.children,i,o,t);case Lr:s=8,i|=8;break;case vt:return e=k0(12,r,t,i|2),e.elementType=vt,e.lanes=o,e;case gt:return e=k0(13,r,t,i),e.elementType=gt,e.lanes=o,e;case mt:return e=k0(19,r,t,i),e.elementType=mt,e.lanes=o,e;case Ma:return F7(r,i,o,t);default:if(typeof e=="object"&&e!==null)switch(e.$$typeof){case $a:s=10;break e;case La:s=9;break e;case Mr:s=11;break e;case zr:s=14;break e;case q4:s=16,n=null;break e}throw Error(G(130,e==null?e:typeof e,""))}return t=k0(s,r,t,i),t.elementType=e,t.type=n,t.lanes=o,t}function G5(e,t,r,n){return e=k0(7,e,n,t),e.lanes=r,e}function F7(e,t,r,n){return e=k0(22,e,n,t),e.elementType=Ma,e.lanes=r,e.stateNode={isHidden:!1},e}function et(e,t,r){return e=k0(6,e,null,t),e.lanes=r,e}function tt(e,t,r){return t=k0(4,e.children!==null?e.children:[],e.key,t),t.lanes=r,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function cp(e,t,r,n,i){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=De(0),this.expirationTimes=De(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=De(0),this.identifierPrefix=n,this.onRecoverableError=i,this.mutableSourceEagerHydrationData=null}function Sn(e,t,r,n,i,o,s,a,l){return e=new cp(e,t,r,a,l),t===1?(t=1,o===!0&&(t|=8)):t=0,o=k0(3,null,null,t),e.current=o,o.stateNode=e,o.memoizedState={element:n,isDehydrated:r,cache:null,transitions:null,pendingSuspenseBoundaries:null},sn(o),e}function fp(e,t,r){var n=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:h1,key:n==null?null:""+n,children:e,containerInfo:t,implementation:r}}function kl(e){if(!e)return h5;e=e._reactInternals;e:{if(r1(e)!==e||e.tag!==1)throw Error(G(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(c0(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(t!==null);throw Error(G(171))}if(e.tag===1){var r=e.type;if(c0(r))return Ru(e,r,t)}return t}function Pl(e,t,r,n,i,o,s,a,l){return e=Sn(r,n,!0,e,i,o,s,a,l),e.context=kl(null),r=e.current,n=r0(),i=c5(r),o=C4(n,i),o.callback=t??null,u5(r,o,i),e.current.lanes=i,U8(e,i,n),f0(e,n),e}function R7(e,t,r,n){var i=t.current,o=r0(),s=c5(i);return r=kl(r),t.context===null?t.context=r:t.pendingContext=r,t=C4(o,s),t.payload={element:e},n=n===void 0?null:n,n!==null&&(t.callback=n),e=u5(i,t,s),e!==null&&(K0(e,i,s,o),b9(e,i,s)),s}function a7(e){if(e=e.current,!e.child)return null;switch(e.child.tag){case 5:return e.child.stateNode;default:return e.child.stateNode}}function Co(e,t){if(e=e.memoizedState,e!==null&&e.dehydrated!==null){var r=e.retryLane;e.retryLane=r!==0&&r<t?r:t}}function bn(e,t){Co(e,t),(e=e.alternate)&&Co(e,t)}function dp(){return null}var Ol=typeof reportError=="function"?reportError:function(e){console.error(e)};function Cn(e){this._internalRoot=e}k7.prototype.render=Cn.prototype.render=function(e){var t=this._internalRoot;if(t===null)throw Error(G(409));R7(e,t,null,null)};k7.prototype.unmount=Cn.prototype.unmount=function(){var e=this._internalRoot;if(e!==null){this._internalRoot=null;var t=e.containerInfo;Z5(function(){R7(null,e,null,null)}),t[I4]=null}};function k7(e){this._internalRoot=e}k7.prototype.unstable_scheduleHydration=function(e){if(e){var t=cu();e={blockedOn:null,target:e,priority:t};for(var r=0;r<V4.length&&t!==0&&t<V4[r].priority;r++);V4.splice(r,0,e),r===0&&du(e)}};function An(e){return!(!e||e.nodeType!==1&&e.nodeType!==9&&e.nodeType!==11)}function P7(e){return!(!e||e.nodeType!==1&&e.nodeType!==9&&e.nodeType!==11&&(e.nodeType!==8||e.nodeValue!==" react-mount-point-unstable "))}function Ao(){}function hp(e,t,r,n,i){if(i){if(typeof n=="function"){var o=n;n=function(){var u=a7(s);o.call(u)}}var s=Pl(t,n,e,0,null,!1,!1,"",Ao);return e._reactRootContainer=s,e[I4]=s.current,a8(e.nodeType===8?e.parentNode:e),Z5(),s}for(;i=e.lastChild;)e.removeChild(i);if(typeof n=="function"){var a=n;n=function(){var u=a7(l);a.call(u)}}var l=Sn(e,0,!1,null,null,!1,!1,"",Ao);return e._reactRootContainer=l,e[I4]=l.current,a8(e.nodeType===8?e.parentNode:e),Z5(function(){R7(t,l,r,n)}),l}function O7(e,t,r,n,i){var o=r._reactRootContainer;if(o){var s=o;if(typeof i=="function"){var a=i;i=function(){var l=a7(s);a.call(l)}}R7(t,s,e,i)}else s=hp(r,t,e,i,n);return a7(s)}uu=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var r=L6(t.pendingLanes);r!==0&&(qr(t,r|1),f0(t,E3()),!(W2&6)&&(i6=E3()+500,g5()))}break;case 13:Z5(function(){var n=F4(e,1);if(n!==null){var i=r0();K0(n,e,1,i)}}),bn(e,1)}};Wr=function(e){if(e.tag===13){var t=F4(e,134217728);if(t!==null){var r=r0();K0(t,e,134217728,r)}bn(e,134217728)}};lu=function(e){if(e.tag===13){var t=c5(e),r=F4(e,t);if(r!==null){var n=r0();K0(r,e,t,n)}bn(e,t)}};cu=function(){return X2};fu=function(e,t){var r=X2;try{return X2=e,t()}finally{X2=r}};Tt=function(e,t,r){switch(t){case"input":if(_t(e,r),t=r.name,r.type==="radio"&&t!=null){for(r=e;r.parentNode;)r=r.parentNode;for(r=r.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<r.length;t++){var n=r[t];if(n!==e&&n.form===e.form){var i=b7(n);if(!i)throw Error(G(90));ja(n),_t(n,i)}}}break;case"textarea":qa(e,r);break;case"select":t=r.value,t!=null&&B1(e,!!r.multiple,t,!1)}};Ja=xn;Xa=Z5;var pp={usingClientEntryPoint:!1,Events:[$8,m1,b7,Qa,Ya,xn]},C6={findFiberByHostInstance:D5,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},yp={bundleType:C6.bundleType,version:C6.version,rendererPackageName:C6.rendererPackageName,rendererConfig:C6.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:k4.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return e=tu(e),e===null?null:e.stateNode},findFiberByHostInstance:C6.findFiberByHostInstance||dp,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var l9=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!l9.isDisabled&&l9.supportsFiber)try{w7=l9.inject(yp),u4=l9}catch{}}x0.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=pp;x0.createPortal=function(e,t){var r=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!An(t))throw Error(G(200));return fp(e,t,null,r)};x0.createRoot=function(e,t){if(!An(e))throw Error(G(299));var r=!1,n="",i=Ol;return t!=null&&(t.unstable_strictMode===!0&&(r=!0),t.identifierPrefix!==void 0&&(n=t.identifierPrefix),t.onRecoverableError!==void 0&&(i=t.onRecoverableError)),t=Sn(e,1,!1,null,null,r,!1,n,i),e[I4]=t.current,a8(e.nodeType===8?e.parentNode:e),new Cn(t)};x0.findDOMNode=function(e){if(e==null)return null;if(e.nodeType===1)return e;var t=e._reactInternals;if(t===void 0)throw typeof e.render=="function"?Error(G(188)):(e=Object.keys(e).join(","),Error(G(268,e)));return e=tu(t),e=e===null?null:e.stateNode,e};x0.flushSync=function(e){return Z5(e)};x0.hydrate=function(e,t,r){if(!P7(t))throw Error(G(200));return O7(null,e,t,!0,r)};x0.hydrateRoot=function(e,t,r){if(!An(e))throw Error(G(405));var n=r!=null&&r.hydratedSources||null,i=!1,o="",s=Ol;if(r!=null&&(r.unstable_strictMode===!0&&(i=!0),r.identifierPrefix!==void 0&&(o=r.identifierPrefix),r.onRecoverableError!==void 0&&(s=r.onRecoverableError)),t=Pl(t,null,e,1,r??null,i,!1,o,s),e[I4]=t.current,a8(e),n)for(e=0;e<n.length;e++)r=n[e],i=r._getVersion,i=i(r._source),t.mutableSourceEagerHydrationData==null?t.mutableSourceEagerHydrationData=[r,i]:t.mutableSourceEagerHydrationData.push(r,i);return new k7(t)};x0.render=function(e,t,r){if(!P7(t))throw Error(G(200));return O7(null,e,t,!1,r)};x0.unmountComponentAtNode=function(e){if(!P7(e))throw Error(G(40));return e._reactRootContainer?(Z5(function(){O7(null,null,e,!1,function(){e._reactRootContainer=null,e[I4]=null})}),!0):!1};x0.unstable_batchedUpdates=xn;x0.unstable_renderSubtreeIntoContainer=function(e,t,r,n){if(!P7(r))throw Error(G(200));if(e==null||e._reactInternals===void 0)throw Error(G(38));return O7(e,t,r,!1,n)};x0.version="18.2.0-next-9e3b772b8-20220608";function Dl(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(Dl)}catch(e){console.error(e)}}Dl(),Pa.exports=x0;var vp=Pa.exports,Bo=vp;pt.createRoot=Bo.createRoot,pt.hydrateRoot=Bo.hydrateRoot;const D7=64,Ul=1e8,gp="http://127.0.0.1:50051",mp="https://dev-seed.rooch.network:443",xp="https://test-seed.rooch.network",wp=20230103,_p=20230104,Ep=20230102;class Bn{constructor(t,r,n){this.id=t,this.name=r,this.options=n}get url(){return this.options.url}get websocket(){return this.options.websocket||this.options.url}get info(){return{chainId:`0x${this.id.toString(16)}`,chainName:this.name,iconUrls:["https://github.com/rooch-network/rooch/blob/main/docs/website/public/logo/rooch_black_text.png"],nativeCurrency:{name:"ROH",symbol:"ROH",decimals:18},rpcUrls:[this.options.url]}}}const Sp=new Bn(_p,"local",{url:gp}),Tn=new Bn(wp,"dev",{url:mp}),bp=new Bn(Ep,"test",{url:xp}),Cp=[Sp,Tn,bp];var P1=(e=>(e[e.Bitcoin=0]="Bitcoin",e[e.Ether=60]="Ether",e[e.Sui=784]="Sui",e[e.Nostr=1237]="Nostr",e[e.Rooch=20230101]="Rooch",e))(P1||{});function Ap(e){switch(e){case 60:return"ether";case 0:return"bitcoin";case 1237:return"nostr";case 20230101:return"rooch";case 784:return"sui"}}/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */const Nl=e=>e instanceof Uint8Array,v8=e=>new Uint32Array(e.buffer,e.byteOffset,Math.floor(e.byteLength/4)),R9=e=>new DataView(e.buffer,e.byteOffset,e.byteLength),Bp=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68;if(!Bp)throw new Error("Non little-endian hardware is not supported");const Tp=Array.from({length:256},(e,t)=>t.toString(16).padStart(2,"0"));function Ip(e){if(!Nl(e))throw new Error("Uint8Array expected");let t="";for(let r=0;r<e.length;r++)t+=Tp[e[r]];return t}function Fp(e){if(typeof e!="string")throw new Error(`utf8ToBytes expected string, got ${typeof e}`);return new Uint8Array(new TextEncoder().encode(e))}function G0(e){if(typeof e=="string"&&(e=Fp(e)),!Nl(e))throw new Error(`expected Uint8Array, got ${typeof e}`);return e}let U7=class{clone(){return this._cloneInto()}};const Rp={}.toString;function kp(e,t){if(t!==void 0&&Rp.call(t)!=="[object Object]")throw new Error("Options should be object or undefined");return Object.assign(e,t)}function $l(e){const t=n=>e().update(G0(n)).digest(),r=e();return t.outputLen=r.outputLen,t.blockLen=r.blockLen,t.create=()=>e(),t}function Pp(e){const t=(n,i)=>e(i).update(G0(n)).digest(),r=e({});return t.outputLen=r.outputLen,t.blockLen=r.blockLen,t.create=n=>e(n),t}function Op(e){return e>64&&e<91?e-65:e>96&&e<123?e-71:e>47&&e<58?e+4:e===43?62:e===47?63:0}function Dp(e,t){for(var r=e.replace(/[^A-Za-z0-9+/]/g,""),n=r.length,i=t?Math.ceil((n*3+1>>2)/t)*t:n*3+1>>2,o=new Uint8Array(i),s,a,l=0,u=0,h=0;h<n;h++)if(a=h&3,l|=Op(r.charCodeAt(h))<<6*(3-a),a===3||n-h===1){for(s=0;s<3&&u<i;s++,u++)o[u]=l>>>(16>>>s&24)&255;l=0}return o}function c9(e){return e<26?e+65:e<52?e+71:e<62?e-4:e===62?43:e===63?47:65}function ar(e){for(var t=2,r="",n=e.length,i=0,o=0;o<n;o++)t=o%3,i|=e[o]<<(16>>>t&24),(t===2||e.length-o===1)&&(r+=String.fromCodePoint(c9(i>>>18&63),c9(i>>>12&63),c9(i>>>6&63),c9(i&63)),i=0);return r.slice(0,r.length-2+t)+(t===2?"":t===1?"=":"==")}var In={},ur=function(e,t){return ur=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,n){r.__proto__=n}||function(r,n){for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(r[i]=n[i])},ur(e,t)};function Ll(e,t){if(typeof t!="function"&&t!==null)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");ur(e,t);function r(){this.constructor=e}e.prototype=t===null?Object.create(t):(r.prototype=t.prototype,new r)}var u7=function(){return u7=Object.assign||function(t){for(var r,n=1,i=arguments.length;n<i;n++){r=arguments[n];for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(t[o]=r[o])}return t},u7.apply(this,arguments)};function Ml(e,t){var r={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(e!=null&&typeof Object.getOwnPropertySymbols=="function")for(var i=0,n=Object.getOwnPropertySymbols(e);i<n.length;i++)t.indexOf(n[i])<0&&Object.prototype.propertyIsEnumerable.call(e,n[i])&&(r[n[i]]=e[n[i]]);return r}function zl(e,t,r,n){var i=arguments.length,o=i<3?t:n===null?n=Object.getOwnPropertyDescriptor(t,r):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(e,t,r,n);else for(var a=e.length-1;a>=0;a--)(s=e[a])&&(o=(i<3?s(o):i>3?s(t,r,o):s(t,r))||o);return i>3&&o&&Object.defineProperty(t,r,o),o}function jl(e,t){return function(r,n){t(r,n,e)}}function Up(e,t,r,n,i,o){function s(S){if(S!==void 0&&typeof S!="function")throw new TypeError("Function expected");return S}for(var a=n.kind,l=a==="getter"?"get":a==="setter"?"set":"value",u=!t&&e?n.static?e:e.prototype:null,h=t||(u?Object.getOwnPropertyDescriptor(u,n.name):{}),y,x=!1,b=r.length-1;b>=0;b--){var C={};for(var T in n)C[T]=T==="access"?{}:n[T];for(var T in n.access)C.access[T]=n.access[T];C.addInitializer=function(S){if(x)throw new TypeError("Cannot add initializers after decoration has completed");o.push(s(S||null))};var k=(0,r[b])(a==="accessor"?{get:h.get,set:h.set}:h[l],C);if(a==="accessor"){if(k===void 0)continue;if(k===null||typeof k!="object")throw new TypeError("Object expected");(y=s(k.get))&&(h.get=y),(y=s(k.set))&&(h.set=y),(y=s(k.init))&&i.unshift(y)}else(y=s(k))&&(a==="field"?i.unshift(y):h[l]=y)}u&&Object.defineProperty(u,n.name,h),x=!0}function Np(e,t,r){for(var n=arguments.length>2,i=0;i<t.length;i++)r=n?t[i].call(e,r):t[i].call(e);return n?r:void 0}function $p(e){return typeof e=="symbol"?e:"".concat(e)}function Lp(e,t,r){return typeof t=="symbol"&&(t=t.description?"[".concat(t.description,"]"):""),Object.defineProperty(e,"name",{configurable:!0,value:r?"".concat(r," ",t):t})}function Hl(e,t){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(e,t)}function ql(e,t,r,n){function i(o){return o instanceof r?o:new r(function(s){s(o)})}return new(r||(r=Promise))(function(o,s){function a(h){try{u(n.next(h))}catch(y){s(y)}}function l(h){try{u(n.throw(h))}catch(y){s(y)}}function u(h){h.done?o(h.value):i(h.value).then(a,l)}u((n=n.apply(e,t||[])).next())})}function Wl(e,t){var r={label:0,sent:function(){if(o[0]&1)throw o[1];return o[1]},trys:[],ops:[]},n,i,o,s;return s={next:a(0),throw:a(1),return:a(2)},typeof Symbol=="function"&&(s[Symbol.iterator]=function(){return this}),s;function a(u){return function(h){return l([u,h])}}function l(u){if(n)throw new TypeError("Generator is already executing.");for(;s&&(s=0,u[0]&&(r=0)),r;)try{if(n=1,i&&(o=u[0]&2?i.return:u[0]?i.throw||((o=i.return)&&o.call(i),0):i.next)&&!(o=o.call(i,u[1])).done)return o;switch(i=0,o&&(u=[u[0]&2,o.value]),u[0]){case 0:case 1:o=u;break;case 4:return r.label++,{value:u[1],done:!1};case 5:r.label++,i=u[1],u=[0];continue;case 7:u=r.ops.pop(),r.trys.pop();continue;default:if(o=r.trys,!(o=o.length>0&&o[o.length-1])&&(u[0]===6||u[0]===2)){r=0;continue}if(u[0]===3&&(!o||u[1]>o[0]&&u[1]<o[3])){r.label=u[1];break}if(u[0]===6&&r.label<o[1]){r.label=o[1],o=u;break}if(o&&r.label<o[2]){r.label=o[2],r.ops.push(u);break}o[2]&&r.ops.pop(),r.trys.pop();continue}u=t.call(e,r)}catch(h){u=[6,h],i=0}finally{n=o=0}if(u[0]&5)throw u[1];return{value:u[0]?u[1]:void 0,done:!0}}}var N7=Object.create?function(e,t,r,n){n===void 0&&(n=r);var i=Object.getOwnPropertyDescriptor(t,r);(!i||("get"in i?!t.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,n,i)}:function(e,t,r,n){n===void 0&&(n=r),e[n]=t[r]};function Vl(e,t){for(var r in e)r!=="default"&&!Object.prototype.hasOwnProperty.call(t,r)&&N7(t,e,r)}function l7(e){var t=typeof Symbol=="function"&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&typeof e.length=="number")return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}function Fn(e,t){var r=typeof Symbol=="function"&&e[Symbol.iterator];if(!r)return e;var n=r.call(e),i,o=[],s;try{for(;(t===void 0||t-- >0)&&!(i=n.next()).done;)o.push(i.value)}catch(a){s={error:a}}finally{try{i&&!i.done&&(r=n.return)&&r.call(n)}finally{if(s)throw s.error}}return o}function Kl(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(Fn(arguments[t]));return e}function Gl(){for(var e=0,t=0,r=arguments.length;t<r;t++)e+=arguments[t].length;for(var n=Array(e),i=0,t=0;t<r;t++)for(var o=arguments[t],s=0,a=o.length;s<a;s++,i++)n[i]=o[s];return n}function Ql(e,t,r){if(r||arguments.length===2)for(var n=0,i=t.length,o;n<i;n++)(o||!(n in t))&&(o||(o=Array.prototype.slice.call(t,0,n)),o[n]=t[n]);return e.concat(o||Array.prototype.slice.call(t))}function o6(e){return this instanceof o6?(this.v=e,this):new o6(e)}function Yl(e,t,r){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var n=r.apply(e,t||[]),i,o=[];return i={},s("next"),s("throw"),s("return"),i[Symbol.asyncIterator]=function(){return this},i;function s(x){n[x]&&(i[x]=function(b){return new Promise(function(C,T){o.push([x,b,C,T])>1||a(x,b)})})}function a(x,b){try{l(n[x](b))}catch(C){y(o[0][3],C)}}function l(x){x.value instanceof o6?Promise.resolve(x.value.v).then(u,h):y(o[0][2],x)}function u(x){a("next",x)}function h(x){a("throw",x)}function y(x,b){x(b),o.shift(),o.length&&a(o[0][0],o[0][1])}}function Jl(e){var t,r;return t={},n("next"),n("throw",function(i){throw i}),n("return"),t[Symbol.iterator]=function(){return this},t;function n(i,o){t[i]=e[i]?function(s){return(r=!r)?{value:o6(e[i](s)),done:!1}:o?o(s):s}:o}}function Xl(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var t=e[Symbol.asyncIterator],r;return t?t.call(e):(e=typeof l7=="function"?l7(e):e[Symbol.iterator](),r={},n("next"),n("throw"),n("return"),r[Symbol.asyncIterator]=function(){return this},r);function n(o){r[o]=e[o]&&function(s){return new Promise(function(a,l){s=e[o](s),i(a,l,s.done,s.value)})}}function i(o,s,a,l){Promise.resolve(l).then(function(u){o({value:u,done:a})},s)}}function Zl(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e}var Mp=Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t};function ec(e){if(e&&e.__esModule)return e;var t={};if(e!=null)for(var r in e)r!=="default"&&Object.prototype.hasOwnProperty.call(e,r)&&N7(t,e,r);return Mp(t,e),t}function tc(e){return e&&e.__esModule?e:{default:e}}function rc(e,t,r,n){if(r==="a"&&!n)throw new TypeError("Private accessor was defined without a getter");if(typeof t=="function"?e!==t||!n:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return r==="m"?n:r==="a"?n.call(e):n?n.value:t.get(e)}function nc(e,t,r,n,i){if(n==="m")throw new TypeError("Private method is not writable");if(n==="a"&&!i)throw new TypeError("Private accessor was defined without a setter");if(typeof t=="function"?e!==t||!i:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return n==="a"?i.call(e,r):i?i.value=r:t.set(e,r),r}function ic(e,t){if(t===null||typeof t!="object"&&typeof t!="function")throw new TypeError("Cannot use 'in' operator on non-object");return typeof e=="function"?t===e:e.has(t)}function oc(e,t,r){if(t!=null){if(typeof t!="object"&&typeof t!="function")throw new TypeError("Object expected.");var n;if(r){if(!Symbol.asyncDispose)throw new TypeError("Symbol.asyncDispose is not defined.");n=t[Symbol.asyncDispose]}if(n===void 0){if(!Symbol.dispose)throw new TypeError("Symbol.dispose is not defined.");n=t[Symbol.dispose]}if(typeof n!="function")throw new TypeError("Object not disposable.");e.stack.push({value:t,dispose:n,async:r})}else r&&e.stack.push({async:!0});return t}var zp=typeof SuppressedError=="function"?SuppressedError:function(e,t,r){var n=new Error(r);return n.name="SuppressedError",n.error=e,n.suppressed=t,n};function sc(e){function t(n){e.error=e.hasError?new zp(n,e.error,"An error was suppressed during disposal."):n,e.hasError=!0}function r(){for(;e.stack.length;){var n=e.stack.pop();try{var i=n.dispose&&n.dispose.call(n.value);if(n.async)return Promise.resolve(i).then(r,function(o){return t(o),r()})}catch(o){t(o)}}if(e.hasError)throw e.error}return r()}const jp={__extends:Ll,__assign:u7,__rest:Ml,__decorate:zl,__param:jl,__metadata:Hl,__awaiter:ql,__generator:Wl,__createBinding:N7,__exportStar:Vl,__values:l7,__read:Fn,__spread:Kl,__spreadArrays:Gl,__spreadArray:Ql,__await:o6,__asyncGenerator:Yl,__asyncDelegator:Jl,__asyncValues:Xl,__makeTemplateObject:Zl,__importStar:ec,__importDefault:tc,__classPrivateFieldGet:rc,__classPrivateFieldSet:nc,__classPrivateFieldIn:ic,__addDisposableResource:oc,__disposeResources:sc},Hp=Object.freeze(Object.defineProperty({__proto__:null,__addDisposableResource:oc,get __assign(){return u7},__asyncDelegator:Jl,__asyncGenerator:Yl,__asyncValues:Xl,__await:o6,__awaiter:ql,__classPrivateFieldGet:rc,__classPrivateFieldIn:ic,__classPrivateFieldSet:nc,__createBinding:N7,__decorate:zl,__disposeResources:sc,__esDecorate:Up,__exportStar:Vl,__extends:Ll,__generator:Wl,__importDefault:tc,__importStar:ec,__makeTemplateObject:Zl,__metadata:Hl,__param:jl,__propKey:$p,__read:Fn,__rest:Ml,__runInitializers:Np,__setFunctionName:Lp,__spread:Kl,__spreadArray:Ql,__spreadArrays:Gl,__values:l7,default:jp},Symbol.toStringTag,{value:"Module"})),s3=Rr(Hp);var $7={};const ace4,40060,40479,40644,27503,63751,20023,131207,38429,25143,38050,0,20539,28158,171123,40870,15817,34959,147790,28791,23797,19232,152013,13657,154928,24866,166450,36775,37366,29073,26393,29626,144001,172295,15499,137600,19216,30948,29698,20910,165647,16393,27235,172730,16931,34319,133743,31274,170311,166634,38741,28749,21284,139390,37876,30425,166371,40871,30685,20131,20464,20668,20015,20247,40872,21556,32139,22674,22736,138678,24210,24217,24514,141074,25995,144377,26905,27203,146531,27903,0,29184,148741,29580,16091,150035,23317,29881,35715,154788,153237,31379,31724,31939,32364,33528,34199,40873,34960,40874,36537,40875,36815,34143,39392,37409,40876,167353,136255,16497,17058,23066,0,0,0,39016,26475,17014,22333,0,34262,149883,33471,160013,19585,159092,23931,158485,159678,40877,40878,23446,40879,26343,32347,28247,31178,15752,17603,143958,141206,17306,17718,0,23765,146202,35577,23672,15634,144721,23928,40882,29015,17752,147692,138787,19575,14712,13386,131492,158785,35532,20404,131641,22975,33132,38998,170234,24379,134047,0,139713,166253,16642,18107,168057,16135,40883,172469,16632,14294,18167,158790,16764,165554,160767,17773,14548,152730,17761,17691,19849,19579,19830,17898,16328,150287,13921,17630,17597,16877,23870,23880,23894,15868,14351,23972,23993,14368,14392,24130,24253,24357,24451,14600,14612,14655,14669,24791,24893,23781,14729,25015,25017,25039,14776,25132,25232,25317,25368,14840,22193,14851,25570,25595,25607,25690,14923,25792,23829,22049,40863,14999,25990,15037,26111,26195,15090,26258,15138,26390,15170,26532,26624,15192,26698,26756,15218,15217,15227,26889,26947,29276,26980,27039,27013,15292,27094,15325,27237,27252,27249,27266,15340,27289,15346,27307,27317,27348,27382,27521,27585,27626,27765,27818,15563,27906,27910,27942,28033,15599,28068,28081,28181,28184,28201,28294,166336,28347,28386,28378,40831,28392,28393,28452,28468,15686,147265,28545,28606,15722,15733,29111,23705,15754,28716,15761,28752,28756,28783,28799,28809,131877,17345,13809,134872,147159,22462,159443,28990,153568,13902,27042,166889,23412,31305,153825,169177,31333,31357,154028,31419,31408,31426,31427,29137,156813,16842,31450,31453,31466,16879,21682,154625,31499,31573,31529,152334,154878,31650,31599,33692,154548,158847,31696,33825,31634,31672,154912,15789,154725,33938,31738,31750,31797,154817,31812,31875,149634,31910,26237,148856,31945,31943,31974,31860,31987,31989,31950,32359,17693,159300,32093,159446,29837,32137,32171,28981,32179,32210,147543,155689,32228,15635,32245,137209,32229,164717,32285,155937,155994,32366,32402,17195,37996,32295,32576,32577,32583,31030,156368,39393,32663,156497,32675,136801,131176,17756,145254,17667,164666,32762,156809,32773,32776,32797,32808,32815,172167,158915,32827,32828,32865,141076,18825,157222,146915,157416,26405,32935,166472,33031,33050,22704,141046,27775,156824,151480,25831,136330,33304,137310,27219,150117,150165,17530,33321,133901,158290,146814,20473,136445,34018,33634,158474,149927,144688,137075,146936,33450,26907,194964,16859,34123,33488,33562,134678,137140,14017,143741,144730,33403,33506,33560,147083,159139,158469,158615,144846,15807,33565,21996,33669,17675,159141,33708,33729,33747,13438,159444,27223,34138,13462,159298,143087,33880,154596,33905,15827,17636,27303,33866,146613,31064,33960,158614,159351,159299,34014,33807,33681,17568,33939,34020,154769,16960,154816,17731,34100,23282,159385,17703,34163,17686,26559,34326,165413,165435,34241,159880,34306,136578,159949,194994,17770,34344,13896,137378,21495,160666,34430,34673,172280,34798,142375,34737,34778,34831,22113,34412,26710,17935,34885,34886,161248,146873,161252,34910,34972,18011,34996,34997,25537,35013,30583,161551,35207,35210,35238,35241,35239,35260,166437,35303,162084,162493,35484,30611,37374,35472,162393,31465,162618,147343,18195,162616,29052,35596,35615,152624,152933,35647,35660,35661,35497,150138,35728,35739,35503,136927,17941,34895,35995,163156,163215,195028,14117,163155,36054,163224,163261,36114,36099,137488,36059,28764,36113,150729,16080,36215,36265,163842,135188,149898,15228,164284,160012,31463,36525,36534,36547,37588,36633,36653,164709,164882,36773,37635,172703,133712,36787,18730,166366,165181,146875,24312,143970,36857,172052,165564,165121,140069,14720,159447,36919,165180,162494,36961,165228,165387,37032,165651,37060,165606,37038,37117,37223,15088,37289,37316,31916,166195,138889,37390,27807,37441,37474,153017,37561,166598,146587,166668,153051,134449,37676,37739,166625,166891,28815,23235,166626,166629,18789,37444,166892,166969,166911,37747,37979,36540,38277,38310,37926,38304,28662,17081,140922,165592,135804,146990,18911,27676,38523,38550,16748,38563,159445,25050,38582,30965,166624,38589,21452,18849,158904,131700,156688,168111,168165,150225,137493,144138,38705,34370,38710,18959,17725,17797,150249,28789,23361,38683,38748,168405,38743,23370,168427,38751,37925,20688,143543,143548,38793,38815,38833,38846,38848,38866,38880,152684,38894,29724,169011,38911,38901,168989,162170,19153,38964,38963,38987,39014,15118,160117,15697,132656,147804,153350,39114,39095,39112,39111,19199,159015,136915,21936,39137,39142,39148,37752,39225,150057,19314,170071,170245,39413,39436,39483,39440,39512,153381,14020,168113,170965,39648,39650,170757,39668,19470,39700,39725,165376,20532,39732,158120,14531,143485,39760,39744,171326,23109,137315,39822,148043,39938,39935,39948,171624,40404,171959,172434,172459,172257,172323,172511,40318,40323,172340,40462,26760,40388,139611,172435,172576,137531,172595,40249,172217,172724,40592,40597,40606,40610,19764,40618,40623,148324,40641,15200,14821,15645,20274,14270,166955,40706,40712,19350,37924,159138,40727,40726,40761,22175,22154,40773,39352,168075,38898,33919,40802,40809,31452,40846,29206,19390,149877,149947,29047,150008,148296,150097,29598,166874,137466,31135,166270,167478,37737,37875,166468,37612,37761,37835,166252,148665,29207,16107,30578,31299,28880,148595,148472,29054,137199,28835,137406,144793,16071,137349,152623,137208,14114,136955,137273,14049,137076,137425,155467,14115,136896,22363,150053,136190,135848,136134,136374,34051,145062,34051,33877,149908,160101,146993,152924,147195,159826,17652,145134,170397,159526,26617,14131,15381,15847,22636,137506,26640,16471,145215,147681,147595,147727,158753,21707,22174,157361,22162,135135,134056,134669,37830,166675,37788,20216,20779,14361,148534,20156,132197,131967,20299,20362,153169,23144,131499,132043,14745,131850,132116,13365,20265,131776,167603,131701,35546,131596,20120,20685,20749,20386,20227,150030,147082,20290,20526,20588,20609,20428,20453,20568,20732,20825,20827,20829,20830,28278,144789,147001,147135,28018,137348,147081,20904,20931,132576,17629,132259,132242,132241,36218,166556,132878,21081,21156,133235,21217,37742,18042,29068,148364,134176,149932,135396,27089,134685,29817,16094,29849,29716,29782,29592,19342,150204,147597,21456,13700,29199,147657,21940,131909,21709,134086,22301,37469,38644,37734,22493,22413,22399,13886,22731,23193,166470,136954,137071,136976,23084,22968,37519,23166,23247,23058,153926,137715,137313,148117,14069,27909,29763,23073,155267,23169,166871,132115,37856,29836,135939,28933,18802,37896,166395,37821,14240,23582,23710,24158,24136,137622,137596,146158,24269,23375,137475,137476,14081,137376,14045,136958,14035,33066,166471,138682,144498,166312,24332,24334,137511,137131,23147,137019,23364,34324,161277,34912,24702,141408,140843,24539,16056,140719,140734,168072,159603,25024,131134,131142,140827,24985,24984,24693,142491,142599,149204,168269,25713,149093,142186,14889,142114,144464,170218,142968,25399,173147,25782,25393,25553,149987,142695,25252,142497,25659,25963,26994,15348,143502,144045,149897,144043,21773,144096,137433,169023,26318,144009,143795,15072,16784,152964,166690,152975,136956,152923,152613,30958,143619,137258,143924,13412,143887,143746,148169,26254,159012,26219,19347,26160,161904,138731,26211,144082,144097,26142,153714,14545,145466,145340,15257,145314,144382,29904,15254,26511,149034,26806,26654,15300,27326,14435,145365,148615,27187,27218,27337,27397,137490,25873,26776,27212,15319,27258,27479,147392,146586,37792,37618,166890,166603,37513,163870,166364,37991,28069,28427,149996,28007,147327,15759,28164,147516,23101,28170,22599,27940,30786,28987,148250,148086,28913,29264,29319,29332,149391,149285,20857,150180,132587,29818,147192,144991,150090,149783,155617,16134,16049,150239,166947,147253,24743,16115,29900,29756,37767,29751,17567,159210,17745,30083,16227,150745,150790,16216,30037,30323,173510,15129,29800,166604,149931,149902,15099,15821,150094,16127,149957,149747,37370,22322,37698,166627,137316,20703,152097,152039,30584,143922,30478,30479,30587,149143,145281,14942,149744,29752,29851,16063,150202,150215,16584,150166,156078,37639,152961,30750,30861,30856,30930,29648,31065,161601,153315,16654,31131,33942,31141,27181,147194,31290,31220,16750,136934,16690,37429,31217,134476,149900,131737,146874,137070,13719,21867,13680,13994,131540,134157,31458,23129,141045,154287,154268,23053,131675,30960,23082,154566,31486,16889,31837,31853,16913,154547,155324,155302,31949,150009,137136,31886,31868,31918,27314,32220,32263,32211,32590,156257,155996,162632,32151,155266,17002,158581,133398,26582,131150,144847,22468,156690,156664,149858,32733,31527,133164,154345,154947,31500,155150,39398,34373,39523,27164,144447,14818,150007,157101,39455,157088,33920,160039,158929,17642,33079,17410,32966,33033,33090,157620,39107,158274,33378,33381,158289,33875,159143,34320,160283,23174,16767,137280,23339,137377,23268,137432,34464,195004,146831,34861,160802,23042,34926,20293,34951,35007,35046,35173,35149,153219,35156,161669,161668,166901,166873,166812,166393,16045,33955,18165,18127,14322,35389,35356,169032,24397,37419,148100,26068,28969,28868,137285,40301,35999,36073,163292,22938,30659,23024,17262,14036,36394,36519,150537,36656,36682,17140,27736,28603,140065,18587,28537,28299,137178,39913,14005,149807,37051,37015,21873,18694,37307,37892,166475,16482,166652,37927,166941,166971,34021,35371,38297,38311,38295,38294,167220,29765,16066,149759,150082,148458,16103,143909,38543,167655,167526,167525,16076,149997,150136,147438,29714,29803,16124,38721,168112,26695,18973,168083,153567,38749,37736,166281,166950,166703,156606,37562,23313,35689,18748,29689,147995,38811,38769,39224,134950,24001,166853,150194,38943,169178,37622,169431,37349,17600,166736,150119,166756,39132,166469,16128,37418,18725,33812,39227,39245,162566,15869,39323,19311,39338,39516,166757,153800,27279,39457,23294,39471,170225,19344,170312,39356,19389,19351,37757,22642,135938,22562,149944,136424,30788,141087,146872,26821,15741,37976,14631,24912,141185,141675,24839,40015,40019,40059,39989,39952,39807,39887,171565,39839,172533,172286,40225,19630,147716,40472,19632,40204,172468,172269,172275,170287,40357,33981,159250,159711,158594,34300,17715,159140,159364,159216,33824,34286,159232,145367,155748,31202,144796,144960,18733,149982,15714,37851,37566,37704,131775,30905,37495,37965,20452,13376,36964,152925,30781,30804,30902,30795,137047,143817,149825,13978,20338,28634,28633,28702,28702,21524,147893,22459,22771,22410,40214,22487,28980,13487,147884,29163,158784,151447,23336,137141,166473,24844,23246,23051,17084,148616,14124,19323,166396,37819,37816,137430,134941,33906,158912,136211,148218,142374,148417,22932,146871,157505,32168,155995,155812,149945,149899,166394,37605,29666,16105,29876,166755,137375,16097,150195,27352,29683,29691,16086,150078,150164,137177,150118,132007,136228,149989,29768,149782,28837,149878,37508,29670,37727,132350,37681,166606,166422,37766,166887,153045,18741,166530,29035,149827,134399,22180,132634,134123,134328,21762,31172,137210,32254,136898,150096,137298,17710,37889,14090,166592,149933,22960,137407,137347,160900,23201,14050,146779,14e3,37471,23161,166529,137314,37748,15565,133812,19094,14730,20724,15721,15692,136092,29045,17147,164376,28175,168164,17643,27991,163407,28775,27823,15574,147437,146989,28162,28428,15727,132085,30033,14012,13512,18048,16090,18545,22980,37486,18750,36673,166940,158656,22546,22472,14038,136274,28926,148322,150129,143331,135856,140221,26809,26983,136088,144613,162804,145119,166531,145366,144378,150687,27162,145069,158903,33854,17631,17614,159014,159057,158850,159710,28439,160009,33597,137018,33773,158848,159827,137179,22921,23170,137139,23137,23153,137477,147964,14125,23023,137020,14023,29070,37776,26266,148133,23150,23083,148115,27179,147193,161590,148571,148170,28957,148057,166369,20400,159016,23746,148686,163405,148413,27148,148054,135940,28838,28979,148457,15781,27871,194597,150095,32357,23019,23855,15859,24412,150109,137183,32164,33830,21637,146170,144128,131604,22398,133333,132633,16357,139166,172726,28675,168283,23920,29583,31955,166489,168992,20424,32743,29389,29456,162548,29496,29497,153334,29505,29512,16041,162584,36972,29173,149746,29665,33270,16074,30476,16081,27810,22269,29721,29726,29727,16098,16112,16116,16122,29907,16142,16211,30018,30061,30066,30093,16252,30152,30172,16320,30285,16343,30324,16348,30330,151388,29064,22051,35200,22633,16413,30531,16441,26465,16453,13787,30616,16490,16495,23646,30654,30667,22770,30744,28857,30748,16552,30777,30791,30801,30822,33864,152885,31027,26627,31026,16643,16649,31121,31129,36795,31238,36796,16743,31377,16818,31420,33401,16836,31439,31451,16847,20001,31586,31596,31611,31762,31771,16992,17018,31867,31900,17036,31928,17044,31981,36755,28864,134351,32207,32212,32208,32253,32686,32692,29343,17303,32800,32805,31545,32814,32817,32852,15820,22452,28832,32951,33001,17389,33036,29482,33038,33042,30048,33044,17409,15161,33110,33113,33114,17427,22586,33148,33156,17445,33171,17453,33189,22511,33217,33252,33364,17551,33446,33398,33482,33496,33535,17584,33623,38505,27018,33797,28917,33892,24803,33928,17668,33982,34017,34040,34064,34104,34130,17723,34159,34160,34272,17783,34418,34450,34482,34543,38469,34699,17926,17943,34990,35071,35108,35143,35217,162151,35369,35384,35476,35508,35921,36052,36082,36124,18328,22623,36291,18413,20206,36410,21976,22356,36465,22005,36528,18487,36558,36578,36580,36589,36594,36791,36801,36810,36812,36915,39364,18605,39136,37395,18718,37416,37464,37483,37553,37550,37567,37603,37611,37619,37620,37629,37699,37764,37805,18757,18769,40639,37911,21249,37917,37933,37950,18794,37972,38009,38189,38306,18855,38388,38451,18917,26528,18980,38720,18997,38834,38850,22100,19172,24808,39097,19225,39153,22596,39182,39193,20916,39196,39223,39234,39261,39266,19312,39365,19357,39484,39695,31363,39785,39809,39901,39921,39924,19565,39968,14191,138178,40265,39994,40702,22096,40339,40381,40384,40444,38134,36790,40571,40620,40625,40637,40646,38108,40674,40689,40696,31432,40772,131220,131767,132e3,26906,38083,22956,132311,22592,38081,14265,132565,132629,132726,136890,22359,29043,133826,133837,134079,21610,194619,134091,21662,134139,134203,134227,134245,134268,24807,134285,22138,134325,134365,134381,134511,134578,134600,26965,39983,34725,134660,134670,134871,135056,134957,134771,23584,135100,24075,135260,135247,135286,26398,135291,135304,135318,13895,135359,135379,135471,135483,21348,33965,135907,136053,135990,35713,136567,136729,137155,137159,20088,28859,137261,137578,137773,137797,138282,138352,138412,138952,25283,138965,139029,29080,26709,139333,27113,14024,139900,140247,140282,141098,141425,141647,33533,141671,141715,142037,35237,142056,36768,142094,38840,142143,38983,39613,142412,0,142472,142519,154600,142600,142610,142775,142741,142914,143220,143308,143411,143462,144159,144350,24497,26184,26303,162425,144743,144883,29185,149946,30679,144922,145174,32391,131910,22709,26382,26904,146087,161367,155618,146961,147129,161278,139418,18640,19128,147737,166554,148206,148237,147515,148276,148374,150085,132554,20946,132625,22943,138920,15294,146687,148484,148694,22408,149108,14747,149295,165352,170441,14178,139715,35678,166734,39382,149522,149755,150037,29193,150208,134264,22885,151205,151430,132985,36570,151596,21135,22335,29041,152217,152601,147274,150183,21948,152646,152686,158546,37332,13427,152895,161330,152926,18200,152930,152934,153543,149823,153693,20582,13563,144332,24798,153859,18300,166216,154286,154505,154630,138640,22433,29009,28598,155906,162834,36950,156082,151450,35682,156674,156746,23899,158711,36662,156804,137500,35562,150006,156808,147439,156946,19392,157119,157365,141083,37989,153569,24981,23079,194765,20411,22201,148769,157436,20074,149812,38486,28047,158909,13848,35191,157593,157806,156689,157790,29151,157895,31554,168128,133649,157990,37124,158009,31301,40432,158202,39462,158253,13919,156777,131105,31107,158260,158555,23852,144665,33743,158621,18128,158884,30011,34917,159150,22710,14108,140685,159819,160205,15444,160384,160389,37505,139642,160395,37680,160486,149968,27705,38047,160848,134904,34855,35061,141606,164979,137137,28344,150058,137248,14756,14009,23568,31203,17727,26294,171181,170148,35139,161740,161880,22230,16607,136714,14753,145199,164072,136133,29101,33638,162269,168360,23143,19639,159919,166315,162301,162314,162571,163174,147834,31555,31102,163849,28597,172767,27139,164632,21410,159239,37823,26678,38749,164207,163875,158133,136173,143919,163912,23941,166960,163971,22293,38947,166217,23979,149896,26046,27093,21458,150181,147329,15377,26422,163984,164084,164142,139169,164175,164233,164271,164378,164614,164655,164746,13770,164968,165546,18682,25574,166230,30728,37461,166328,17394,166375,17375,166376,166726,166868,23032,166921,36619,167877,168172,31569,168208,168252,15863,168286,150218,36816,29327,22155,169191,169449,169392,169400,169778,170193,170313,170346,170435,170536,170766,171354,171419,32415,171768,171811,19620,38215,172691,29090,172799,19857,36882,173515,19868,134300,36798,21953,36794,140464,36793,150163,17673,32383,28502,27313,20202,13540,166700,161949,14138,36480,137205,163876,166764,166809,162366,157359,15851,161365,146615,153141,153942,20122,155265,156248,22207,134765,36366,23405,147080,150686,25566,25296,137206,137339,25904,22061,154698,21530,152337,15814,171416,19581,22050,22046,32585,155352,22901,146752,34672,19996,135146,134473,145082,33047,40286,36120,30267,40005,30286,30649,37701,21554,33096,33527,22053,33074,33816,32957,21994,31074,22083,21526,134813,13774,22021,22001,26353,164578,13869,30004,22e3,21946,21655,21874,134209,134294,24272,151880,134774,142434,134818,40619,32090,21982,135285,25245,38765,21652,36045,29174,37238,25596,25529,25598,21865,142147,40050,143027,20890,13535,134567,20903,21581,21790,21779,30310,36397,157834,30129,32950,34820,34694,35015,33206,33820,135361,17644,29444,149254,23440,33547,157843,22139,141044,163119,147875,163187,159440,160438,37232,135641,37384,146684,173737,134828,134905,29286,138402,18254,151490,163833,135147,16634,40029,25887,142752,18675,149472,171388,135148,134666,24674,161187,135149,0,155720,135559,29091,32398,40272,19994,19972,13687,23309,27826,21351,13996,14812,21373,13989,149016,22682,150382,33325,21579,22442,154261,133497,0,14930,140389,29556,171692,19721,39917,146686,171824,19547,151465,169374,171998,33884,146870,160434,157619,145184,25390,32037,147191,146988,14890,36872,21196,15988,13946,17897,132238,30272,23280,134838,30842,163630,22695,16575,22140,39819,23924,30292,173108,40581,19681,30201,14331,24857,143578,148466,0,22109,135849,22439,149859,171526,21044,159918,13741,27722,40316,31830,39737,22494,137068,23635,25811,169168,156469,160100,34477,134440,159010,150242,134513,0,20990,139023,23950,38659,138705,40577,36940,31519,39682,23761,31651,25192,25397,39679,31695,39722,31870,39726,31810,31878,39957,31740,39689,40727,39963,149822,40794,21875,23491,20477,40600,20466,21088,15878,21201,22375,20566,22967,24082,38856,40363,36700,21609,38836,39232,38842,21292,24880,26924,21466,39946,40194,19515,38465,27008,20646,30022,137069,39386,21107,0,37209,38529,37212,0,37201,167575,25471,159011,27338,22033,37262,30074,25221,132092,29519,31856,154657,146685,0,149785,30422,39837,20010,134356,33726,34882,0,23626,27072,20717,22394,21023,24053,20174,27697,131570,20281,21660,21722,21146,36226,13822,24332,13811,0,27474,37244,40869,39831,38958,39092,39610,40616,40580,29050,31508,0,27642,34840,32632,0,22048,173642,36471,40787,0,36308,36431,40476,36353,25218,164733,36392,36469,31443,150135,31294,30936,27882,35431,30215,166490,40742,27854,34774,30147,172722,30803,194624,36108,29410,29553,35629,29442,29937,36075,150203,34351,24506,34976,17591,0,137275,159237,0,35454,140571,0,24829,30311,39639,40260,37742,39823,34805,0,34831,36087,29484,38689,39856,13782,29362,19463,31825,39242,155993,24921,19460,40598,24957,0,22367,24943,25254,25145,25294,14940,25058,21418,144373,25444,26626,13778,23895,166850,36826,167481,0,20697,138566,30982,21298,38456,134971,16485,0,30718,0,31938,155418,31962,31277,32870,32867,32077,29957,29938,35220,33306,26380,32866,160902,32859,29936,33027,30500,35209,157644,30035,159441,34729,34766,33224,34700,35401,36013,35651,30507,29944,34010,13877,27058,36262,0,35241,29800,28089,34753,147473,29927,15835,29046,24740,24988,15569,29026,24695,0,32625,166701,29264,24809,19326,21024,15384,146631,155351,161366,152881,137540,135934,170243,159196,159917,23745,156077,166415,145015,131310,157766,151310,17762,23327,156492,40784,40614,156267,12288,65292,12289,12290,65294,8231,65307,65306,65311,65281,65072,8230,8229,65104,65105,65106,183,65108,65109,65110,65111,65372,8211,65073,8212,65075,9588,65076,65103,65288,65289,65077,65078,65371,65373,65079,65080,12308,12309,65081,65082,12304,12305,65083,65084,12298,12299,65085,65086,12296,12297,65087,65088,12300,12301,65089,65090,12302,12303,65091,65092,65113,65114,65115,65116,65117,65118,8216,8217,8220,8221,12317,12318,8245,8242,65283,65286,65290,8251,167,12291,9675,9679,9651,9650,9678,9734,9733,9671,9670,9633,9632,9661,9660,12963,8453,175,65507,65343,717,65097,65098,65101,65102,65099,65100,65119,65120,65121,65291,65293,215,247,177,8730,65308,65310,65309,8806,8807,8800,8734,8786,8801,65122,65123,65124,65125,65126,65374,8745,8746,8869,8736,8735,8895,13266,13265,8747,8750,8757,8756,9792,9794,8853,8857,8593,8595,8592,8594,8598,8599,8601,8600,8741,8739,65295,65340,8725,65128,65284,65509,12306,65504,65505,65285,65312,8451,8457,65129,65130,65131,13269,13212,13213,13214,13262,13217,13198,13199,13252,176,20825,20827,20830,20829,20833,20835,21991,29929,31950,9601,9602,9603,9604,9605,9606,9607,9608,9615,9614,9613,9612,9611,9610,9609,9532,9524,9516,9508,9500,9620,9472,9474,9621,9484,9488,9492,9496,9581,9582,9584,9583,9552,9566,9578,9569,9698,9699,9701,9700,9585,9586,9587,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,12321,12322,12323,12324,12325,12326,12327,12328,12329,21313,21316,21317,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,12549,12550,12551,12552,12553,12554,12555,12556,12557,12558,12559,12560,12561,12562,12563,12564,12565,12566,12567,12568,12569,12570,12571,12572,12573,12574,12575,12576,12577,12578,12579,12580,12581,12582,12583,12584,12585,729,713,714,711,715,9216,9217,9218,9219,9220,9221,9222,9223,9224,9225,9226,9227,9228,9229,9230,9231,9232,9233,9234,9235,9236,9237,9238,9239,9240,9241,9242,9243,9244,9245,9246,9247,9249,8364,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19968,20057,19969,19971,20035,20061,20102,20108,20154,20799,20837,20843,20960,20992,20993,21147,21269,21313,21340,21448,19977,19979,19976,19978,20011,20024,20961,20037,20040,20063,20062,20110,20129,20800,20995,21242,21315,21449,21475,22303,22763,22805,22823,22899,23376,23377,23379,23544,23567,23586,23608,23665,24029,24037,24049,24050,24051,24062,24178,24318,24331,24339,25165,19985,19984,19981,20013,20016,20025,20043,23609,20104,20113,20117,20114,20116,20130,20161,20160,20163,20166,20167,20173,20170,20171,20164,20803,20801,20839,20845,20846,20844,20887,20982,20998,20999,21e3,21243,21246,21247,21270,21305,21320,21319,21317,21342,21380,21451,21450,21453,22764,22825,22827,22826,22829,23380,23569,23588,23610,23663,24052,24187,24319,24340,24341,24515,25096,25142,25163,25166,25903,25991,26007,26020,26041,26085,26352,26376,26408,27424,27490,27513,27595,27604,27611,27663,27700,28779,29226,29238,29243,29255,29273,29275,29356,29579,19993,19990,19989,19988,19992,20027,20045,20047,20046,20197,20184,20180,20181,20182,20183,20195,20196,20185,20190,20805,20804,20873,20874,20908,20985,20986,20984,21002,21152,21151,21253,21254,21271,21277,20191,21322,21321,21345,21344,21359,21358,21435,21487,21476,21491,21484,21486,21481,21480,21500,21496,21493,21483,21478,21482,21490,21489,21488,21477,21485,21499,22235,22234,22806,22830,22833,22900,22902,23381,23427,23612,24040,24039,24038,24066,24067,24179,24188,24321,24344,24343,24517,25098,25171,25172,25170,25169,26021,26086,26414,26412,26410,26411,26413,27491,27597,27665,27664,27704,27713,27712,27710,29359,29572,29577,29916,29926,29976,29983,29992,29993,3e4,30001,30002,30003,30091,30333,30382,30399,30446,30683,30690,30707,31034,31166,31348,31435,19998,19999,20050,20051,20073,20121,20132,20134,20133,20223,20233,20249,20234,20245,20237,20240,20241,20239,20210,20214,20219,20208,20211,20221,20225,20235,20809,20807,20806,20808,20840,20849,20877,20912,21015,21009,21010,21006,21014,21155,21256,21281,21280,21360,21361,21513,21519,21516,21514,21520,21505,21515,21508,21521,21517,21512,21507,21518,21510,21522,22240,22238,22237,22323,22320,22312,22317,22316,22319,22313,22809,22810,22839,22840,22916,22904,22915,22909,22905,22914,22913,23383,23384,23431,23432,23429,23433,23546,23574,23673,24030,24070,24182,24180,24335,24347,24537,24534,25102,25100,25101,25104,25187,25179,25176,25910,26089,26088,26092,26093,26354,26355,26377,26429,26420,26417,26421,27425,27492,27515,27670,27741,27735,27737,27743,27744,27728,27733,27745,27739,27725,27726,28784,29279,29277,30334,31481,31859,31992,32566,32650,32701,32769,32771,32780,32786,32819,32895,32905,32907,32908,33251,33258,33267,33276,33292,33307,33311,33390,33394,33406,34411,34880,34892,34915,35199,38433,20018,20136,20301,20303,20295,20311,20318,20276,20315,20309,20272,20304,20305,20285,20282,20280,20291,20308,20284,20294,20323,20316,20320,20271,20302,20278,20313,20317,20296,20314,20812,20811,20813,20853,20918,20919,21029,21028,21033,21034,21032,21163,21161,21162,21164,21283,21363,21365,21533,21549,21534,21566,21542,21582,21543,21574,21571,21555,21576,21570,21531,21545,21578,21561,21563,21560,21550,21557,21558,21536,21564,21568,21553,21547,21535,21548,22250,22256,22244,22251,22346,22353,22336,22349,22343,22350,22334,22352,22351,22331,22767,22846,22941,22930,22952,22942,22947,22937,22934,22925,22948,22931,22922,22949,23389,23388,23386,23387,23436,23435,23439,23596,23616,23617,23615,23614,23696,23697,23700,23692,24043,24076,24207,24199,24202,24311,24324,24351,24420,24418,24439,24441,24536,24524,24535,24525,24561,24555,24568,24554,25106,25105,25220,25239,25238,25216,25206,25225,25197,25226,25212,25214,25209,25203,25234,25199,25240,25198,25237,25235,25233,25222,25913,25915,25912,26097,26356,26463,26446,26447,26448,26449,26460,26454,26462,26441,26438,26464,26451,26455,27493,27599,27714,27742,27801,27777,27784,27785,27781,27803,27754,27770,27792,27760,27788,27752,27798,27794,27773,27779,27762,27774,27764,27782,27766,27789,27796,27800,27778,28790,28796,28797,28792,29282,29281,29280,29380,29378,29590,29996,29995,30007,30008,30338,30447,30691,31169,31168,31167,31350,31995,32597,32918,32915,32925,32920,32923,32922,32946,33391,33426,33419,33421,35211,35282,35328,35895,35910,35925,35997,36196,36208,36275,36523,36554,36763,36784,36802,36806,36805,36804,24033,37009,37026,37034,37030,37027,37193,37318,37324,38450,38446,38449,38442,38444,20006,20054,20083,20107,20123,20126,20139,20140,20335,20381,20365,20339,20351,20332,20379,20363,20358,20355,20336,20341,20360,20329,20347,20374,20350,20367,20369,20346,20820,20818,20821,20841,20855,20854,20856,20925,20989,21051,21048,21047,21050,21040,21038,21046,21057,21182,21179,21330,21332,21331,21329,21350,21367,21368,21369,21462,21460,21463,21619,21621,21654,21624,21653,21632,21627,21623,21636,21650,21638,21628,21648,21617,21622,21644,21658,21602,21608,21643,21629,21646,22266,22403,22391,22378,22377,22369,22374,22372,22396,22812,22857,22855,22856,22852,22868,22974,22971,22996,22969,22958,22993,22982,22992,22989,22987,22995,22986,22959,22963,22994,22981,23391,23396,23395,23447,23450,23448,23452,23449,23451,23578,23624,23621,23622,23735,23713,23736,23721,23723,23729,23731,24088,24090,24086,24085,24091,24081,24184,24218,24215,24220,24213,24214,24310,24358,24359,24361,24448,24449,24447,24444,24541,24544,24573,24565,24575,24591,24596,24623,24629,24598,24618,24597,24609,24615,24617,24619,24603,25110,25109,25151,25150,25152,25215,25289,25292,25284,25279,25282,25273,25298,25307,25259,25299,25300,25291,25288,25256,25277,25276,25296,25305,25287,25293,25269,25306,25265,25304,25302,25303,25286,25260,25294,25918,26023,26044,26106,26132,26131,26124,26118,26114,26126,26112,26127,26133,26122,26119,26381,26379,26477,26507,26517,26481,26524,26483,26487,26503,26525,26519,26479,26480,26495,26505,26494,26512,26485,26522,26515,26492,26474,26482,27427,27494,27495,27519,27667,27675,27875,27880,27891,27825,27852,27877,27827,27837,27838,27836,27874,27819,27861,27859,27832,27844,27833,27841,27822,27863,27845,27889,27839,27835,27873,27867,27850,27820,27887,27868,27862,27872,28821,28814,28818,28810,28825,29228,29229,29240,29256,29287,29289,29376,29390,29401,29399,29392,29609,29608,29599,29611,29605,30013,30109,30105,30106,30340,30402,30450,30452,30693,30717,31038,31040,31041,31177,31176,31354,31353,31482,31998,32596,32652,32651,32773,32954,32933,32930,32945,32929,32939,32937,32948,32938,32943,33253,33278,33293,33459,33437,33433,33453,33469,33439,33465,33457,33452,33445,33455,33464,33443,33456,33470,33463,34382,34417,21021,34920,36555,36814,36820,36817,37045,37048,37041,37046,37319,37329,38263,38272,38428,38464,38463,38459,38468,38466,38585,38632,38738,38750,20127,20141,20142,20449,20405,20399,20415,20448,20433,20431,20445,20419,20406,20440,20447,20426,20439,20398,20432,20420,20418,20442,20430,20446,20407,20823,20882,20881,20896,21070,21059,21066,21069,21068,21067,21063,21191,21193,21187,21185,21261,21335,21371,21402,21467,21676,21696,21672,21710,21705,21688,21670,21683,21703,21698,21693,21674,21697,21700,21704,21679,21675,21681,21691,21673,21671,21695,22271,22402,22411,22432,22435,22434,22478,22446,22419,22869,22865,22863,22862,22864,23004,23e3,23039,23011,23016,23043,23013,23018,23002,23014,23041,23035,23401,23459,23462,23460,23458,23461,23553,23630,23631,23629,23627,23769,23762,24055,24093,24101,24095,24189,24224,24230,24314,24328,24365,24421,24456,24453,24458,24459,24455,24460,24457,24594,24605,24608,24613,24590,24616,24653,24688,24680,24674,24646,24643,24684,24683,24682,24676,25153,25308,25366,25353,25340,25325,25345,25326,25341,25351,25329,25335,25327,25324,25342,25332,25361,25346,25919,25925,26027,26045,26082,26149,26157,26144,26151,26159,26143,26152,26161,26148,26359,26623,26579,26609,26580,26576,26604,26550,26543,26613,26601,26607,26564,26577,26548,26586,26597,26552,26575,26590,26611,26544,26585,26594,26589,26578,27498,27523,27526,27573,27602,27607,27679,27849,27915,27954,27946,27969,27941,27916,27953,27934,27927,27963,27965,27966,27958,27931,27893,27961,27943,27960,27945,27950,27957,27918,27947,28843,28858,28851,28844,28847,28845,28856,28846,28836,29232,29298,29295,29300,29417,29408,29409,29623,29642,29627,29618,29645,29632,29619,29978,29997,30031,30028,30030,30027,30123,30116,30117,30114,30115,30328,30342,30343,30344,30408,30406,30403,30405,30465,30457,30456,30473,30475,30462,30460,30471,30684,30722,30740,30732,30733,31046,31049,31048,31047,31161,31162,31185,31186,31179,31359,31361,31487,31485,31869,32002,32005,32e3,32009,32007,32004,32006,32568,32654,32703,32772,32784,32781,32785,32822,32982,32997,32986,32963,32964,32972,32993,32987,32974,32990,32996,32989,33268,33314,33511,33539,33541,33507,33499,33510,33540,33509,33538,33545,33490,33495,33521,33537,33500,33492,33489,33502,33491,33503,33519,33542,34384,34425,34427,34426,34893,34923,35201,35284,35336,35330,35331,35998,36e3,36212,36211,36276,36557,36556,36848,36838,36834,36842,36837,36845,36843,36836,36840,37066,37070,37057,37059,37195,37194,37325,38274,38480,38475,38476,38477,38754,38761,38859,38893,38899,38913,39080,39131,39135,39318,39321,20056,20147,20492,20493,20515,20463,20518,20517,20472,20521,20502,20486,20540,20511,20506,20498,20497,20474,20480,20500,20520,20465,20513,20491,20505,20504,20467,20462,20525,20522,20478,20523,20489,20860,20900,20901,20898,20941,20940,20934,20939,21078,21084,21076,21083,21085,21290,21375,21407,21405,21471,21736,21776,21761,21815,21756,21733,21746,21766,21754,21780,21737,21741,21729,21769,21742,21738,21734,21799,21767,21757,21775,22275,22276,22466,22484,22475,22467,22537,22799,22871,22872,22874,23057,23064,23068,23071,23067,23059,23020,23072,23075,23081,23077,23052,23049,23403,23640,23472,23475,23478,23476,23470,23477,23481,23480,23556,23633,23637,23632,23789,23805,23803,23786,23784,23792,23798,23809,23796,24046,24109,24107,24235,24237,24231,24369,24466,24465,24464,24665,24675,24677,24656,24661,24685,24681,24687,24708,24735,24730,24717,24724,24716,24709,24726,25159,25331,25352,25343,25422,25406,25391,25429,25410,25414,25423,25417,25402,25424,25405,25386,25387,25384,25421,25420,25928,25929,26009,26049,26053,26178,26185,26191,26179,26194,26188,26181,26177,26360,26388,26389,26391,26657,26680,26696,26694,26707,26681,26690,26708,26665,26803,26647,26700,26705,26685,26612,26704,26688,26684,26691,26666,26693,26643,26648,26689,27530,27529,27575,27683,27687,27688,27686,27684,27888,28010,28053,28040,28039,28006,28024,28023,27993,28051,28012,28041,28014,27994,28020,28009,28044,28042,28025,28037,28005,28052,28874,28888,28900,28889,28872,28879,29241,29305,29436,29433,29437,29432,29431,29574,29677,29705,29678,29664,29674,29662,30036,30045,30044,30042,30041,30142,30149,30151,30130,30131,30141,30140,30137,30146,30136,30347,30384,30410,30413,30414,30505,30495,30496,30504,30697,30768,30759,30776,30749,30772,30775,30757,30765,30752,30751,30770,31061,31056,31072,31071,31062,31070,31069,31063,31066,31204,31203,31207,31199,31206,31209,31192,31364,31368,31449,31494,31505,31881,32033,32023,32011,32010,32032,32034,32020,32016,32021,32026,32028,32013,32025,32027,32570,32607,32660,32709,32705,32774,32792,32789,32793,32791,32829,32831,33009,33026,33008,33029,33005,33012,33030,33016,33011,33032,33021,33034,33020,33007,33261,33260,33280,33296,33322,33323,33320,33324,33467,33579,33618,33620,33610,33592,33616,33609,33589,33588,33615,33586,33593,33590,33559,33600,33585,33576,33603,34388,34442,34474,34451,34468,34473,34444,34467,34460,34928,34935,34945,34946,34941,34937,35352,35344,35342,35340,35349,35338,35351,35347,35350,35343,35345,35912,35962,35961,36001,36002,36215,36524,36562,36564,36559,36785,36865,36870,36855,36864,36858,36852,36867,36861,36869,36856,37013,37089,37085,37090,37202,37197,37196,37336,37341,37335,37340,37337,38275,38498,38499,38497,38491,38493,38500,38488,38494,38587,39138,39340,39592,39640,39717,39730,39740,20094,20602,20605,20572,20551,20547,20556,20570,20553,20581,20598,20558,20565,20597,20596,20599,20559,20495,20591,20589,20828,20885,20976,21098,21103,21202,21209,21208,21205,21264,21263,21273,21311,21312,21310,21443,26364,21830,21866,21862,21828,21854,21857,21827,21834,21809,21846,21839,21845,21807,21860,21816,21806,21852,21804,21859,21811,21825,21847,22280,22283,22281,22495,22533,22538,22534,22496,22500,22522,22530,22581,22519,22521,22816,22882,23094,23105,23113,23142,23146,23104,23100,23138,23130,23110,23114,23408,23495,23493,23492,23490,23487,23494,23561,23560,23559,23648,23644,23645,23815,23814,23822,23835,23830,23842,23825,23849,23828,23833,23844,23847,23831,24034,24120,24118,24115,24119,24247,24248,24246,24245,24254,24373,24375,24407,24428,24425,24427,24471,24473,24478,24472,24481,24480,24476,24703,24739,24713,24736,24744,24779,24756,24806,24765,24773,24763,24757,24796,24764,24792,24789,24774,24799,24760,24794,24775,25114,25115,25160,25504,25511,25458,25494,25506,25509,25463,25447,25496,25514,25457,25513,25481,25475,25499,25451,25512,25476,25480,25497,25505,25516,25490,25487,25472,25467,25449,25448,25466,25949,25942,25937,25945,25943,21855,25935,25944,25941,25940,26012,26011,26028,26063,26059,26060,26062,26205,26202,26212,26216,26214,26206,26361,21207,26395,26753,26799,26786,26771,26805,26751,26742,26801,26791,26775,26800,26755,26820,26797,26758,26757,26772,26781,26792,26783,26785,26754,27442,27578,27627,27628,27691,28046,28092,28147,28121,28082,28129,28108,28132,28155,28154,28165,28103,28107,28079,28113,28078,28126,28153,28088,28151,28149,28101,28114,28186,28085,28122,28139,28120,28138,28145,28142,28136,28102,28100,28074,28140,28095,28134,28921,28937,28938,28925,28911,29245,29309,29313,29468,29467,29462,29459,29465,29575,29701,29706,29699,29702,29694,29709,29920,29942,29943,29980,29986,30053,30054,30050,30064,30095,30164,30165,30133,30154,30157,30350,30420,30418,30427,30519,30526,30524,30518,30520,30522,30827,30787,30798,31077,31080,31085,31227,31378,31381,31520,31528,31515,31532,31526,31513,31518,31534,31890,31895,31893,32070,32067,32113,32046,32057,32060,32064,32048,32051,32068,32047,32066,32050,32049,32573,32670,32666,32716,32718,32722,32796,32842,32838,33071,33046,33059,33067,33065,33072,33060,33282,33333,33335,33334,33337,33678,33694,33688,33656,33698,33686,33725,33707,33682,33674,33683,33673,33696,33655,33659,33660,33670,33703,34389,24426,34503,34496,34486,34500,34485,34502,34507,34481,34479,34505,34899,34974,34952,34987,34962,34966,34957,34955,35219,35215,35370,35357,35363,35365,35377,35373,35359,35355,35362,35913,35930,36009,36012,36011,36008,36010,36007,36199,36198,36286,36282,36571,36575,36889,36877,36890,36887,36899,36895,36893,36880,36885,36894,36896,36879,36898,36886,36891,36884,37096,37101,37117,37207,37326,37365,37350,37347,37351,37357,37353,38281,38506,38517,38515,38520,38512,38516,38518,38519,38508,38592,38634,38633,31456,31455,38914,38915,39770,40165,40565,40575,40613,40635,20642,20621,20613,20633,20625,20608,20630,20632,20634,26368,20977,21106,21108,21109,21097,21214,21213,21211,21338,21413,21883,21888,21927,21884,21898,21917,21912,21890,21916,21930,21908,21895,21899,21891,21939,21934,21919,21822,21938,21914,21947,21932,21937,21886,21897,21931,21913,22285,22575,22570,22580,22564,22576,22577,22561,22557,22560,22777,22778,22880,23159,23194,23167,23186,23195,23207,23411,23409,23506,23500,23507,23504,23562,23563,23601,23884,23888,23860,23879,24061,24133,24125,24128,24131,24190,24266,24257,24258,24260,24380,24429,24489,24490,24488,24785,24801,24754,24758,24800,24860,24867,24826,24853,24816,24827,24820,24936,24817,24846,24822,24841,24832,24850,25119,25161,25507,25484,25551,25536,25577,25545,25542,25549,25554,25571,25552,25569,25558,25581,25582,25462,25588,25578,25563,25682,25562,25593,25950,25958,25954,25955,26001,26e3,26031,26222,26224,26228,26230,26223,26257,26234,26238,26231,26366,26367,26399,26397,26874,26837,26848,26840,26839,26885,26847,26869,26862,26855,26873,26834,26866,26851,26827,26829,26893,26898,26894,26825,26842,26990,26875,27454,27450,27453,27544,27542,27580,27631,27694,27695,27692,28207,28216,28244,28193,28210,28263,28234,28192,28197,28195,28187,28251,28248,28196,28246,28270,28205,28198,28271,28212,28237,28218,28204,28227,28189,28222,28363,28297,28185,28238,28259,28228,28274,28265,28255,28953,28954,28966,28976,28961,28982,29038,28956,29260,29316,29312,29494,29477,29492,29481,29754,29738,29747,29730,29733,29749,29750,29748,29743,29723,29734,29736,29989,29990,30059,30058,30178,30171,30179,30169,30168,30174,30176,30331,30332,30358,30355,30388,30428,30543,30701,30813,30828,30831,31245,31240,31243,31237,31232,31384,31383,31382,31461,31459,31561,31574,31558,31568,31570,31572,31565,31563,31567,31569,31903,31909,32094,32080,32104,32085,32043,32110,32114,32097,32102,32098,32112,32115,21892,32724,32725,32779,32850,32901,33109,33108,33099,33105,33102,33081,33094,33086,33100,33107,33140,33298,33308,33769,33795,33784,33805,33760,33733,33803,33729,33775,33777,33780,33879,33802,33776,33804,33740,33789,33778,33738,33848,33806,33796,33756,33799,33748,33759,34395,34527,34521,34541,34516,34523,34532,34512,34526,34903,35009,35010,34993,35203,35222,35387,35424,35413,35422,35388,35393,35412,35419,35408,35398,35380,35386,35382,35414,35937,35970,36015,36028,36019,36029,36033,36027,36032,36020,36023,36022,36031,36024,36234,36229,36225,36302,36317,36299,36314,36305,36300,36315,36294,36603,36600,36604,36764,36910,36917,36913,36920,36914,36918,37122,37109,37129,37118,37219,37221,37327,37396,37397,37411,37385,37406,37389,37392,37383,37393,38292,38287,38283,38289,38291,38290,38286,38538,38542,38539,38525,38533,38534,38541,38514,38532,38593,38597,38596,38598,38599,38639,38642,38860,38917,38918,38920,39143,39146,39151,39145,39154,39149,39342,39341,40643,40653,40657,20098,20653,20661,20658,20659,20677,20670,20652,20663,20667,20655,20679,21119,21111,21117,21215,21222,21220,21218,21219,21295,21983,21992,21971,21990,21966,21980,21959,21969,21987,21988,21999,21978,21985,21957,21958,21989,21961,22290,22291,22622,22609,22616,22615,22618,22612,22635,22604,22637,22602,22626,22610,22603,22887,23233,23241,23244,23230,23229,23228,23219,23234,23218,23913,23919,24140,24185,24265,24264,24338,24409,24492,24494,24858,24847,24904,24863,24819,24859,24825,24833,24840,24910,24908,24900,24909,24894,24884,24871,24845,24838,24887,25121,25122,25619,25662,25630,25642,25645,25661,25644,25615,25628,25620,25613,25654,25622,25623,25606,25964,26015,26032,26263,26249,26247,26248,26262,26244,26264,26253,26371,27028,26989,26970,26999,26976,26964,26997,26928,27010,26954,26984,26987,26974,26963,27001,27014,26973,26979,26971,27463,27506,27584,27583,27603,27645,28322,28335,28371,28342,28354,28304,28317,28359,28357,28325,28312,28348,28346,28331,28369,28310,28316,28356,28372,28330,28327,28340,29006,29017,29033,29028,29001,29031,29020,29036,29030,29004,29029,29022,28998,29032,29014,29242,29266,29495,29509,29503,29502,29807,29786,29781,29791,29790,29761,29759,29785,29787,29788,30070,30072,30208,30192,30209,30194,30193,30202,30207,30196,30195,30430,30431,30555,30571,30566,30558,30563,30585,30570,30572,30556,30565,30568,30562,30702,30862,30896,30871,30872,30860,30857,30844,30865,30867,30847,31098,31103,31105,33836,31165,31260,31258,31264,31252,31263,31262,31391,31392,31607,31680,31584,31598,31591,31921,31923,31925,32147,32121,32145,32129,32143,32091,32622,32617,32618,32626,32681,32680,32676,32854,32856,32902,32900,33137,33136,33144,33125,33134,33139,33131,33145,33146,33126,33285,33351,33922,33911,33853,33841,33909,33894,33899,33865,33900,33883,33852,33845,33889,33891,33897,33901,33862,34398,34396,34399,34553,34579,34568,34567,34560,34558,34555,34562,34563,34566,34570,34905,35039,35028,35033,35036,35032,35037,35041,35018,35029,35026,35228,35299,35435,35442,35443,35430,35433,35440,35463,35452,35427,35488,35441,35461,35437,35426,35438,35436,35449,35451,35390,35432,35938,35978,35977,36042,36039,36040,36036,36018,36035,36034,36037,36321,36319,36328,36335,36339,36346,36330,36324,36326,36530,36611,36617,36606,36618,36767,36786,36939,36938,36947,36930,36948,36924,36949,36944,36935,36943,36942,36941,36945,36926,36929,37138,37143,37228,37226,37225,37321,37431,37463,37432,37437,37440,37438,37467,37451,37476,37457,37428,37449,37453,37445,37433,37439,37466,38296,38552,38548,38549,38605,38603,38601,38602,38647,38651,38649,38646,38742,38772,38774,38928,38929,38931,38922,38930,38924,39164,39156,39165,39166,39347,39345,39348,39649,40169,40578,40718,40723,40736,20711,20718,20709,20694,20717,20698,20693,20687,20689,20721,20686,20713,20834,20979,21123,21122,21297,21421,22014,22016,22043,22039,22013,22036,22022,22025,22029,22030,22007,22038,22047,22024,22032,22006,22296,22294,22645,22654,22659,22675,22666,22649,22661,22653,22781,22821,22818,22820,22890,22889,23265,23270,23273,23255,23254,23256,23267,23413,23518,23527,23521,23525,23526,23528,23522,23524,23519,23565,23650,23940,23943,24155,24163,24149,24151,24148,24275,24278,24330,24390,24432,24505,24903,24895,24907,24951,24930,24931,24927,24922,24920,24949,25130,25735,25688,25684,25764,25720,25695,25722,25681,25703,25652,25709,25723,25970,26017,26071,26070,26274,26280,26269,27036,27048,27029,27073,27054,27091,27083,27035,27063,27067,27051,27060,27088,27085,27053,27084,27046,27075,27043,27465,27468,27699,28467,28436,28414,28435,28404,28457,28478,28448,28460,28431,28418,28450,28415,28399,28422,28465,28472,28466,28451,28437,28459,28463,28552,28458,28396,28417,28402,28364,28407,29076,29081,29053,29066,29060,29074,29246,29330,29334,29508,29520,29796,29795,29802,29808,29805,29956,30097,30247,30221,30219,30217,30227,30433,30435,30596,30589,30591,30561,30913,30879,30887,30899,30889,30883,31118,31119,31117,31278,31281,31402,31401,31469,31471,31649,31637,31627,31605,31639,31645,31636,31631,31672,31623,31620,31929,31933,31934,32187,32176,32156,32189,32190,32160,32202,32180,32178,32177,32186,32162,32191,32181,32184,32173,32210,32199,32172,32624,32736,32737,32735,32862,32858,32903,33104,33152,33167,33160,33162,33151,33154,33255,33274,33287,33300,33310,33355,33993,33983,33990,33988,33945,33950,33970,33948,33995,33976,33984,34003,33936,33980,34001,33994,34623,34588,34619,34594,34597,34612,34584,34645,34615,34601,35059,35074,35060,35065,35064,35069,35048,35098,35055,35494,35468,35486,35491,35469,35489,35475,35492,35498,35493,35496,35480,35473,35482,35495,35946,35981,35980,36051,36049,36050,36203,36249,36245,36348,36628,36626,36629,36627,36771,36960,36952,36956,36963,36953,36958,36962,36957,36955,37145,37144,37150,37237,37240,37239,37236,37496,37504,37509,37528,37526,37499,37523,37532,37544,37500,37521,38305,38312,38313,38307,38309,38308,38553,38556,38555,38604,38610,38656,38780,38789,38902,38935,38936,39087,39089,39171,39173,39180,39177,39361,39599,39600,39654,39745,39746,40180,40182,40179,40636,40763,40778,20740,20736,20731,20725,20729,20738,20744,20745,20741,20956,21127,21128,21129,21133,21130,21232,21426,22062,22075,22073,22066,22079,22068,22057,22099,22094,22103,22132,22070,22063,22064,22656,22687,22686,22707,22684,22702,22697,22694,22893,23305,23291,23307,23285,23308,23304,23534,23532,23529,23531,23652,23653,23965,23956,24162,24159,24161,24290,24282,24287,24285,24291,24288,24392,24433,24503,24501,24950,24935,24942,24925,24917,24962,24956,24944,24939,24958,24999,24976,25003,24974,25004,24986,24996,24980,25006,25134,25705,25711,25721,25758,25778,25736,25744,25776,25765,25747,25749,25769,25746,25774,25773,25771,25754,25772,25753,25762,25779,25973,25975,25976,26286,26283,26292,26289,27171,27167,27112,27137,27166,27161,27133,27169,27155,27146,27123,27138,27141,27117,27153,27472,27470,27556,27589,27590,28479,28540,28548,28497,28518,28500,28550,28525,28507,28536,28526,28558,28538,28528,28516,28567,28504,28373,28527,28512,28511,29087,29100,29105,29096,29270,29339,29518,29527,29801,29835,29827,29822,29824,30079,30240,30249,30239,30244,30246,30241,30242,30362,30394,30436,30606,30599,30604,30609,30603,30923,30917,30906,30922,30910,30933,30908,30928,31295,31292,31296,31293,31287,31291,31407,31406,31661,31665,31684,31668,31686,31687,31681,31648,31692,31946,32224,32244,32239,32251,32216,32236,32221,32232,32227,32218,32222,32233,32158,32217,32242,32249,32629,32631,32687,32745,32806,33179,33180,33181,33184,33178,33176,34071,34109,34074,34030,34092,34093,34067,34065,34083,34081,34068,34028,34085,34047,34054,34690,34676,34678,34656,34662,34680,34664,34649,34647,34636,34643,34907,34909,35088,35079,35090,35091,35093,35082,35516,35538,35527,35524,35477,35531,35576,35506,35529,35522,35519,35504,35542,35533,35510,35513,35547,35916,35918,35948,36064,36062,36070,36068,36076,36077,36066,36067,36060,36074,36065,36205,36255,36259,36395,36368,36381,36386,36367,36393,36383,36385,36382,36538,36637,36635,36639,36649,36646,36650,36636,36638,36645,36969,36974,36968,36973,36983,37168,37165,37159,37169,37255,37257,37259,37251,37573,37563,37559,37610,37548,37604,37569,37555,37564,37586,37575,37616,37554,38317,38321,38660,38662,38663,38665,38752,38797,38795,38799,38945,38955,38940,39091,39178,39187,39186,39192,39389,39376,39391,39387,39377,39381,39378,39385,39607,39662,39663,39719,39749,39748,39799,39791,40198,40201,40195,40617,40638,40654,22696,40786,20754,20760,20756,20752,20757,20864,20906,20957,21137,21139,21235,22105,22123,22137,22121,22116,22136,22122,22120,22117,22129,22127,22124,22114,22134,22721,22718,22727,22725,22894,23325,23348,23416,23536,23566,24394,25010,24977,25001,24970,25037,25014,25022,25034,25032,25136,25797,25793,25803,25787,25788,25818,25796,25799,25794,25805,25791,25810,25812,25790,25972,26310,26313,26297,26308,26311,26296,27197,27192,27194,27225,27243,27224,27193,27204,27234,27233,27211,27207,27189,27231,27208,27481,27511,27653,28610,28593,28577,28611,28580,28609,28583,28595,28608,28601,28598,28582,28576,28596,29118,29129,29136,29138,29128,29141,29113,29134,29145,29148,29123,29124,29544,29852,29859,29848,29855,29854,29922,29964,29965,30260,30264,30266,30439,30437,30624,30622,30623,30629,30952,30938,30956,30951,31142,31309,31310,31302,31308,31307,31418,31705,31761,31689,31716,31707,31713,31721,31718,31957,31958,32266,32273,32264,32283,32291,32286,32285,32265,32272,32633,32690,32752,32753,32750,32808,33203,33193,33192,33275,33288,33368,33369,34122,34137,34120,34152,34153,34115,34121,34157,34154,34142,34691,34719,34718,34722,34701,34913,35114,35122,35109,35115,35105,35242,35238,35558,35578,35563,35569,35584,35548,35559,35566,35582,35585,35586,35575,35565,35571,35574,35580,35947,35949,35987,36084,36420,36401,36404,36418,36409,36405,36667,36655,36664,36659,36776,36774,36981,36980,36984,36978,36988,36986,37172,37266,37664,37686,37624,37683,37679,37666,37628,37675,37636,37658,37648,37670,37665,37653,37678,37657,38331,38567,38568,38570,38613,38670,38673,38678,38669,38675,38671,38747,38748,38758,38808,38960,38968,38971,38967,38957,38969,38948,39184,39208,39198,39195,39201,39194,39405,39394,39409,39608,39612,39675,39661,39720,39825,40213,40227,40230,40232,40210,40219,40664,40660,40845,40860,20778,20767,20769,20786,21237,22158,22144,22160,22149,22151,22159,22741,22739,22737,22734,23344,23338,23332,23418,23607,23656,23996,23994,23997,23992,24171,24396,24509,25033,25026,25031,25062,25035,25138,25140,25806,25802,25816,25824,25840,25830,25836,25841,25826,25837,25986,25987,26329,26326,27264,27284,27268,27298,27292,27355,27299,27262,27287,27280,27296,27484,27566,27610,27656,28632,28657,28639,28640,28635,28644,28651,28655,28544,28652,28641,28649,28629,28654,28656,29159,29151,29166,29158,29157,29165,29164,29172,29152,29237,29254,29552,29554,29865,29872,29862,29864,30278,30274,30284,30442,30643,30634,30640,30636,30631,30637,30703,30967,30970,30964,30959,30977,31143,31146,31319,31423,31751,31757,31742,31735,31756,31712,31968,31964,31966,31970,31967,31961,31965,32302,32318,32326,32311,32306,32323,32299,32317,32305,32325,32321,32308,32313,32328,32309,32319,32303,32580,32755,32764,32881,32882,32880,32879,32883,33222,33219,33210,33218,33216,33215,33213,33225,33214,33256,33289,33393,34218,34180,34174,34204,34193,34196,34223,34203,34183,34216,34186,34407,34752,34769,34739,34770,34758,34731,34747,34746,34760,34763,35131,35126,35140,35128,35133,35244,35598,35607,35609,35611,35594,35616,35613,35588,35600,35905,35903,35955,36090,36093,36092,36088,36091,36264,36425,36427,36424,36426,36676,36670,36674,36677,36671,36991,36989,36996,36993,36994,36992,37177,37283,37278,37276,37709,37762,37672,37749,37706,37733,37707,37656,37758,37740,37723,37744,37722,37716,38346,38347,38348,38344,38342,38577,38584,38614,38684,38686,38816,38867,38982,39094,39221,39425,39423,39854,39851,39850,39853,40251,40255,40587,40655,40670,40668,40669,40667,40766,40779,21474,22165,22190,22745,22744,23352,24413,25059,25139,25844,25842,25854,25862,25850,25851,25847,26039,26332,26406,27315,27308,27331,27323,27320,27330,27310,27311,27487,27512,27567,28681,28683,28670,28678,28666,28689,28687,29179,29180,29182,29176,29559,29557,29863,29887,29973,30294,30296,30290,30653,30655,30651,30652,30990,31150,31329,31330,31328,31428,31429,31787,31783,31786,31774,31779,31777,31975,32340,32341,32350,32346,32353,32338,32345,32584,32761,32763,32887,32886,33229,33231,33290,34255,34217,34253,34256,34249,34224,34234,34233,34214,34799,34796,34802,34784,35206,35250,35316,35624,35641,35628,35627,35920,36101,36441,36451,36454,36452,36447,36437,36544,36681,36685,36999,36995,37e3,37291,37292,37328,37780,37770,37782,37794,37811,37806,37804,37808,37784,37786,37783,38356,38358,38352,38357,38626,38620,38617,38619,38622,38692,38819,38822,38829,38905,38989,38991,38988,38990,38995,39098,39230,39231,39229,39214,39333,39438,39617,39683,39686,39759,39758,39757,39882,39881,39933,39880,39872,40273,40285,40288,40672,40725,40748,20787,22181,22750,22751,22754,23541,40848,24300,25074,25079,25078,25077,25856,25871,26336,26333,27365,27357,27354,27347,28699,28703,28712,28698,28701,28693,28696,29190,29197,29272,29346,29560,29562,29885,29898,29923,30087,30086,30303,30305,30663,31001,31153,31339,31337,31806,31807,31800,31805,31799,31808,32363,32365,32377,32361,32362,32645,32371,32694,32697,32696,33240,34281,34269,34282,34261,34276,34277,34295,34811,34821,34829,34809,34814,35168,35167,35158,35166,35649,35676,35672,35657,35674,35662,35663,35654,35673,36104,36106,36476,36466,36487,36470,36460,36474,36468,36692,36686,36781,37002,37003,37297,37294,37857,37841,37855,37827,37832,37852,37853,37846,37858,37837,37848,37860,37847,37864,38364,38580,38627,38698,38695,38753,38876,38907,39006,39e3,39003,39100,39237,39241,39446,39449,39693,39912,39911,39894,39899,40329,40289,40306,40298,40300,40594,40599,40595,40628,21240,22184,22199,22198,22196,22204,22756,23360,23363,23421,23542,24009,25080,25082,25880,25876,25881,26342,26407,27372,28734,28720,28722,29200,29563,29903,30306,30309,31014,31018,31020,31019,31431,31478,31820,31811,31821,31983,31984,36782,32381,32380,32386,32588,32768,33242,33382,34299,34297,34321,34298,34310,34315,34311,34314,34836,34837,35172,35258,35320,35696,35692,35686,35695,35679,35691,36111,36109,36489,36481,36485,36482,37300,37323,37912,37891,37885,38369,38704,39108,39250,39249,39336,39467,39472,39479,39477,39955,39949,40569,40629,40680,40751,40799,40803,40801,20791,20792,22209,22208,22210,22804,23660,24013,25084,25086,25885,25884,26005,26345,27387,27396,27386,27570,28748,29211,29351,29910,29908,30313,30675,31824,32399,32396,32700,34327,34349,34330,34851,34850,34849,34847,35178,35180,35261,35700,35703,35709,36115,36490,36493,36491,36703,36783,37306,37934,37939,37941,37946,37944,37938,37931,38370,38712,38713,38706,38911,39015,39013,39255,39493,39491,39488,39486,39631,39764,39761,39981,39973,40367,40372,40386,40376,40605,40687,40729,40796,40806,40807,20796,20795,22216,22218,22217,23423,24020,24018,24398,25087,25892,27402,27489,28753,28760,29568,29924,30090,30318,30316,31155,31840,31839,32894,32893,33247,35186,35183,35324,35712,36118,36119,36497,36499,36705,37192,37956,37969,37970,38717,38718,38851,38849,39019,39253,39509,39501,39634,39706,40009,39985,39998,39995,40403,40407,40756,40812,40810,40852,22220,24022,25088,25891,25899,25898,26348,27408,29914,31434,31844,31843,31845,32403,32406,32404,33250,34360,34367,34865,35722,37008,37007,37987,37984,37988,38760,39023,39260,39514,39515,39511,39635,39636,39633,40020,40023,40022,40421,40607,40692,22225,22761,25900,28766,30321,30322,30679,32592,32648,34870,34873,34914,35731,35730,35734,33399,36123,37312,37994,38722,38728,38724,38854,39024,39519,39714,39768,40031,40441,40442,40572,40573,40711,40823,40818,24307,27414,28771,31852,31854,34875,35264,36513,37313,38002,38e3,39025,39262,39638,39715,40652,28772,30682,35738,38007,38857,39522,39525,32412,35740,36522,37317,38013,38014,38012,40055,40056,40695,35924,38015,40474,29224,39530,39729,40475,40478,31858,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,20022,20031,20101,20128,20866,20886,20907,21241,21304,21353,21430,22794,23424,24027,12083,24191,24308,24400,24417,25908,26080,30098,30326,36789,38582,168,710,12541,12542,12445,12446,12291,20189,12293,12294,12295,12540,65339,65341,10045,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,8679,8632,8633,12751,131276,20058,131210,20994,17553,40880,20872,40881,161287,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65506,65508,65287,65282,12849,8470,8481,12443,12444,11904,11908,11910,11911,11912,11914,11916,11917,11925,11932,11933,11941,11943,11946,11948,11950,11958,11964,11966,11974,11978,11980,11981,11983,11990,11991,11998,12003,0,0,0,643,592,603,596,629,339,248,331,650,618,20034,20060,20981,21274,21378,19975,19980,20039,20109,22231,64012,23662,24435,19983,20871,19982,20014,20115,20162,20169,20168,20888,21244,21356,21433,22304,22787,22828,23568,24063,26081,27571,27596,27668,29247,20017,20028,20200,20188,20201,20193,20189,20186,21004,21276,21324,22306,22307,22807,22831,23425,23428,23570,23611,23668,23667,24068,24192,24194,24521,25097,25168,27669,27702,27715,27711,27707,29358,29360,29578,31160,32906,38430,20238,20248,20268,20213,20244,20209,20224,20215,20232,20253,20226,20229,20258,20243,20228,20212,20242,20913,21011,21001,21008,21158,21282,21279,21325,21386,21511,22241,22239,22318,22314,22324,22844,22912,22908,22917,22907,22910,22903,22911,23382,23573,23589,23676,23674,23675,23678,24031,24181,24196,24322,24346,24436,24533,24532,24527,25180,25182,25188,25185,25190,25186,25177,25184,25178,25189,26095,26094,26430,26425,26424,26427,26426,26431,26428,26419,27672,27718,27730,27740,27727,27722,27732,27723,27724,28785,29278,29364,29365,29582,29994,30335,31349,32593,33400,33404,33408,33405,33407,34381,35198,37017,37015,37016,37019,37012,38434,38436,38432,38435,20310,20283,20322,20297,20307,20324,20286,20327,20306,20319,20289,20312,20269,20275,20287,20321,20879,20921,21020,21022,21025,21165,21166,21257,21347,21362,21390,21391,21552,21559,21546,21588,21573,21529,21532,21541,21528,21565,21583,21569,21544,21540,21575,22254,22247,22245,22337,22341,22348,22345,22347,22354,22790,22848,22950,22936,22944,22935,22926,22946,22928,22927,22951,22945,23438,23442,23592,23594,23693,23695,23688,23691,23689,23698,23690,23686,23699,23701,24032,24074,24078,24203,24201,24204,24200,24205,24325,24349,24440,24438,24530,24529,24528,24557,24552,24558,24563,24545,24548,24547,24570,24559,24567,24571,24576,24564,25146,25219,25228,25230,25231,25236,25223,25201,25211,25210,25200,25217,25224,25207,25213,25202,25204,25911,26096,26100,26099,26098,26101,26437,26439,26457,26453,26444,26440,26461,26445,26458,26443,27600,27673,27674,27768,27751,27755,27780,27787,27791,27761,27759,27753,27802,27757,27783,27797,27804,27750,27763,27749,27771,27790,28788,28794,29283,29375,29373,29379,29382,29377,29370,29381,29589,29591,29587,29588,29586,30010,30009,30100,30101,30337,31037,32820,32917,32921,32912,32914,32924,33424,33423,33413,33422,33425,33427,33418,33411,33412,35960,36809,36799,37023,37025,37029,37022,37031,37024,38448,38440,38447,38445,20019,20376,20348,20357,20349,20352,20359,20342,20340,20361,20356,20343,20300,20375,20330,20378,20345,20353,20344,20368,20380,20372,20382,20370,20354,20373,20331,20334,20894,20924,20926,21045,21042,21043,21062,21041,21180,21258,21259,21308,21394,21396,21639,21631,21633,21649,21634,21640,21611,21626,21630,21605,21612,21620,21606,21645,21615,21601,21600,21656,21603,21607,21604,22263,22265,22383,22386,22381,22379,22385,22384,22390,22400,22389,22395,22387,22388,22370,22376,22397,22796,22853,22965,22970,22991,22990,22962,22988,22977,22966,22972,22979,22998,22961,22973,22976,22984,22964,22983,23394,23397,23443,23445,23620,23623,23726,23716,23712,23733,23727,23720,23724,23711,23715,23725,23714,23722,23719,23709,23717,23734,23728,23718,24087,24084,24089,24360,24354,24355,24356,24404,24450,24446,24445,24542,24549,24621,24614,24601,24626,24587,24628,24586,24599,24627,24602,24606,24620,24610,24589,24592,24622,24595,24593,24588,24585,24604,25108,25149,25261,25268,25297,25278,25258,25270,25290,25262,25267,25263,25275,25257,25264,25272,25917,26024,26043,26121,26108,26116,26130,26120,26107,26115,26123,26125,26117,26109,26129,26128,26358,26378,26501,26476,26510,26514,26486,26491,26520,26502,26500,26484,26509,26508,26490,26527,26513,26521,26499,26493,26497,26488,26489,26516,27429,27520,27518,27614,27677,27795,27884,27883,27886,27865,27830,27860,27821,27879,27831,27856,27842,27834,27843,27846,27885,27890,27858,27869,27828,27786,27805,27776,27870,27840,27952,27853,27847,27824,27897,27855,27881,27857,28820,28824,28805,28819,28806,28804,28817,28822,28802,28826,28803,29290,29398,29387,29400,29385,29404,29394,29396,29402,29388,29393,29604,29601,29613,29606,29602,29600,29612,29597,29917,29928,30015,30016,30014,30092,30104,30383,30451,30449,30448,30453,30712,30716,30713,30715,30714,30711,31042,31039,31173,31352,31355,31483,31861,31997,32821,32911,32942,32931,32952,32949,32941,33312,33440,33472,33451,33434,33432,33435,33461,33447,33454,33468,33438,33466,33460,33448,33441,33449,33474,33444,33475,33462,33442,34416,34415,34413,34414,35926,36818,36811,36819,36813,36822,36821,36823,37042,37044,37039,37043,37040,38457,38461,38460,38458,38467,20429,20421,20435,20402,20425,20427,20417,20436,20444,20441,20411,20403,20443,20423,20438,20410,20416,20409,20460,21060,21065,21184,21186,21309,21372,21399,21398,21401,21400,21690,21665,21677,21669,21711,21699,33549,21687,21678,21718,21686,21701,21702,21664,21616,21692,21666,21694,21618,21726,21680,22453,22430,22431,22436,22412,22423,22429,22427,22420,22424,22415,22425,22437,22426,22421,22772,22797,22867,23009,23006,23022,23040,23025,23005,23034,23037,23036,23030,23012,23026,23031,23003,23017,23027,23029,23008,23038,23028,23021,23464,23628,23760,23768,23756,23767,23755,23771,23774,23770,23753,23751,23754,23766,23763,23764,23759,23752,23750,23758,23775,23800,24057,24097,24098,24099,24096,24100,24240,24228,24226,24219,24227,24229,24327,24366,24406,24454,24631,24633,24660,24690,24670,24645,24659,24647,24649,24667,24652,24640,24642,24671,24612,24644,24664,24678,24686,25154,25155,25295,25357,25355,25333,25358,25347,25323,25337,25359,25356,25336,25334,25344,25363,25364,25338,25365,25339,25328,25921,25923,26026,26047,26166,26145,26162,26165,26140,26150,26146,26163,26155,26170,26141,26164,26169,26158,26383,26384,26561,26610,26568,26554,26588,26555,26616,26584,26560,26551,26565,26603,26596,26591,26549,26573,26547,26615,26614,26606,26595,26562,26553,26574,26599,26608,26546,26620,26566,26605,26572,26542,26598,26587,26618,26569,26570,26563,26602,26571,27432,27522,27524,27574,27606,27608,27616,27680,27681,27944,27956,27949,27935,27964,27967,27922,27914,27866,27955,27908,27929,27962,27930,27921,27904,27933,27970,27905,27928,27959,27907,27919,27968,27911,27936,27948,27912,27938,27913,27920,28855,28831,28862,28849,28848,28833,28852,28853,28841,29249,29257,29258,29292,29296,29299,29294,29386,29412,29416,29419,29407,29418,29414,29411,29573,29644,29634,29640,29637,29625,29622,29621,29620,29675,29631,29639,29630,29635,29638,29624,29643,29932,29934,29998,30023,30024,30119,30122,30329,30404,30472,30467,30468,30469,30474,30455,30459,30458,30695,30696,30726,30737,30738,30725,30736,30735,30734,30729,30723,30739,31050,31052,31051,31045,31044,31189,31181,31183,31190,31182,31360,31358,31441,31488,31489,31866,31864,31865,31871,31872,31873,32003,32008,32001,32600,32657,32653,32702,32775,32782,32783,32788,32823,32984,32967,32992,32977,32968,32962,32976,32965,32995,32985,32988,32970,32981,32969,32975,32983,32998,32973,33279,33313,33428,33497,33534,33529,33543,33512,33536,33493,33594,33515,33494,33524,33516,33505,33522,33525,33548,33531,33526,33520,33514,33508,33504,33530,33523,33517,34423,34420,34428,34419,34881,34894,34919,34922,34921,35283,35332,35335,36210,36835,36833,36846,36832,37105,37053,37055,37077,37061,37054,37063,37067,37064,37332,37331,38484,38479,38481,38483,38474,38478,20510,20485,20487,20499,20514,20528,20507,20469,20468,20531,20535,20524,20470,20471,20503,20508,20512,20519,20533,20527,20529,20494,20826,20884,20883,20938,20932,20933,20936,20942,21089,21082,21074,21086,21087,21077,21090,21197,21262,21406,21798,21730,21783,21778,21735,21747,21732,21786,21759,21764,21768,21739,21777,21765,21745,21770,21755,21751,21752,21728,21774,21763,21771,22273,22274,22476,22578,22485,22482,22458,22470,22461,22460,22456,22454,22463,22471,22480,22457,22465,22798,22858,23065,23062,23085,23086,23061,23055,23063,23050,23070,23091,23404,23463,23469,23468,23555,23638,23636,23788,23807,23790,23793,23799,23808,23801,24105,24104,24232,24238,24234,24236,24371,24368,24423,24669,24666,24679,24641,24738,24712,24704,24722,24705,24733,24707,24725,24731,24727,24711,24732,24718,25113,25158,25330,25360,25430,25388,25412,25413,25398,25411,25572,25401,25419,25418,25404,25385,25409,25396,25432,25428,25433,25389,25415,25395,25434,25425,25400,25431,25408,25416,25930,25926,26054,26051,26052,26050,26186,26207,26183,26193,26386,26387,26655,26650,26697,26674,26675,26683,26699,26703,26646,26673,26652,26677,26667,26669,26671,26702,26692,26676,26653,26642,26644,26662,26664,26670,26701,26682,26661,26656,27436,27439,27437,27441,27444,27501,32898,27528,27622,27620,27624,27619,27618,27623,27685,28026,28003,28004,28022,27917,28001,28050,27992,28002,28013,28015,28049,28045,28143,28031,28038,27998,28007,28e3,28055,28016,28028,27999,28034,28056,27951,28008,28043,28030,28032,28036,27926,28035,28027,28029,28021,28048,28892,28883,28881,28893,28875,32569,28898,28887,28882,28894,28896,28884,28877,28869,28870,28871,28890,28878,28897,29250,29304,29303,29302,29440,29434,29428,29438,29430,29427,29435,29441,29651,29657,29669,29654,29628,29671,29667,29673,29660,29650,29659,29652,29661,29658,29655,29656,29672,29918,29919,29940,29941,29985,30043,30047,30128,30145,30139,30148,30144,30143,30134,30138,30346,30409,30493,30491,30480,30483,30482,30499,30481,30485,30489,30490,30498,30503,30755,30764,30754,30773,30767,30760,30766,30763,30753,30761,30771,30762,30769,31060,31067,31055,31068,31059,31058,31057,31211,31212,31200,31214,31213,31210,31196,31198,31197,31366,31369,31365,31371,31372,31370,31367,31448,31504,31492,31507,31493,31503,31496,31498,31502,31497,31506,31876,31889,31882,31884,31880,31885,31877,32030,32029,32017,32014,32024,32022,32019,32031,32018,32015,32012,32604,32609,32606,32608,32605,32603,32662,32658,32707,32706,32704,32790,32830,32825,33018,33010,33017,33013,33025,33019,33024,33281,33327,33317,33587,33581,33604,33561,33617,33573,33622,33599,33601,33574,33564,33570,33602,33614,33563,33578,33544,33596,33613,33558,33572,33568,33591,33583,33577,33607,33605,33612,33619,33566,33580,33611,33575,33608,34387,34386,34466,34472,34454,34445,34449,34462,34439,34455,34438,34443,34458,34437,34469,34457,34465,34471,34453,34456,34446,34461,34448,34452,34883,34884,34925,34933,34934,34930,34944,34929,34943,34927,34947,34942,34932,34940,35346,35911,35927,35963,36004,36003,36214,36216,36277,36279,36278,36561,36563,36862,36853,36866,36863,36859,36868,36860,36854,37078,37088,37081,37082,37091,37087,37093,37080,37083,37079,37084,37092,37200,37198,37199,37333,37346,37338,38492,38495,38588,39139,39647,39727,20095,20592,20586,20577,20574,20576,20563,20555,20573,20594,20552,20557,20545,20571,20554,20578,20501,20549,20575,20585,20587,20579,20580,20550,20544,20590,20595,20567,20561,20944,21099,21101,21100,21102,21206,21203,21293,21404,21877,21878,21820,21837,21840,21812,21802,21841,21858,21814,21813,21808,21842,21829,21772,21810,21861,21838,21817,21832,21805,21819,21824,21835,22282,22279,22523,22548,22498,22518,22492,22516,22528,22509,22525,22536,22520,22539,22515,22479,22535,22510,22499,22514,22501,22508,22497,22542,22524,22544,22503,22529,22540,22513,22505,22512,22541,22532,22876,23136,23128,23125,23143,23134,23096,23093,23149,23120,23135,23141,23148,23123,23140,23127,23107,23133,23122,23108,23131,23112,23182,23102,23117,23097,23116,23152,23145,23111,23121,23126,23106,23132,23410,23406,23489,23488,23641,23838,23819,23837,23834,23840,23820,23848,23821,23846,23845,23823,23856,23826,23843,23839,23854,24126,24116,24241,24244,24249,24242,24243,24374,24376,24475,24470,24479,24714,24720,24710,24766,24752,24762,24787,24788,24783,24804,24793,24797,24776,24753,24795,24759,24778,24767,24771,24781,24768,25394,25445,25482,25474,25469,25533,25502,25517,25501,25495,25515,25486,25455,25479,25488,25454,25519,25461,25500,25453,25518,25468,25508,25403,25503,25464,25477,25473,25489,25485,25456,25939,26061,26213,26209,26203,26201,26204,26210,26392,26745,26759,26768,26780,26733,26734,26798,26795,26966,26735,26787,26796,26793,26741,26740,26802,26767,26743,26770,26748,26731,26738,26794,26752,26737,26750,26779,26774,26763,26784,26761,26788,26744,26747,26769,26764,26762,26749,27446,27443,27447,27448,27537,27535,27533,27534,27532,27690,28096,28075,28084,28083,28276,28076,28137,28130,28087,28150,28116,28160,28104,28128,28127,28118,28094,28133,28124,28125,28123,28148,28106,28093,28141,28144,28090,28117,28098,28111,28105,28112,28146,28115,28157,28119,28109,28131,28091,28922,28941,28919,28951,28916,28940,28912,28932,28915,28944,28924,28927,28934,28947,28928,28920,28918,28939,28930,28942,29310,29307,29308,29311,29469,29463,29447,29457,29464,29450,29448,29439,29455,29470,29576,29686,29688,29685,29700,29697,29693,29703,29696,29690,29692,29695,29708,29707,29684,29704,30052,30051,30158,30162,30159,30155,30156,30161,30160,30351,30345,30419,30521,30511,30509,30513,30514,30516,30515,30525,30501,30523,30517,30792,30802,30793,30797,30794,30796,30758,30789,30800,31076,31079,31081,31082,31075,31083,31073,31163,31226,31224,31222,31223,31375,31380,31376,31541,31559,31540,31525,31536,31522,31524,31539,31512,31530,31517,31537,31531,31533,31535,31538,31544,31514,31523,31892,31896,31894,31907,32053,32061,32056,32054,32058,32069,32044,32041,32065,32071,32062,32063,32074,32059,32040,32611,32661,32668,32669,32667,32714,32715,32717,32720,32721,32711,32719,32713,32799,32798,32795,32839,32835,32840,33048,33061,33049,33051,33069,33055,33068,33054,33057,33045,33063,33053,33058,33297,33336,33331,33338,33332,33330,33396,33680,33699,33704,33677,33658,33651,33700,33652,33679,33665,33685,33689,33653,33684,33705,33661,33667,33676,33693,33691,33706,33675,33662,33701,33711,33672,33687,33712,33663,33702,33671,33710,33654,33690,34393,34390,34495,34487,34498,34497,34501,34490,34480,34504,34489,34483,34488,34508,34484,34491,34492,34499,34493,34494,34898,34953,34965,34984,34978,34986,34970,34961,34977,34975,34968,34983,34969,34971,34967,34980,34988,34956,34963,34958,35202,35286,35289,35285,35376,35367,35372,35358,35897,35899,35932,35933,35965,36005,36221,36219,36217,36284,36290,36281,36287,36289,36568,36574,36573,36572,36567,36576,36577,36900,36875,36881,36892,36876,36897,37103,37098,37104,37108,37106,37107,37076,37099,37100,37097,37206,37208,37210,37203,37205,37356,37364,37361,37363,37368,37348,37369,37354,37355,37367,37352,37358,38266,38278,38280,38524,38509,38507,38513,38511,38591,38762,38916,39141,39319,20635,20629,20628,20638,20619,20643,20611,20620,20622,20637,20584,20636,20626,20610,20615,20831,20948,21266,21265,21412,21415,21905,21928,21925,21933,21879,22085,21922,21907,21896,21903,21941,21889,21923,21906,21924,21885,21900,21926,21887,21909,21921,21902,22284,22569,22583,22553,22558,22567,22563,22568,22517,22600,22565,22556,22555,22579,22591,22582,22574,22585,22584,22573,22572,22587,22881,23215,23188,23199,23162,23202,23198,23160,23206,23164,23205,23212,23189,23214,23095,23172,23178,23191,23171,23179,23209,23163,23165,23180,23196,23183,23187,23197,23530,23501,23499,23508,23505,23498,23502,23564,23600,23863,23875,23915,23873,23883,23871,23861,23889,23886,23893,23859,23866,23890,23869,23857,23897,23874,23865,23881,23864,23868,23858,23862,23872,23877,24132,24129,24408,24486,24485,24491,24777,24761,24780,24802,24782,24772,24852,24818,24842,24854,24837,24821,24851,24824,24828,24830,24769,24835,24856,24861,24848,24831,24836,24843,25162,25492,25521,25520,25550,25573,25576,25583,25539,25757,25587,25546,25568,25590,25557,25586,25589,25697,25567,25534,25565,25564,25540,25560,25555,25538,25543,25548,25547,25544,25584,25559,25561,25906,25959,25962,25956,25948,25960,25957,25996,26013,26014,26030,26064,26066,26236,26220,26235,26240,26225,26233,26218,26226,26369,26892,26835,26884,26844,26922,26860,26858,26865,26895,26838,26871,26859,26852,26870,26899,26896,26867,26849,26887,26828,26888,26992,26804,26897,26863,26822,26900,26872,26832,26877,26876,26856,26891,26890,26903,26830,26824,26845,26846,26854,26868,26833,26886,26836,26857,26901,26917,26823,27449,27451,27455,27452,27540,27543,27545,27541,27581,27632,27634,27635,27696,28156,28230,28231,28191,28233,28296,28220,28221,28229,28258,28203,28223,28225,28253,28275,28188,28211,28235,28224,28241,28219,28163,28206,28254,28264,28252,28257,28209,28200,28256,28273,28267,28217,28194,28208,28243,28261,28199,28280,28260,28279,28245,28281,28242,28262,28213,28214,28250,28960,28958,28975,28923,28974,28977,28963,28965,28962,28978,28959,28968,28986,28955,29259,29274,29320,29321,29318,29317,29323,29458,29451,29488,29474,29489,29491,29479,29490,29485,29478,29475,29493,29452,29742,29740,29744,29739,29718,29722,29729,29741,29745,29732,29731,29725,29737,29728,29746,29947,29999,30063,30060,30183,30170,30177,30182,30173,30175,30180,30167,30357,30354,30426,30534,30535,30532,30541,30533,30538,30542,30539,30540,30686,30700,30816,30820,30821,30812,30829,30833,30826,30830,30832,30825,30824,30814,30818,31092,31091,31090,31088,31234,31242,31235,31244,31236,31385,31462,31460,31562,31547,31556,31560,31564,31566,31552,31576,31557,31906,31902,31912,31905,32088,32111,32099,32083,32086,32103,32106,32079,32109,32092,32107,32082,32084,32105,32081,32095,32078,32574,32575,32613,32614,32674,32672,32673,32727,32849,32847,32848,33022,32980,33091,33098,33106,33103,33095,33085,33101,33082,33254,33262,33271,33272,33273,33284,33340,33341,33343,33397,33595,33743,33785,33827,33728,33768,33810,33767,33764,33788,33782,33808,33734,33736,33771,33763,33727,33793,33757,33765,33752,33791,33761,33739,33742,33750,33781,33737,33801,33807,33758,33809,33798,33730,33779,33749,33786,33735,33745,33770,33811,33731,33772,33774,33732,33787,33751,33762,33819,33755,33790,34520,34530,34534,34515,34531,34522,34538,34525,34539,34524,34540,34537,34519,34536,34513,34888,34902,34901,35002,35031,35001,35e3,35008,35006,34998,35004,34999,35005,34994,35073,35017,35221,35224,35223,35293,35290,35291,35406,35405,35385,35417,35392,35415,35416,35396,35397,35410,35400,35409,35402,35404,35407,35935,35969,35968,36026,36030,36016,36025,36021,36228,36224,36233,36312,36307,36301,36295,36310,36316,36303,36309,36313,36296,36311,36293,36591,36599,36602,36601,36582,36590,36581,36597,36583,36584,36598,36587,36593,36588,36596,36585,36909,36916,36911,37126,37164,37124,37119,37116,37128,37113,37115,37121,37120,37127,37125,37123,37217,37220,37215,37218,37216,37377,37386,37413,37379,37402,37414,37391,37388,37376,37394,37375,37373,37382,37380,37415,37378,37404,37412,37401,37399,37381,37398,38267,38285,38284,38288,38535,38526,38536,38537,38531,38528,38594,38600,38595,38641,38640,38764,38768,38766,38919,39081,39147,40166,40697,20099,20100,20150,20669,20671,20678,20654,20676,20682,20660,20680,20674,20656,20673,20666,20657,20683,20681,20662,20664,20951,21114,21112,21115,21116,21955,21979,21964,21968,21963,21962,21981,21952,21972,21956,21993,21951,21970,21901,21967,21973,21986,21974,21960,22002,21965,21977,21954,22292,22611,22632,22628,22607,22605,22601,22639,22613,22606,22621,22617,22629,22619,22589,22627,22641,22780,23239,23236,23243,23226,23224,23217,23221,23216,23231,23240,23227,23238,23223,23232,23242,23220,23222,23245,23225,23184,23510,23512,23513,23583,23603,23921,23907,23882,23909,23922,23916,23902,23912,23911,23906,24048,24143,24142,24138,24141,24139,24261,24268,24262,24267,24263,24384,24495,24493,24823,24905,24906,24875,24901,24886,24882,24878,24902,24879,24911,24873,24896,25120,37224,25123,25125,25124,25541,25585,25579,25616,25618,25609,25632,25636,25651,25667,25631,25621,25624,25657,25655,25634,25635,25612,25638,25648,25640,25665,25653,25647,25610,25626,25664,25637,25639,25611,25575,25627,25646,25633,25614,25967,26002,26067,26246,26252,26261,26256,26251,26250,26265,26260,26232,26400,26982,26975,26936,26958,26978,26993,26943,26949,26986,26937,26946,26967,26969,27002,26952,26953,26933,26988,26931,26941,26981,26864,27e3,26932,26985,26944,26991,26948,26998,26968,26945,26996,26956,26939,26955,26935,26972,26959,26961,26930,26962,26927,27003,26940,27462,27461,27459,27458,27464,27457,27547,64013,27643,27644,27641,27639,27640,28315,28374,28360,28303,28352,28319,28307,28308,28320,28337,28345,28358,28370,28349,28353,28318,28361,28343,28336,28365,28326,28367,28338,28350,28355,28380,28376,28313,28306,28302,28301,28324,28321,28351,28339,28368,28362,28311,28334,28323,28999,29012,29010,29027,29024,28993,29021,29026,29042,29048,29034,29025,28994,29016,28995,29003,29040,29023,29008,29011,28996,29005,29018,29263,29325,29324,29329,29328,29326,29500,29506,29499,29498,29504,29514,29513,29764,29770,29771,29778,29777,29783,29760,29775,29776,29774,29762,29766,29773,29780,29921,29951,29950,29949,29981,30073,30071,27011,30191,30223,30211,30199,30206,30204,30201,30200,30224,30203,30198,30189,30197,30205,30361,30389,30429,30549,30559,30560,30546,30550,30554,30569,30567,30548,30553,30573,30688,30855,30874,30868,30863,30852,30869,30853,30854,30881,30851,30841,30873,30848,30870,30843,31100,31106,31101,31097,31249,31256,31257,31250,31255,31253,31266,31251,31259,31248,31395,31394,31390,31467,31590,31588,31597,31604,31593,31602,31589,31603,31601,31600,31585,31608,31606,31587,31922,31924,31919,32136,32134,32128,32141,32127,32133,32122,32142,32123,32131,32124,32140,32148,32132,32125,32146,32621,32619,32615,32616,32620,32678,32677,32679,32731,32732,32801,33124,33120,33143,33116,33129,33115,33122,33138,26401,33118,33142,33127,33135,33092,33121,33309,33353,33348,33344,33346,33349,34033,33855,33878,33910,33913,33935,33933,33893,33873,33856,33926,33895,33840,33869,33917,33882,33881,33908,33907,33885,34055,33886,33847,33850,33844,33914,33859,33912,33842,33861,33833,33753,33867,33839,33858,33837,33887,33904,33849,33870,33868,33874,33903,33989,33934,33851,33863,33846,33843,33896,33918,33860,33835,33888,33876,33902,33872,34571,34564,34551,34572,34554,34518,34549,34637,34552,34574,34569,34561,34550,34573,34565,35030,35019,35021,35022,35038,35035,35034,35020,35024,35205,35227,35295,35301,35300,35297,35296,35298,35292,35302,35446,35462,35455,35425,35391,35447,35458,35460,35445,35459,35457,35444,35450,35900,35915,35914,35941,35940,35942,35974,35972,35973,36044,36200,36201,36241,36236,36238,36239,36237,36243,36244,36240,36242,36336,36320,36332,36337,36334,36304,36329,36323,36322,36327,36338,36331,36340,36614,36607,36609,36608,36613,36615,36616,36610,36619,36946,36927,36932,36937,36925,37136,37133,37135,37137,37142,37140,37131,37134,37230,37231,37448,37458,37424,37434,37478,37427,37477,37470,37507,37422,37450,37446,37485,37484,37455,37472,37479,37487,37430,37473,37488,37425,37460,37475,37456,37490,37454,37459,37452,37462,37426,38303,38300,38302,38299,38546,38547,38545,38551,38606,38650,38653,38648,38645,38771,38775,38776,38770,38927,38925,38926,39084,39158,39161,39343,39346,39344,39349,39597,39595,39771,40170,40173,40167,40576,40701,20710,20692,20695,20712,20723,20699,20714,20701,20708,20691,20716,20720,20719,20707,20704,20952,21120,21121,21225,21227,21296,21420,22055,22037,22028,22034,22012,22031,22044,22017,22035,22018,22010,22045,22020,22015,22009,22665,22652,22672,22680,22662,22657,22655,22644,22667,22650,22663,22673,22670,22646,22658,22664,22651,22676,22671,22782,22891,23260,23278,23269,23253,23274,23258,23277,23275,23283,23266,23264,23259,23276,23262,23261,23257,23272,23263,23415,23520,23523,23651,23938,23936,23933,23942,23930,23937,23927,23946,23945,23944,23934,23932,23949,23929,23935,24152,24153,24147,24280,24273,24279,24270,24284,24277,24281,24274,24276,24388,24387,24431,24502,24876,24872,24897,24926,24945,24947,24914,24915,24946,24940,24960,24948,24916,24954,24923,24933,24891,24938,24929,24918,25129,25127,25131,25643,25677,25691,25693,25716,25718,25714,25715,25725,25717,25702,25766,25678,25730,25694,25692,25675,25683,25696,25680,25727,25663,25708,25707,25689,25701,25719,25971,26016,26273,26272,26271,26373,26372,26402,27057,27062,27081,27040,27086,27030,27056,27052,27068,27025,27033,27022,27047,27021,27049,27070,27055,27071,27076,27069,27044,27092,27065,27082,27034,27087,27059,27027,27050,27041,27038,27097,27031,27024,27074,27061,27045,27078,27466,27469,27467,27550,27551,27552,27587,27588,27646,28366,28405,28401,28419,28453,28408,28471,28411,28462,28425,28494,28441,28442,28455,28440,28475,28434,28397,28426,28470,28531,28409,28398,28461,28480,28464,28476,28469,28395,28423,28430,28483,28421,28413,28406,28473,28444,28412,28474,28447,28429,28446,28424,28449,29063,29072,29065,29056,29061,29058,29071,29051,29062,29057,29079,29252,29267,29335,29333,29331,29507,29517,29521,29516,29794,29811,29809,29813,29810,29799,29806,29952,29954,29955,30077,30096,30230,30216,30220,30229,30225,30218,30228,30392,30593,30588,30597,30594,30574,30592,30575,30590,30595,30898,30890,30900,30893,30888,30846,30891,30878,30885,30880,30892,30882,30884,31128,31114,31115,31126,31125,31124,31123,31127,31112,31122,31120,31275,31306,31280,31279,31272,31270,31400,31403,31404,31470,31624,31644,31626,31633,31632,31638,31629,31628,31643,31630,31621,31640,21124,31641,31652,31618,31931,31935,31932,31930,32167,32183,32194,32163,32170,32193,32192,32197,32157,32206,32196,32198,32203,32204,32175,32185,32150,32188,32159,32166,32174,32169,32161,32201,32627,32738,32739,32741,32734,32804,32861,32860,33161,33158,33155,33159,33165,33164,33163,33301,33943,33956,33953,33951,33978,33998,33986,33964,33966,33963,33977,33972,33985,33997,33962,33946,33969,34e3,33949,33959,33979,33954,33940,33991,33996,33947,33961,33967,33960,34006,33944,33974,33999,33952,34007,34004,34002,34011,33968,33937,34401,34611,34595,34600,34667,34624,34606,34590,34593,34585,34587,34627,34604,34625,34622,34630,34592,34610,34602,34605,34620,34578,34618,34609,34613,34626,34598,34599,34616,34596,34586,34608,34577,35063,35047,35057,35058,35066,35070,35054,35068,35062,35067,35056,35052,35051,35229,35233,35231,35230,35305,35307,35304,35499,35481,35467,35474,35471,35478,35901,35944,35945,36053,36047,36055,36246,36361,36354,36351,36365,36349,36362,36355,36359,36358,36357,36350,36352,36356,36624,36625,36622,36621,37155,37148,37152,37154,37151,37149,37146,37156,37153,37147,37242,37234,37241,37235,37541,37540,37494,37531,37498,37536,37524,37546,37517,37542,37530,37547,37497,37527,37503,37539,37614,37518,37506,37525,37538,37501,37512,37537,37514,37510,37516,37529,37543,37502,37511,37545,37533,37515,37421,38558,38561,38655,38744,38781,38778,38782,38787,38784,38786,38779,38788,38785,38783,38862,38861,38934,39085,39086,39170,39168,39175,39325,39324,39363,39353,39355,39354,39362,39357,39367,39601,39651,39655,39742,39743,39776,39777,39775,40177,40178,40181,40615,20735,20739,20784,20728,20742,20743,20726,20734,20747,20748,20733,20746,21131,21132,21233,21231,22088,22082,22092,22069,22081,22090,22089,22086,22104,22106,22080,22067,22077,22060,22078,22072,22058,22074,22298,22699,22685,22705,22688,22691,22703,22700,22693,22689,22783,23295,23284,23293,23287,23286,23299,23288,23298,23289,23297,23303,23301,23311,23655,23961,23959,23967,23954,23970,23955,23957,23968,23964,23969,23962,23966,24169,24157,24160,24156,32243,24283,24286,24289,24393,24498,24971,24963,24953,25009,25008,24994,24969,24987,24979,25007,25005,24991,24978,25002,24993,24973,24934,25011,25133,25710,25712,25750,25760,25733,25751,25756,25743,25739,25738,25740,25763,25759,25704,25777,25752,25974,25978,25977,25979,26034,26035,26293,26288,26281,26290,26295,26282,26287,27136,27142,27159,27109,27128,27157,27121,27108,27168,27135,27116,27106,27163,27165,27134,27175,27122,27118,27156,27127,27111,27200,27144,27110,27131,27149,27132,27115,27145,27140,27160,27173,27151,27126,27174,27143,27124,27158,27473,27557,27555,27554,27558,27649,27648,27647,27650,28481,28454,28542,28551,28614,28562,28557,28553,28556,28514,28495,28549,28506,28566,28534,28524,28546,28501,28530,28498,28496,28503,28564,28563,28509,28416,28513,28523,28541,28519,28560,28499,28555,28521,28543,28565,28515,28535,28522,28539,29106,29103,29083,29104,29088,29082,29097,29109,29085,29093,29086,29092,29089,29098,29084,29095,29107,29336,29338,29528,29522,29534,29535,29536,29533,29531,29537,29530,29529,29538,29831,29833,29834,29830,29825,29821,29829,29832,29820,29817,29960,29959,30078,30245,30238,30233,30237,30236,30243,30234,30248,30235,30364,30365,30366,30363,30605,30607,30601,30600,30925,30907,30927,30924,30929,30926,30932,30920,30915,30916,30921,31130,31137,31136,31132,31138,31131,27510,31289,31410,31412,31411,31671,31691,31678,31660,31694,31663,31673,31690,31669,31941,31944,31948,31947,32247,32219,32234,32231,32215,32225,32259,32250,32230,32246,32241,32240,32238,32223,32630,32684,32688,32685,32749,32747,32746,32748,32742,32744,32868,32871,33187,33183,33182,33173,33186,33177,33175,33302,33359,33363,33362,33360,33358,33361,34084,34107,34063,34048,34089,34062,34057,34061,34079,34058,34087,34076,34043,34091,34042,34056,34060,34036,34090,34034,34069,34039,34027,34035,34044,34066,34026,34025,34070,34046,34088,34077,34094,34050,34045,34078,34038,34097,34086,34023,34024,34032,34031,34041,34072,34080,34096,34059,34073,34095,34402,34646,34659,34660,34679,34785,34675,34648,34644,34651,34642,34657,34650,34641,34654,34669,34666,34640,34638,34655,34653,34671,34668,34682,34670,34652,34661,34639,34683,34677,34658,34663,34665,34906,35077,35084,35092,35083,35095,35096,35097,35078,35094,35089,35086,35081,35234,35236,35235,35309,35312,35308,35535,35526,35512,35539,35537,35540,35541,35515,35543,35518,35520,35525,35544,35523,35514,35517,35545,35902,35917,35983,36069,36063,36057,36072,36058,36061,36071,36256,36252,36257,36251,36384,36387,36389,36388,36398,36373,36379,36374,36369,36377,36390,36391,36372,36370,36376,36371,36380,36375,36378,36652,36644,36632,36634,36640,36643,36630,36631,36979,36976,36975,36967,36971,37167,37163,37161,37162,37170,37158,37166,37253,37254,37258,37249,37250,37252,37248,37584,37571,37572,37568,37593,37558,37583,37617,37599,37592,37609,37591,37597,37580,37615,37570,37608,37578,37576,37582,37606,37581,37589,37577,37600,37598,37607,37585,37587,37557,37601,37574,37556,38268,38316,38315,38318,38320,38564,38562,38611,38661,38664,38658,38746,38794,38798,38792,38864,38863,38942,38941,38950,38953,38952,38944,38939,38951,39090,39176,39162,39185,39188,39190,39191,39189,39388,39373,39375,39379,39380,39374,39369,39382,39384,39371,39383,39372,39603,39660,39659,39667,39666,39665,39750,39747,39783,39796,39793,39782,39798,39797,39792,39784,39780,39788,40188,40186,40189,40191,40183,40199,40192,40185,40187,40200,40197,40196,40579,40659,40719,40720,20764,20755,20759,20762,20753,20958,21300,21473,22128,22112,22126,22131,22118,22115,22125,22130,22110,22135,22300,22299,22728,22717,22729,22719,22714,22722,22716,22726,23319,23321,23323,23329,23316,23315,23312,23318,23336,23322,23328,23326,23535,23980,23985,23977,23975,23989,23984,23982,23978,23976,23986,23981,23983,23988,24167,24168,24166,24175,24297,24295,24294,24296,24293,24395,24508,24989,25e3,24982,25029,25012,25030,25025,25036,25018,25023,25016,24972,25815,25814,25808,25807,25801,25789,25737,25795,25819,25843,25817,25907,25983,25980,26018,26312,26302,26304,26314,26315,26319,26301,26299,26298,26316,26403,27188,27238,27209,27239,27186,27240,27198,27229,27245,27254,27227,27217,27176,27226,27195,27199,27201,27242,27236,27216,27215,27220,27247,27241,27232,27196,27230,27222,27221,27213,27214,27206,27477,27476,27478,27559,27562,27563,27592,27591,27652,27651,27654,28589,28619,28579,28615,28604,28622,28616,28510,28612,28605,28574,28618,28584,28676,28581,28590,28602,28588,28586,28623,28607,28600,28578,28617,28587,28621,28591,28594,28592,29125,29122,29119,29112,29142,29120,29121,29131,29140,29130,29127,29135,29117,29144,29116,29126,29146,29147,29341,29342,29545,29542,29543,29548,29541,29547,29546,29823,29850,29856,29844,29842,29845,29857,29963,30080,30255,30253,30257,30269,30259,30268,30261,30258,30256,30395,30438,30618,30621,30625,30620,30619,30626,30627,30613,30617,30615,30941,30953,30949,30954,30942,30947,30939,30945,30946,30957,30943,30944,31140,31300,31304,31303,31414,31416,31413,31409,31415,31710,31715,31719,31709,31701,31717,31706,31720,31737,31700,31722,31714,31708,31723,31704,31711,31954,31956,31959,31952,31953,32274,32289,32279,32268,32287,32288,32275,32270,32284,32277,32282,32290,32267,32271,32278,32269,32276,32293,32292,32579,32635,32636,32634,32689,32751,32810,32809,32876,33201,33190,33198,33209,33205,33195,33200,33196,33204,33202,33207,33191,33266,33365,33366,33367,34134,34117,34155,34125,34131,34145,34136,34112,34118,34148,34113,34146,34116,34129,34119,34147,34110,34139,34161,34126,34158,34165,34133,34151,34144,34188,34150,34141,34132,34149,34156,34403,34405,34404,34715,34703,34711,34707,34706,34696,34689,34710,34712,34681,34695,34723,34693,34704,34705,34717,34692,34708,34716,34714,34697,35102,35110,35120,35117,35118,35111,35121,35106,35113,35107,35119,35116,35103,35313,35552,35554,35570,35572,35573,35549,35604,35556,35551,35568,35528,35550,35553,35560,35583,35567,35579,35985,35986,35984,36085,36078,36081,36080,36083,36204,36206,36261,36263,36403,36414,36408,36416,36421,36406,36412,36413,36417,36400,36415,36541,36662,36654,36661,36658,36665,36663,36660,36982,36985,36987,36998,37114,37171,37173,37174,37267,37264,37265,37261,37263,37671,37662,37640,37663,37638,37647,37754,37688,37692,37659,37667,37650,37633,37702,37677,37646,37645,37579,37661,37626,37669,37651,37625,37623,37684,37634,37668,37631,37673,37689,37685,37674,37652,37644,37643,37630,37641,37632,37627,37654,38332,38349,38334,38329,38330,38326,38335,38325,38333,38569,38612,38667,38674,38672,38809,38807,38804,38896,38904,38965,38959,38962,39204,39199,39207,39209,39326,39406,39404,39397,39396,39408,39395,39402,39401,39399,39609,39615,39604,39611,39670,39674,39673,39671,39731,39808,39813,39815,39804,39806,39803,39810,39827,39826,39824,39802,39829,39805,39816,40229,40215,40224,40222,40212,40233,40221,40216,40226,40208,40217,40223,40584,40582,40583,40622,40621,40661,40662,40698,40722,40765,20774,20773,20770,20772,20768,20777,21236,22163,22156,22157,22150,22148,22147,22142,22146,22143,22145,22742,22740,22735,22738,23341,23333,23346,23331,23340,23335,23334,23343,23342,23419,23537,23538,23991,24172,24170,24510,24507,25027,25013,25020,25063,25056,25061,25060,25064,25054,25839,25833,25827,25835,25828,25832,25985,25984,26038,26074,26322,27277,27286,27265,27301,27273,27295,27291,27297,27294,27271,27283,27278,27285,27267,27304,27300,27281,27263,27302,27290,27269,27276,27282,27483,27565,27657,28620,28585,28660,28628,28643,28636,28653,28647,28646,28638,28658,28637,28642,28648,29153,29169,29160,29170,29156,29168,29154,29555,29550,29551,29847,29874,29867,29840,29866,29869,29873,29861,29871,29968,29969,29970,29967,30084,30275,30280,30281,30279,30372,30441,30645,30635,30642,30647,30646,30644,30641,30632,30704,30963,30973,30978,30971,30972,30962,30981,30969,30974,30980,31147,31144,31324,31323,31318,31320,31316,31322,31422,31424,31425,31749,31759,31730,31744,31743,31739,31758,31732,31755,31731,31746,31753,31747,31745,31736,31741,31750,31728,31729,31760,31754,31976,32301,32316,32322,32307,38984,32312,32298,32329,32320,32327,32297,32332,32304,32315,32310,32324,32314,32581,32639,32638,32637,32756,32754,32812,33211,33220,33228,33226,33221,33223,33212,33257,33371,33370,33372,34179,34176,34191,34215,34197,34208,34187,34211,34171,34212,34202,34206,34167,34172,34185,34209,34170,34168,34135,34190,34198,34182,34189,34201,34205,34177,34210,34178,34184,34181,34169,34166,34200,34192,34207,34408,34750,34730,34733,34757,34736,34732,34745,34741,34748,34734,34761,34755,34754,34764,34743,34735,34756,34762,34740,34742,34751,34744,34749,34782,34738,35125,35123,35132,35134,35137,35154,35127,35138,35245,35247,35246,35314,35315,35614,35608,35606,35601,35589,35595,35618,35599,35602,35605,35591,35597,35592,35590,35612,35603,35610,35919,35952,35954,35953,35951,35989,35988,36089,36207,36430,36429,36435,36432,36428,36423,36675,36672,36997,36990,37176,37274,37282,37275,37273,37279,37281,37277,37280,37793,37763,37807,37732,37718,37703,37756,37720,37724,37750,37705,37712,37713,37728,37741,37775,37708,37738,37753,37719,37717,37714,37711,37745,37751,37755,37729,37726,37731,37735,37760,37710,37721,38343,38336,38345,38339,38341,38327,38574,38576,38572,38688,38687,38680,38685,38681,38810,38817,38812,38814,38813,38869,38868,38897,38977,38980,38986,38985,38981,38979,39205,39211,39212,39210,39219,39218,39215,39213,39217,39216,39320,39331,39329,39426,39418,39412,39415,39417,39416,39414,39419,39421,39422,39420,39427,39614,39678,39677,39681,39676,39752,39834,39848,39838,39835,39846,39841,39845,39844,39814,39842,39840,39855,40243,40257,40295,40246,40238,40239,40241,40248,40240,40261,40258,40259,40254,40247,40256,40253,32757,40237,40586,40585,40589,40624,40648,40666,40699,40703,40740,40739,40738,40788,40864,20785,20781,20782,22168,22172,22167,22170,22173,22169,22896,23356,23657,23658,24e3,24173,24174,25048,25055,25069,25070,25073,25066,25072,25067,25046,25065,25855,25860,25853,25848,25857,25859,25852,26004,26075,26330,26331,26328,27333,27321,27325,27361,27334,27322,27318,27319,27335,27316,27309,27486,27593,27659,28679,28684,28685,28673,28677,28692,28686,28671,28672,28667,28710,28668,28663,28682,29185,29183,29177,29187,29181,29558,29880,29888,29877,29889,29886,29878,29883,29890,29972,29971,30300,30308,30297,30288,30291,30295,30298,30374,30397,30444,30658,30650,30975,30988,30995,30996,30985,30992,30994,30993,31149,31148,31327,31772,31785,31769,31776,31775,31789,31773,31782,31784,31778,31781,31792,32348,32336,32342,32355,32344,32354,32351,32337,32352,32343,32339,32693,32691,32759,32760,32885,33233,33234,33232,33375,33374,34228,34246,34240,34243,34242,34227,34229,34237,34247,34244,34239,34251,34254,34248,34245,34225,34230,34258,34340,34232,34231,34238,34409,34791,34790,34786,34779,34795,34794,34789,34783,34803,34788,34772,34780,34771,34797,34776,34787,34724,34775,34777,34817,34804,34792,34781,35155,35147,35151,35148,35142,35152,35153,35145,35626,35623,35619,35635,35632,35637,35655,35631,35644,35646,35633,35621,35639,35622,35638,35630,35620,35643,35645,35642,35906,35957,35993,35992,35991,36094,36100,36098,36096,36444,36450,36448,36439,36438,36446,36453,36455,36443,36442,36449,36445,36457,36436,36678,36679,36680,36683,37160,37178,37179,37182,37288,37285,37287,37295,37290,37813,37772,37778,37815,37787,37789,37769,37799,37774,37802,37790,37798,37781,37768,37785,37791,37773,37809,37777,37810,37796,37800,37812,37795,37797,38354,38355,38353,38579,38615,38618,24002,38623,38616,38621,38691,38690,38693,38828,38830,38824,38827,38820,38826,38818,38821,38871,38873,38870,38872,38906,38992,38993,38994,39096,39233,39228,39226,39439,39435,39433,39437,39428,39441,39434,39429,39431,39430,39616,39644,39688,39684,39685,39721,39733,39754,39756,39755,39879,39878,39875,39871,39873,39861,39864,39891,39862,39876,39865,39869,40284,40275,40271,40266,40283,40267,40281,40278,40268,40279,40274,40276,40287,40280,40282,40590,40588,40671,40705,40704,40726,40741,40747,40746,40745,40744,40780,40789,20788,20789,21142,21239,21428,22187,22189,22182,22183,22186,22188,22746,22749,22747,22802,23357,23358,23359,24003,24176,24511,25083,25863,25872,25869,25865,25868,25870,25988,26078,26077,26334,27367,27360,27340,27345,27353,27339,27359,27356,27344,27371,27343,27341,27358,27488,27568,27660,28697,28711,28704,28694,28715,28705,28706,28707,28713,28695,28708,28700,28714,29196,29194,29191,29186,29189,29349,29350,29348,29347,29345,29899,29893,29879,29891,29974,30304,30665,30666,30660,30705,31005,31003,31009,31004,30999,31006,31152,31335,31336,31795,31804,31801,31788,31803,31980,31978,32374,32373,32376,32368,32375,32367,32378,32370,32372,32360,32587,32586,32643,32646,32695,32765,32766,32888,33239,33237,33380,33377,33379,34283,34289,34285,34265,34273,34280,34266,34263,34284,34290,34296,34264,34271,34275,34268,34257,34288,34278,34287,34270,34274,34816,34810,34819,34806,34807,34825,34828,34827,34822,34812,34824,34815,34826,34818,35170,35162,35163,35159,35169,35164,35160,35165,35161,35208,35255,35254,35318,35664,35656,35658,35648,35667,35670,35668,35659,35669,35665,35650,35666,35671,35907,35959,35958,35994,36102,36103,36105,36268,36266,36269,36267,36461,36472,36467,36458,36463,36475,36546,36690,36689,36687,36688,36691,36788,37184,37183,37296,37293,37854,37831,37839,37826,37850,37840,37881,37868,37836,37849,37801,37862,37834,37844,37870,37859,37845,37828,37838,37824,37842,37863,38269,38362,38363,38625,38697,38699,38700,38696,38694,38835,38839,38838,38877,38878,38879,39004,39001,39005,38999,39103,39101,39099,39102,39240,39239,39235,39334,39335,39450,39445,39461,39453,39460,39451,39458,39456,39463,39459,39454,39452,39444,39618,39691,39690,39694,39692,39735,39914,39915,39904,39902,39908,39910,39906,39920,39892,39895,39916,39900,39897,39909,39893,39905,39898,40311,40321,40330,40324,40328,40305,40320,40312,40326,40331,40332,40317,40299,40308,40309,40304,40297,40325,40307,40315,40322,40303,40313,40319,40327,40296,40596,40593,40640,40700,40749,40768,40769,40781,40790,40791,40792,21303,22194,22197,22195,22755,23365,24006,24007,24302,24303,24512,24513,25081,25879,25878,25877,25875,26079,26344,26339,26340,27379,27376,27370,27368,27385,27377,27374,27375,28732,28725,28719,28727,28724,28721,28738,28728,28735,28730,28729,28736,28731,28723,28737,29203,29204,29352,29565,29564,29882,30379,30378,30398,30445,30668,30670,30671,30669,30706,31013,31011,31015,31016,31012,31017,31154,31342,31340,31341,31479,31817,31816,31818,31815,31813,31982,32379,32382,32385,32384,32698,32767,32889,33243,33241,33291,33384,33385,34338,34303,34305,34302,34331,34304,34294,34308,34313,34309,34316,34301,34841,34832,34833,34839,34835,34838,35171,35174,35257,35319,35680,35690,35677,35688,35683,35685,35687,35693,36270,36486,36488,36484,36697,36694,36695,36693,36696,36698,37005,37187,37185,37303,37301,37298,37299,37899,37907,37883,37920,37903,37908,37886,37909,37904,37928,37913,37901,37877,37888,37879,37895,37902,37910,37906,37882,37897,37880,37898,37887,37884,37900,37878,37905,37894,38366,38368,38367,38702,38703,38841,38843,38909,38910,39008,39010,39011,39007,39105,39106,39248,39246,39257,39244,39243,39251,39474,39476,39473,39468,39466,39478,39465,39470,39480,39469,39623,39626,39622,39696,39698,39697,39947,39944,39927,39941,39954,39928,4e4,39943,39950,39942,39959,39956,39945,40351,40345,40356,40349,40338,40344,40336,40347,40352,40340,40348,40362,40343,40353,40346,40354,40360,40350,40355,40383,40361,40342,40358,40359,40601,40603,40602,40677,40676,40679,40678,40752,40750,40795,40800,40798,40797,40793,40849,20794,20793,21144,21143,22211,22205,22206,23368,23367,24011,24015,24305,25085,25883,27394,27388,27395,27384,27392,28739,28740,28746,28744,28745,28741,28742,29213,29210,29209,29566,29975,30314,30672,31021,31025,31023,31828,31827,31986,32394,32391,32392,32395,32390,32397,32589,32699,32816,33245,34328,34346,34342,34335,34339,34332,34329,34343,34350,34337,34336,34345,34334,34341,34857,34845,34843,34848,34852,34844,34859,34890,35181,35177,35182,35179,35322,35705,35704,35653,35706,35707,36112,36116,36271,36494,36492,36702,36699,36701,37190,37188,37189,37305,37951,37947,37942,37929,37949,37948,37936,37945,37930,37943,37932,37952,37937,38373,38372,38371,38709,38714,38847,38881,39012,39113,39110,39104,39256,39254,39481,39485,39494,39492,39490,39489,39482,39487,39629,39701,39703,39704,39702,39738,39762,39979,39965,39964,39980,39971,39976,39977,39972,39969,40375,40374,40380,40385,40391,40394,40399,40382,40389,40387,40379,40373,40398,40377,40378,40364,40392,40369,40365,40396,40371,40397,40370,40570,40604,40683,40686,40685,40731,40728,40730,40753,40782,40805,40804,40850,20153,22214,22213,22219,22897,23371,23372,24021,24017,24306,25889,25888,25894,25890,27403,27400,27401,27661,28757,28758,28759,28754,29214,29215,29353,29567,29912,29909,29913,29911,30317,30381,31029,31156,31344,31345,31831,31836,31833,31835,31834,31988,31985,32401,32591,32647,33246,33387,34356,34357,34355,34348,34354,34358,34860,34856,34854,34858,34853,35185,35263,35262,35323,35710,35716,35714,35718,35717,35711,36117,36501,36500,36506,36498,36496,36502,36503,36704,36706,37191,37964,37968,37962,37963,37967,37959,37957,37960,37961,37958,38719,38883,39018,39017,39115,39252,39259,39502,39507,39508,39500,39503,39496,39498,39497,39506,39504,39632,39705,39723,39739,39766,39765,40006,40008,39999,40004,39993,39987,40001,39996,39991,39988,39986,39997,39990,40411,40402,40414,40410,40395,40400,40412,40401,40415,40425,40409,40408,40406,40437,40405,40413,40630,40688,40757,40755,40754,40770,40811,40853,40866,20797,21145,22760,22759,22898,23373,24024,34863,24399,25089,25091,25092,25897,25893,26006,26347,27409,27410,27407,27594,28763,28762,29218,29570,29569,29571,30320,30676,31847,31846,32405,33388,34362,34368,34361,34364,34353,34363,34366,34864,34866,34862,34867,35190,35188,35187,35326,35724,35726,35723,35720,35909,36121,36504,36708,36707,37308,37986,37973,37981,37975,37982,38852,38853,38912,39510,39513,39710,39711,39712,40018,40024,40016,40010,40013,40011,40021,40025,40012,40014,40443,40439,40431,40419,40427,40440,40420,40438,40417,40430,40422,40434,40432,40418,40428,40436,40435,40424,40429,40642,40656,40690,40691,40710,40732,40760,40759,40758,40771,40783,40817,40816,40814,40815,22227,22221,23374,23661,25901,26349,26350,27411,28767,28769,28765,28768,29219,29915,29925,30677,31032,31159,31158,31850,32407,32649,33389,34371,34872,34871,34869,34891,35732,35733,36510,36511,36512,36509,37310,37309,37314,37995,37992,37993,38629,38726,38723,38727,38855,38885,39518,39637,39769,40035,40039,40038,40034,40030,40032,40450,40446,40455,40451,40454,40453,40448,40449,40457,40447,40445,40452,40608,40734,40774,40820,40821,40822,22228,25902,26040,27416,27417,27415,27418,28770,29222,29354,30680,30681,31033,31849,31851,31990,32410,32408,32411,32409,33248,33249,34374,34375,34376,35193,35194,35196,35195,35327,35736,35737,36517,36516,36515,37998,37997,37999,38001,38003,38729,39026,39263,40040,40046,40045,40459,40461,40464,40463,40466,40465,40609,40693,40713,40775,40824,40827,40826,40825,22302,28774,31855,34876,36274,36518,37315,38004,38008,38006,38005,39520,40052,40051,40049,40053,40468,40467,40694,40714,40868,28776,28773,31991,34410,34878,34877,34879,35742,35996,36521,36553,38731,39027,39028,39116,39265,39339,39524,39526,39527,39716,40469,40471,40776,25095,27422,29223,34380,36520,38018,38016,38017,39529,39528,39726,40473,29225,34379,35743,38019,40057,40631,30325,39531,40058,40477,28777,28778,40612,40830,40777,40856,30849,37561,35023,22715,24658,31911,23290,9556,9574,9559,9568,9580,9571,9562,9577,9565,9554,9572,9557,9566,9578,9569,9560,9575,9563,9555,9573,9558,9567,9579,9570,9561,9576,9564,9553,9552,9581,9582,9584,9583,65517,132423,37595,132575,147397,34124,17077,29679,20917,13897,149826,166372,37700,137691,33518,146632,30780,26436,25311,149811,166314,131744,158643,135941,20395,140525,20488,159017,162436,144896,150193,140563,20521,131966,24484,131968,131911,28379,132127,20605,20737,13434,20750,39020,14147,33814,149924,132231,20832,144308,20842,134143,139516,131813,140592,132494,143923,137603,23426,34685,132531,146585,20914,20920,40244,20937,20943,20945,15580,20947,150182,20915,20962,21314,20973,33741,26942,145197,24443,21003,21030,21052,21173,21079,21140,21177,21189,31765,34114,21216,34317,158483,21253,166622,21833,28377,147328,133460,147436,21299,21316,134114,27851,136998,26651,29653,24650,16042,14540,136936,29149,17570,21357,21364,165547,21374,21375,136598,136723,30694,21395,166555,21408,21419,21422,29607,153458,16217,29596,21441,21445,27721,20041,22526,21465,15019,134031,21472,147435,142755,21494,134263,21523,28793,21803,26199,27995,21613,158547,134516,21853,21647,21668,18342,136973,134877,15796,134477,166332,140952,21831,19693,21551,29719,21894,21929,22021,137431,147514,17746,148533,26291,135348,22071,26317,144010,26276,26285,22093,22095,30961,22257,38791,21502,22272,22255,22253,166758,13859,135759,22342,147877,27758,28811,22338,14001,158846,22502,136214,22531,136276,148323,22566,150517,22620,22698,13665,22752,22748,135740,22779,23551,22339,172368,148088,37843,13729,22815,26790,14019,28249,136766,23076,21843,136850,34053,22985,134478,158849,159018,137180,23001,137211,137138,159142,28017,137256,136917,23033,159301,23211,23139,14054,149929,23159,14088,23190,29797,23251,159649,140628,15749,137489,14130,136888,24195,21200,23414,25992,23420,162318,16388,18525,131588,23509,24928,137780,154060,132517,23539,23453,19728,23557,138052,23571,29646,23572,138405,158504,23625,18653,23685,23785,23791,23947,138745,138807,23824,23832,23878,138916,23738,24023,33532,14381,149761,139337,139635,33415,14390,15298,24110,27274,24181,24186,148668,134355,21414,20151,24272,21416,137073,24073,24308,164994,24313,24315,14496,24316,26686,37915,24333,131521,194708,15070,18606,135994,24378,157832,140240,24408,140401,24419,38845,159342,24434,37696,166454,24487,23990,15711,152144,139114,159992,140904,37334,131742,166441,24625,26245,137335,14691,15815,13881,22416,141236,31089,15936,24734,24740,24755,149890,149903,162387,29860,20705,23200,24932,33828,24898,194726,159442,24961,20980,132694,24967,23466,147383,141407,25043,166813,170333,25040,14642,141696,141505,24611,24924,25886,25483,131352,25285,137072,25301,142861,25452,149983,14871,25656,25592,136078,137212,25744,28554,142902,38932,147596,153373,25825,25829,38011,14950,25658,14935,25933,28438,150056,150051,25989,25965,25951,143486,26037,149824,19255,26065,16600,137257,26080,26083,24543,144384,26136,143863,143864,26180,143780,143781,26187,134773,26215,152038,26227,26228,138813,143921,165364,143816,152339,30661,141559,39332,26370,148380,150049,15147,27130,145346,26462,26471,26466,147917,168173,26583,17641,26658,28240,37436,26625,144358,159136,26717,144495,27105,27147,166623,26995,26819,144845,26881,26880,15666,14849,144956,15232,26540,26977,166474,17148,26934,27032,15265,132041,33635,20624,27129,144985,139562,27205,145155,27293,15347,26545,27336,168348,15373,27421,133411,24798,27445,27508,141261,28341,146139,132021,137560,14144,21537,146266,27617,147196,27612,27703,140427,149745,158545,27738,33318,27769,146876,17605,146877,147876,149772,149760,146633,14053,15595,134450,39811,143865,140433,32655,26679,159013,159137,159211,28054,27996,28284,28420,149887,147589,159346,34099,159604,20935,27804,28189,33838,166689,28207,146991,29779,147330,31180,28239,23185,143435,28664,14093,28573,146992,28410,136343,147517,17749,37872,28484,28508,15694,28532,168304,15675,28575,147780,28627,147601,147797,147513,147440,147380,147775,20959,147798,147799,147776,156125,28747,28798,28839,28801,28876,28885,28886,28895,16644,15848,29108,29078,148087,28971,28997,23176,29002,29038,23708,148325,29007,37730,148161,28972,148570,150055,150050,29114,166888,28861,29198,37954,29205,22801,37955,29220,37697,153093,29230,29248,149876,26813,29269,29271,15957,143428,26637,28477,29314,29482,29483,149539,165931,18669,165892,29480,29486,29647,29610,134202,158254,29641,29769,147938,136935,150052,26147,14021,149943,149901,150011,29687,29717,26883,150054,29753,132547,16087,29788,141485,29792,167602,29767,29668,29814,33721,29804,14128,29812,37873,27180,29826,18771,150156,147807,150137,166799,23366,166915,137374,29896,137608,29966,29929,29982,167641,137803,23511,167596,37765,30029,30026,30055,30062,151426,16132,150803,30094,29789,30110,30132,30210,30252,30289,30287,30319,30326,156661,30352,33263,14328,157969,157966,30369,30373,30391,30412,159647,33890,151709,151933,138780,30494,30502,30528,25775,152096,30552,144044,30639,166244,166248,136897,30708,30729,136054,150034,26826,30895,30919,30931,38565,31022,153056,30935,31028,30897,161292,36792,34948,166699,155779,140828,31110,35072,26882,31104,153687,31133,162617,31036,31145,28202,160038,16040,31174,168205,31188];var _0={};Object.defineProperty(_0,"__esModule",{value:!0});_0.AbstractDecoder=void 0;var qp=function(){function e(t){t===void 0&&(t=!1),this.fatal=t}return e.prototype.fail=function(){if(this.fatal)throw TypeError("Decoder error");return 65533},e}();_0.AbstractDecoder=qp;var rt={},To;function x3(){return To||(To=1,function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.ByteBuffer=e.END_OF_BUFFER=void 0;var t=s3;e.END_OF_BUFFER=-1;var r=function(){function n(i){this.bytes=Array.from(i).reverse()}return n.prototype.isEndOfBuffer=function(){return this.bytes.length===0},n.prototype.read=function(){var i;return(i=this.bytes.pop())!==null&&i!==void 0?i:e.END_OF_BUFFER},n.prototype.write=function(){for(var i,o=[],s=0;s<arguments.length;s++)o[s]=arguments[s];(i=this.bytes).push.apply(i,t.__spreadArray([],t.__read(o),!1))},n}();e.ByteBuffer=r}(rt)),rt}var A5={},Io;function w3(){return Io||(Io=1,Object.defineProperty(A5,"__esModule",{value:!0}),A5.FINISHED=A5.DEFAULT_ENCODING=void 0,A5.DEFAULT_ENCODING="utf-8",A5.FINISHED=-1),A5}var J2={};Object.defineProperty(J2,"__esModule",{value:!0});J2.indexOf=J2.inRange=J2.convertCodeUnitToBytes=J2.isASCII=void 0;function Wp(e){return e>=0&&e<=127}J2.isASCII=Wp;function Vp(e,t){var r=e>>8,n=e&255;return t?[r,n]:[n,r]}J2.convertCodeUnitToBytes=Vp;function Kp(e,t,r){return e>=t&&e<=r}J2.inRange=Kp;function Gp(e,t){var r=e.indexOf(t);return r===-1?null:r}J2.indexOf=Gp;Object.defineProperty($7,"__esModule",{value:!0});$7.Big5Decoder=void 0;var Qp=s3,Yp=ac,Jp=_0,Fo=x3(),Xp=w3(),A6=J2,Zp=function(e){Qp.__extends(t,e);function t(){var r=e!==null&&e.apply(this,arguments)||this;return r.lead=0,r}return t.prototype.decode=function(r){var n,i=r.read();if(i===Fo.END_OF_BUFFER&&this.lead!==0)return this.lead=0,this.fail();if(i===Fo.END_OF_BUFFER&&this.lead===0)return Xp.FINISHED;if(this.lead!==0){var o=this.lead;this.lead=0;var s=i<127?64:98,a=null;switch(((0,A6.inRange)(i,64,126)||(0,A6.inRange)(i,161,254))&&(a=(o-129)*157+(i-s)),a){case 1133:return[202,772];case 1135:return[202,780];case 1164:return[234,772];case 1166:return[234,780]}var l=a==null?null:(n=Yp[a])!==null&&n!==void 0?n:null;return l==null&&(0,A6.isASCII)(i)&&r.write(i),l??this.fail()}return(0,A6.isASCII)(i)?i:(0,A6.inRange)(i,129,254)?(this.lead=i,null):this.fail()},t}(Jp.AbstractDecoder);$7.Big5Decoder=Zp;var L7={},E0={};Object.defineProperty(E0,"__esModule",{value:!0});E0.AbstractEncoder=void 0;var ey=function(){function e(){}return e.prototype.fail=function(t){throw TypeError("The code point ".concat(t," could not be encoded"))},e}();E0.AbstractEncoder=ey;Object.defineProperty(L7,"__esModule",{value:!0});L7.Big5Encoder=void 0;var ty=s3,ry=ac,ny=E0,iy=x3(),oy=w3(),uc=J2;function sy(e){B6=B6??ry.map(function(r,n){return n<(161-129)*157?null:r});var t=B6;return e===9552||e===9566||e===9569||e===9578||e===21313||e===21317?t.lastIndexOf(e):(0,uc.indexOf)(t,e)}var B6=null,ay=function(e){ty.__extends(t,e);function t(){return e!==null&&e.apply(this,arguments)||this}return t.prototype.encode=function(r){var n=r.read();if(n===iy.END_OF_BUFFER)return oy.FINISHED;if((0,uc.isASCII)(n))return n;var i=sy(n);if(i==null)return this.fail(n);var o=Math.floor(i/157)+129;if(o<161)return this.fail(n);var s=i%157,a=s<63?64:98;return[o,s+a]},t}(ny.AbstractEncoder);L7.Big5Encoder=ay;var g2={};Object.defineProperty(g2,"__esModule",{value:!0});g2.Encoding=g2.getEncoding=g2.registerEncoding=void 0;var uy=s3,lc=new Map;function ly(e,t,r,n){var i,o,s=new cc(e,t,r,n);try{for(var a=uy.__values(s.getLabels()),l=a.next();!l.done;l=a.next()){var u=l.value;lc.set(u,s)}}catch(h){i={error:h}}finally{try{l&&!l.done&&(o=a.return)&&o.call(a)}finally{if(i)throw i.error}}return s}g2.registerEncoding=ly;function cy(e){var t=lc.get(e.trim().toLowerCase());if(t==null)throw new RangeError("Encoding not supported: "+e);return t}g2.getEncoding=cy;var cc=function(){function e(t,r,n,i){this.name=t,this.labels=r,this.decoder=n,this.encoder=i}return e.prototype.getName=function(){return this.name},e.prototype.hasLabel=function(t){return this.labels.includes(t.trim().toLowerCase())},e.prototype.getLabels=function(){return this.labels},e.prototype.createDecoder=function(t){return new this.decoder(t)},e.prototype.createEncoder=function(){return new this.encoder},e}();g2.Encoding=cc;var fy=$7,dy=L7,hy=g2;(0,hy.registerEncoding)("big5",["big5","big5-hkscs","cn-big5","csbig5","x-x-big5"],fy.Big5Decoder,dy.Big5Encoder);var M7={};const f6=[12288,12289,12290,65292,65294,12539,65306,65307,65311,65281,12443,12444,180,65344,168,65342,65507,65343,12541,12542,12445,12446,12291,20189,12293,12294,12295,12540,8213,8208,65295,65340,65374,8741,65372,8230,8229,8216,8217,8220,8221,65288,65289,12308,12309,65339,65341,65371,65373,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,65291,65293,177,215,247,65309,8800,65308,65310,8806,8807,8734,8756,9794,9792,176,8242,8243,8451,65509,65284,65504,65505,65285,65283,65286,65290,65312,167,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,9661,9660,8251,12306,8594,8592,8593,8595,12307,0,0,0,0,0,0,0,0,0,0,0,8712,8715,8838,8839,8834,8835,8746,8745,0,0,0,0,0,0,0,0,8743,8744,65506,8658,8660,8704,8707,0,0,0,0,0,0,0,0,0,0,0,8736,8869,8978,8706,8711,8801,8786,8810,8811,8730,8765,8733,8757,8747,8748,0,0,0,0,0,0,0,8491,8240,9839,9837,9834,8224,8225,182,0,0,0,0,9711,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,0,0,0,0,0,0,0,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,0,0,0,0,0,0,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,0,0,0,0,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,0,0,0,0,0,0,0,0,0,0,0,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,0,0,0,0,0,0,0,0,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,0,0,0,0,0,0,0,0,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,0,0,0,0,0,0,0,0,0,0,0,0,0,9472,9474,9484,9488,9496,9492,9500,9516,9508,9524,9532,9473,9475,9487,9491,9499,9495,9507,9523,9515,9531,9547,9504,9519,9512,9527,9535,9501,9520,9509,9528,9538,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9322,9323,9324,9325,9326,9327,9328,9329,9330,9331,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,0,13129,13076,13090,13133,13080,13095,13059,13110,13137,13143,13069,13094,13091,13099,13130,13115,13212,13213,13214,13198,13199,13252,13217,0,0,0,0,0,0,0,0,13179,12317,12319,8470,13261,8481,12964,12965,12966,12967,12968,12849,12850,12857,13182,13181,13180,8786,8801,8747,8750,8721,8730,8869,8736,8735,8895,8757,8745,8746,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20124,21782,23043,38463,21696,24859,25384,23030,36898,33909,33564,31312,24746,25569,28197,26093,33894,33446,39925,26771,22311,26017,25201,23451,22992,34427,39156,32098,32190,39822,25110,31903,34999,23433,24245,25353,26263,26696,38343,38797,26447,20197,20234,20301,20381,20553,22258,22839,22996,23041,23561,24799,24847,24944,26131,26885,28858,30031,30064,31227,32173,32239,32963,33806,34915,35586,36949,36986,21307,20117,20133,22495,32946,37057,30959,19968,22769,28322,36920,31282,33576,33419,39983,20801,21360,21693,21729,22240,23035,24341,39154,28139,32996,34093,38498,38512,38560,38907,21515,21491,23431,28879,32701,36802,38632,21359,40284,31418,19985,30867,33276,28198,22040,21764,27421,34074,39995,23013,21417,28006,29916,38287,22082,20113,36939,38642,33615,39180,21473,21942,23344,24433,26144,26355,26628,27704,27891,27945,29787,30408,31310,38964,33521,34907,35424,37613,28082,30123,30410,39365,24742,35585,36234,38322,27022,21421,20870,22290,22576,22852,23476,24310,24616,25513,25588,27839,28436,28814,28948,29017,29141,29503,32257,33398,33489,34199,36960,37467,40219,22633,26044,27738,29989,20985,22830,22885,24448,24540,25276,26106,27178,27431,27572,29579,32705,35158,40236,40206,40644,23713,27798,33659,20740,23627,25014,33222,26742,29281,20057,20474,21368,24681,28201,31311,38899,19979,21270,20206,20309,20285,20385,20339,21152,21487,22025,22799,23233,23478,23521,31185,26247,26524,26550,27468,27827,28779,29634,31117,31166,31292,31623,33457,33499,33540,33655,33775,33747,34662,35506,22057,36008,36838,36942,38686,34442,20420,23784,25105,29273,30011,33253,33469,34558,36032,38597,39187,39381,20171,20250,35299,22238,22602,22730,24315,24555,24618,24724,24674,25040,25106,25296,25913,39745,26214,26800,28023,28784,30028,30342,32117,33445,34809,38283,38542,35997,20977,21182,22806,21683,23475,23830,24936,27010,28079,30861,33995,34903,35442,37799,39608,28012,39336,34521,22435,26623,34510,37390,21123,22151,21508,24275,25313,25785,26684,26680,27579,29554,30906,31339,35226,35282,36203,36611,37101,38307,38548,38761,23398,23731,27005,38989,38990,25499,31520,27179,27263,26806,39949,28511,21106,21917,24688,25324,27963,28167,28369,33883,35088,36676,19988,39993,21494,26907,27194,38788,26666,20828,31427,33970,37340,37772,22107,40232,26658,33541,33841,31909,21e3,33477,29926,20094,20355,20896,23506,21002,21208,21223,24059,21914,22570,23014,23436,23448,23515,24178,24185,24739,24863,24931,25022,25563,25954,26577,26707,26874,27454,27475,27735,28450,28567,28485,29872,29976,30435,30475,31487,31649,31777,32233,32566,32752,32925,33382,33694,35251,35532,36011,36996,37969,38291,38289,38306,38501,38867,39208,33304,20024,21547,23736,24012,29609,30284,30524,23721,32747,36107,38593,38929,38996,39e3,20225,20238,21361,21916,22120,22522,22855,23305,23492,23696,24076,24190,24524,25582,26426,26071,26082,26399,26827,26820,27231,24112,27589,27671,27773,30079,31048,23395,31232,32e3,24509,35215,35352,36020,36215,36556,36637,39138,39438,39740,20096,20605,20736,22931,23452,25135,25216,25836,27450,29344,30097,31047,32681,34811,35516,35696,25516,33738,38816,21513,21507,21931,26708,27224,35440,30759,26485,40653,21364,23458,33050,34384,36870,19992,20037,20167,20241,21450,21560,23470,24339,24613,25937,26429,27714,27762,27875,28792,29699,31350,31406,31496,32026,31998,32102,26087,29275,21435,23621,24040,25298,25312,25369,28192,34394,35377,36317,37624,28417,31142,39770,20136,20139,20140,20379,20384,20689,20807,31478,20849,20982,21332,21281,21375,21483,21932,22659,23777,24375,24394,24623,24656,24685,25375,25945,27211,27841,29378,29421,30703,33016,33029,33288,34126,37111,37857,38911,39255,39514,20208,20957,23597,26241,26989,23616,26354,26997,29577,26704,31873,20677,21220,22343,24062,37670,26020,27427,27453,29748,31105,31165,31563,32202,33465,33740,34943,35167,35641,36817,37329,21535,37504,20061,20534,21477,21306,29399,29590,30697,33510,36527,39366,39368,39378,20855,24858,34398,21936,31354,20598,23507,36935,38533,20018,27355,37351,23633,23624,25496,31391,27795,38772,36705,31402,29066,38536,31874,26647,32368,26705,37740,21234,21531,34219,35347,32676,36557,37089,21350,34952,31041,20418,20670,21009,20804,21843,22317,29674,22411,22865,24418,24452,24693,24950,24935,25001,25522,25658,25964,26223,26690,28179,30054,31293,31995,32076,32153,32331,32619,33550,33610,34509,35336,35427,35686,36605,38938,40335,33464,36814,39912,21127,25119,25731,28608,38553,26689,20625,27424,27770,28500,31348,32080,34880,35363,26376,20214,20537,20518,20581,20860,21048,21091,21927,22287,22533,23244,24314,25010,25080,25331,25458,26908,27177,29309,29356,29486,30740,30831,32121,30476,32937,35211,35609,36066,36562,36963,37749,38522,38997,39443,40568,20803,21407,21427,24187,24358,28187,28304,29572,29694,32067,33335,35328,35578,38480,20046,20491,21476,21628,22266,22993,23396,24049,24235,24359,25144,25925,26543,28246,29392,31946,34996,32929,32993,33776,34382,35463,36328,37431,38599,39015,40723,20116,20114,20237,21320,21577,21566,23087,24460,24481,24735,26791,27278,29786,30849,35486,35492,35703,37264,20062,39881,20132,20348,20399,20505,20502,20809,20844,21151,21177,21246,21402,21475,21521,21518,21897,22353,22434,22909,23380,23389,23439,24037,24039,24055,24184,24195,24218,24247,24344,24658,24908,25239,25304,25511,25915,26114,26179,26356,26477,26657,26775,27083,27743,27946,28009,28207,28317,30002,30343,30828,31295,31968,32005,32024,32094,32177,32789,32771,32943,32945,33108,33167,33322,33618,34892,34913,35611,36002,36092,37066,37237,37489,30783,37628,38308,38477,38917,39321,39640,40251,21083,21163,21495,21512,22741,25335,28640,35946,36703,40633,20811,21051,21578,22269,31296,37239,40288,40658,29508,28425,33136,29969,24573,24794,39592,29403,36796,27492,38915,20170,22256,22372,22718,23130,24680,25031,26127,26118,26681,26801,28151,30165,32058,33390,39746,20123,20304,21449,21766,23919,24038,24046,26619,27801,29811,30722,35408,37782,35039,22352,24231,25387,20661,20652,20877,26368,21705,22622,22971,23472,24425,25165,25505,26685,27507,28168,28797,37319,29312,30741,30758,31085,25998,32048,33756,35009,36617,38555,21092,22312,26448,32618,36001,20916,22338,38442,22586,27018,32948,21682,23822,22524,30869,40442,20316,21066,21643,25662,26152,26388,26613,31364,31574,32034,37679,26716,39853,31545,21273,20874,21047,23519,25334,25774,25830,26413,27578,34217,38609,30352,39894,25420,37638,39851,30399,26194,19977,20632,21442,23665,24808,25746,25955,26719,29158,29642,29987,31639,32386,34453,35715,36059,37240,39184,26028,26283,27531,20181,20180,20282,20351,21050,21496,21490,21987,22235,22763,22987,22985,23039,23376,23629,24066,24107,24535,24605,25351,25903,23388,26031,26045,26088,26525,27490,27515,27663,29509,31049,31169,31992,32025,32043,32930,33026,33267,35222,35422,35433,35430,35468,35566,36039,36060,38604,39164,27503,20107,20284,20365,20816,23383,23546,24904,25345,26178,27425,28363,27835,29246,29885,30164,30913,31034,32780,32819,33258,33940,36766,27728,40575,24335,35672,40235,31482,36600,23437,38635,19971,21489,22519,22833,23241,23460,24713,28287,28422,30142,36074,23455,34048,31712,20594,26612,33437,23649,34122,32286,33294,20889,23556,25448,36198,26012,29038,31038,32023,32773,35613,36554,36974,34503,37034,20511,21242,23610,26451,28796,29237,37196,37320,37675,33509,23490,24369,24825,20027,21462,23432,25163,26417,27530,29417,29664,31278,33131,36259,37202,39318,20754,21463,21610,23551,25480,27193,32172,38656,22234,21454,21608,23447,23601,24030,20462,24833,25342,27954,31168,31179,32066,32333,32722,33261,33311,33936,34886,35186,35728,36468,36655,36913,37195,37228,38598,37276,20160,20303,20805,21313,24467,25102,26580,27713,28171,29539,32294,37325,37507,21460,22809,23487,28113,31069,32302,31899,22654,29087,20986,34899,36848,20426,23803,26149,30636,31459,33308,39423,20934,24490,26092,26991,27529,28147,28310,28516,30462,32020,24033,36981,37255,38918,20966,21021,25152,26257,26329,28186,24246,32210,32626,26360,34223,34295,35576,21161,21465,22899,24207,24464,24661,37604,38500,20663,20767,21213,21280,21319,21484,21736,21830,21809,22039,22888,22974,23100,23477,23558,23567,23569,23578,24196,24202,24288,24432,25215,25220,25307,25484,25463,26119,26124,26157,26230,26494,26786,27167,27189,27836,28040,28169,28248,28988,28966,29031,30151,30465,30813,30977,31077,31216,31456,31505,31911,32057,32918,33750,33931,34121,34909,35059,35359,35388,35412,35443,35937,36062,37284,37478,37758,37912,38556,38808,19978,19976,19998,20055,20887,21104,22478,22580,22732,23330,24120,24773,25854,26465,26454,27972,29366,30067,31331,33976,35698,37304,37664,22065,22516,39166,25325,26893,27542,29165,32340,32887,33394,35302,39135,34645,36785,23611,20280,20449,20405,21767,23072,23517,23529,24515,24910,25391,26032,26187,26862,27035,28024,28145,30003,30137,30495,31070,31206,32051,33251,33455,34218,35242,35386,36523,36763,36914,37341,38663,20154,20161,20995,22645,22764,23563,29978,23613,33102,35338,36805,38499,38765,31525,35535,38920,37218,22259,21416,36887,21561,22402,24101,25512,27700,28810,30561,31883,32736,34928,36930,37204,37648,37656,38543,29790,39620,23815,23913,25968,26530,36264,38619,25454,26441,26905,33733,38935,38592,35070,28548,25722,23544,19990,28716,30045,26159,20932,21046,21218,22995,24449,24615,25104,25919,25972,26143,26228,26866,26646,27491,28165,29298,29983,30427,31934,32854,22768,35069,35199,35488,35475,35531,36893,37266,38738,38745,25993,31246,33030,38587,24109,24796,25114,26021,26132,26512,30707,31309,31821,32318,33034,36012,36196,36321,36447,30889,20999,25305,25509,25666,25240,35373,31363,31680,35500,38634,32118,33292,34633,20185,20808,21315,21344,23459,23554,23574,24029,25126,25159,25776,26643,26676,27849,27973,27927,26579,28508,29006,29053,26059,31359,31661,32218,32330,32680,33146,33307,33337,34214,35438,36046,36341,36984,36983,37549,37521,38275,39854,21069,21892,28472,28982,20840,31109,32341,33203,31950,22092,22609,23720,25514,26366,26365,26970,29401,30095,30094,30990,31062,31199,31895,32032,32068,34311,35380,38459,36961,40736,20711,21109,21452,21474,20489,21930,22766,22863,29245,23435,23652,21277,24803,24819,25436,25475,25407,25531,25805,26089,26361,24035,27085,27133,28437,29157,20105,30185,30456,31379,31967,32207,32156,32865,33609,33624,33900,33980,34299,35013,36208,36865,36973,37783,38684,39442,20687,22679,24974,33235,34101,36104,36896,20419,20596,21063,21363,24687,25417,26463,28204,36275,36895,20439,23646,36042,26063,32154,21330,34966,20854,25539,23384,23403,23562,25613,26449,36956,20182,22810,22826,27760,35409,21822,22549,22949,24816,25171,26561,33333,26965,38464,39364,39464,20307,22534,23550,32784,23729,24111,24453,24608,24907,25140,26367,27888,28382,32974,33151,33492,34955,36024,36864,36910,38538,40667,39899,20195,21488,22823,31532,37261,38988,40441,28381,28711,21331,21828,23429,25176,25246,25299,27810,28655,29730,35351,37944,28609,35582,33592,20967,34552,21482,21481,20294,36948,36784,22890,33073,24061,31466,36799,26842,35895,29432,40008,27197,35504,20025,21336,22022,22374,25285,25506,26086,27470,28129,28251,28845,30701,31471,31658,32187,32829,32966,34507,35477,37723,22243,22727,24382,26029,26262,27264,27573,30007,35527,20516,30693,22320,24347,24677,26234,27744,30196,31258,32622,33268,34584,36933,39347,31689,30044,31481,31569,33988,36880,31209,31378,33590,23265,30528,20013,20210,23449,24544,25277,26172,26609,27880,34411,34935,35387,37198,37619,39376,27159,28710,29482,33511,33879,36015,19969,20806,20939,21899,23541,24086,24115,24193,24340,24373,24427,24500,25074,25361,26274,26397,28526,29266,30010,30522,32884,33081,33144,34678,35519,35548,36229,36339,37530,38263,38914,40165,21189,25431,30452,26389,27784,29645,36035,37806,38515,27941,22684,26894,27084,36861,37786,30171,36890,22618,26626,25524,27131,20291,28460,26584,36795,34086,32180,37716,26943,28528,22378,22775,23340,32044,29226,21514,37347,40372,20141,20302,20572,20597,21059,35998,21576,22564,23450,24093,24213,24237,24311,24351,24716,25269,25402,25552,26799,27712,30855,31118,31243,32224,33351,35330,35558,36420,36883,37048,37165,37336,40718,27877,25688,25826,25973,28404,30340,31515,36969,37841,28346,21746,24505,25764,36685,36845,37444,20856,22635,22825,23637,24215,28155,32399,29980,36028,36578,39003,28857,20253,27583,28593,3e4,38651,20814,21520,22581,22615,22956,23648,24466,26007,26460,28193,30331,33759,36077,36884,37117,37709,30757,30778,21162,24230,22303,22900,24594,20498,20826,20908,20941,20992,21776,22612,22616,22871,23445,23798,23947,24764,25237,25645,26481,26691,26812,26847,30423,28120,28271,28059,28783,29128,24403,30168,31095,31561,31572,31570,31958,32113,21040,33891,34153,34276,35342,35588,35910,36367,36867,36879,37913,38518,38957,39472,38360,20685,21205,21516,22530,23566,24999,25758,27934,30643,31461,33012,33796,36947,37509,23776,40199,21311,24471,24499,28060,29305,30563,31167,31716,27602,29420,35501,26627,27233,20984,31361,26932,23626,40182,33515,23493,37193,28702,22136,23663,24775,25958,27788,35930,36929,38931,21585,26311,37389,22856,37027,20869,20045,20970,34201,35598,28760,25466,37707,26978,39348,32260,30071,21335,26976,36575,38627,27741,20108,23612,24336,36841,21250,36049,32905,34425,24319,26085,20083,20837,22914,23615,38894,20219,22922,24525,35469,28641,31152,31074,23527,33905,29483,29105,24180,24565,25467,25754,29123,31896,20035,24316,20043,22492,22178,24745,28611,32013,33021,33075,33215,36786,35223,34468,24052,25226,25773,35207,26487,27874,27966,29750,30772,23110,32629,33453,39340,20467,24259,25309,25490,25943,26479,30403,29260,32972,32954,36649,37197,20493,22521,23186,26757,26995,29028,29437,36023,22770,36064,38506,36889,34687,31204,30695,33833,20271,21093,21338,25293,26575,27850,30333,31636,31893,33334,34180,36843,26333,28448,29190,32283,33707,39361,40614,20989,31665,30834,31672,32903,31560,27368,24161,32908,30033,30048,20843,37474,28300,30330,37271,39658,20240,32624,25244,31567,38309,40169,22138,22617,34532,38588,20276,21028,21322,21453,21467,24070,25644,26001,26495,27710,27726,29256,29359,29677,30036,32321,33324,34281,36009,31684,37318,29033,38930,39151,25405,26217,30058,30436,30928,34115,34542,21290,21329,21542,22915,24199,24444,24754,25161,25209,25259,26e3,27604,27852,30130,30382,30865,31192,32203,32631,32933,34987,35513,36027,36991,38750,39131,27147,31800,20633,23614,24494,26503,27608,29749,30473,32654,40763,26570,31255,21305,30091,39661,24422,33181,33777,32920,24380,24517,30050,31558,36924,26727,23019,23195,32016,30334,35628,20469,24426,27161,27703,28418,29922,31080,34920,35413,35961,24287,25551,30149,31186,33495,37672,37618,33948,34541,39981,21697,24428,25996,27996,28693,36007,36051,38971,25935,29942,19981,20184,22496,22827,23142,23500,20904,24067,24220,24598,25206,25975,26023,26222,28014,29238,31526,33104,33178,33433,35676,36e3,36070,36212,38428,38468,20398,25771,27494,33310,33889,34154,37096,23553,26963,39080,33914,34135,20239,21103,24489,24133,26381,31119,33145,35079,35206,28149,24343,25173,27832,20175,29289,39826,20998,21563,22132,22707,24996,25198,28954,22894,31881,31966,32027,38640,25991,32862,19993,20341,20853,22592,24163,24179,24330,26564,20006,34109,38281,38491,31859,38913,20731,22721,30294,30887,21029,30629,34065,31622,20559,22793,29255,31687,32232,36794,36820,36941,20415,21193,23081,24321,38829,20445,33303,37610,22275,25429,27497,29995,35036,36628,31298,21215,22675,24917,25098,26286,27597,31807,33769,20515,20472,21253,21574,22577,22857,23453,23792,23791,23849,24214,25265,25447,25918,26041,26379,27861,27873,28921,30770,32299,32990,33459,33804,34028,34562,35090,35370,35914,37030,37586,39165,40179,40300,20047,20129,20621,21078,22346,22952,24125,24536,24537,25151,26292,26395,26576,26834,20882,32033,32938,33192,35584,35980,36031,37502,38450,21536,38956,21271,20693,21340,22696,25778,26420,29287,30566,31302,37350,21187,27809,27526,22528,24140,22868,26412,32763,20961,30406,25705,30952,39764,40635,22475,22969,26151,26522,27598,21737,27097,24149,33180,26517,39850,26622,40018,26717,20134,20451,21448,25273,26411,27819,36804,20397,32365,40639,19975,24930,28288,28459,34067,21619,26410,39749,24051,31637,23724,23494,34588,28234,34001,31252,33032,22937,31885,27665,30496,21209,22818,28961,29279,30683,38695,40289,26891,23167,23064,20901,21517,21629,26126,30431,36855,37528,40180,23018,29277,28357,20813,26825,32191,32236,38754,40634,25720,27169,33538,22916,23391,27611,29467,30450,32178,32791,33945,20786,26408,40665,30446,26466,21247,39173,23588,25147,31870,36016,21839,24758,32011,38272,21249,20063,20918,22812,29242,32822,37326,24357,30690,21380,24441,32004,34220,35379,36493,38742,26611,34222,37971,24841,24840,27833,30290,35565,36664,21807,20305,20778,21191,21451,23461,24189,24736,24962,25558,26377,26586,28263,28044,29494,29495,30001,31056,35029,35480,36938,37009,37109,38596,34701,22805,20104,20313,19982,35465,36671,38928,20653,24188,22934,23481,24248,25562,25594,25793,26332,26954,27096,27915,28342,29076,29992,31407,32650,32768,33865,33993,35201,35617,36362,36965,38525,39178,24958,25233,27442,27779,28020,32716,32764,28096,32645,34746,35064,26469,33713,38972,38647,27931,32097,33853,37226,20081,21365,23888,27396,28651,34253,34349,35239,21033,21519,23653,26446,26792,29702,29827,30178,35023,35041,37324,38626,38520,24459,29575,31435,33870,25504,30053,21129,27969,28316,29705,30041,30827,31890,38534,31452,40845,20406,24942,26053,34396,20102,20142,20698,20001,20940,23534,26009,26753,28092,29471,30274,30637,31260,31975,33391,35538,36988,37327,38517,38936,21147,32209,20523,21400,26519,28107,29136,29747,33256,36650,38563,40023,40607,29792,22593,28057,32047,39006,20196,20278,20363,20919,21169,23994,24604,29618,31036,33491,37428,38583,38646,38666,40599,40802,26278,27508,21015,21155,28872,35010,24265,24651,24976,28451,29001,31806,32244,32879,34030,36899,37676,21570,39791,27347,28809,36034,36335,38706,21172,23105,24266,24324,26391,27004,27028,28010,28431,29282,29436,31725,32769,32894,34635,37070,20845,40595,31108,32907,37682,35542,20525,21644,35441,27498,36036,33031,24785,26528,40434,20121,20120,39952,35435,34241,34152,26880,28286,30871,33109,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24332,19984,19989,20010,20017,20022,20028,20031,20034,20054,20056,20098,20101,35947,20106,33298,24333,20110,20126,20127,20128,20130,20144,20147,20150,20174,20173,20164,20166,20162,20183,20190,20205,20191,20215,20233,20314,20272,20315,20317,20311,20295,20342,20360,20367,20376,20347,20329,20336,20369,20335,20358,20374,20760,20436,20447,20430,20440,20443,20433,20442,20432,20452,20453,20506,20520,20500,20522,20517,20485,20252,20470,20513,20521,20524,20478,20463,20497,20486,20547,20551,26371,20565,20560,20552,20570,20566,20588,20600,20608,20634,20613,20660,20658,20681,20682,20659,20674,20694,20702,20709,20717,20707,20718,20729,20725,20745,20737,20738,20758,20757,20756,20762,20769,20794,20791,20796,20795,20799,20800,20818,20812,20820,20834,31480,20841,20842,20846,20864,20866,22232,20876,20873,20879,20881,20883,20885,20886,20900,20902,20898,20905,20906,20907,20915,20913,20914,20912,20917,20925,20933,20937,20955,20960,34389,20969,20973,20976,20981,20990,20996,21003,21012,21006,21031,21034,21038,21043,21049,21071,21060,21067,21068,21086,21076,21098,21108,21097,21107,21119,21117,21133,21140,21138,21105,21128,21137,36776,36775,21164,21165,21180,21173,21185,21197,21207,21214,21219,21222,39149,21216,21235,21237,21240,21241,21254,21256,30008,21261,21264,21263,21269,21274,21283,21295,21297,21299,21304,21312,21318,21317,19991,21321,21325,20950,21342,21353,21358,22808,21371,21367,21378,21398,21408,21414,21413,21422,21424,21430,21443,31762,38617,21471,26364,29166,21486,21480,21485,21498,21505,21565,21568,21548,21549,21564,21550,21558,21545,21533,21582,21647,21621,21646,21599,21617,21623,21616,21650,21627,21632,21622,21636,21648,21638,21703,21666,21688,21669,21676,21700,21704,21672,21675,21698,21668,21694,21692,21720,21733,21734,21775,21780,21757,21742,21741,21754,21730,21817,21824,21859,21836,21806,21852,21829,21846,21847,21816,21811,21853,21913,21888,21679,21898,21919,21883,21886,21912,21918,21934,21884,21891,21929,21895,21928,21978,21957,21983,21956,21980,21988,21972,22036,22007,22038,22014,22013,22043,22009,22094,22096,29151,22068,22070,22066,22072,22123,22116,22063,22124,22122,22150,22144,22154,22176,22164,22159,22181,22190,22198,22196,22210,22204,22209,22211,22208,22216,22222,22225,22227,22231,22254,22265,22272,22271,22276,22281,22280,22283,22285,22291,22296,22294,21959,22300,22310,22327,22328,22350,22331,22336,22351,22377,22464,22408,22369,22399,22409,22419,22432,22451,22436,22442,22448,22467,22470,22484,22482,22483,22538,22486,22499,22539,22553,22557,22642,22561,22626,22603,22640,27584,22610,22589,22649,22661,22713,22687,22699,22714,22750,22715,22712,22702,22725,22739,22737,22743,22745,22744,22757,22748,22756,22751,22767,22778,22777,22779,22780,22781,22786,22794,22800,22811,26790,22821,22828,22829,22834,22840,22846,31442,22869,22864,22862,22874,22872,22882,22880,22887,22892,22889,22904,22913,22941,20318,20395,22947,22962,22982,23016,23004,22925,23001,23002,23077,23071,23057,23068,23049,23066,23104,23148,23113,23093,23094,23138,23146,23194,23228,23230,23243,23234,23229,23267,23255,23270,23273,23254,23290,23291,23308,23307,23318,23346,23248,23338,23350,23358,23363,23365,23360,23377,23381,23386,23387,23397,23401,23408,23411,23413,23416,25992,23418,23424,23427,23462,23480,23491,23495,23497,23508,23504,23524,23526,23522,23518,23525,23531,23536,23542,23539,23557,23559,23560,23565,23571,23584,23586,23592,23608,23609,23617,23622,23630,23635,23632,23631,23409,23660,23662,20066,23670,23673,23692,23697,23700,22939,23723,23739,23734,23740,23735,23749,23742,23751,23769,23785,23805,23802,23789,23948,23786,23819,23829,23831,23900,23839,23835,23825,23828,23842,23834,23833,23832,23884,23890,23886,23883,23916,23923,23926,23943,23940,23938,23970,23965,23980,23982,23997,23952,23991,23996,24009,24013,24019,24018,24022,24027,24043,24050,24053,24075,24090,24089,24081,24091,24118,24119,24132,24131,24128,24142,24151,24148,24159,24162,24164,24135,24181,24182,24186,40636,24191,24224,24257,24258,24264,24272,24271,24278,24291,24285,24282,24283,24290,24289,24296,24297,24300,24305,24307,24304,24308,24312,24318,24323,24329,24413,24412,24331,24337,24342,24361,24365,24376,24385,24392,24396,24398,24367,24401,24406,24407,24409,24417,24429,24435,24439,24451,24450,24447,24458,24456,24465,24455,24478,24473,24472,24480,24488,24493,24508,24534,24571,24548,24568,24561,24541,24755,24575,24609,24672,24601,24592,24617,24590,24625,24603,24597,24619,24614,24591,24634,24666,24641,24682,24695,24671,24650,24646,24653,24675,24643,24676,24642,24684,24683,24665,24705,24717,24807,24707,24730,24708,24731,24726,24727,24722,24743,24715,24801,24760,24800,24787,24756,24560,24765,24774,24757,24792,24909,24853,24838,24822,24823,24832,24820,24826,24835,24865,24827,24817,24845,24846,24903,24894,24872,24871,24906,24895,24892,24876,24884,24893,24898,24900,24947,24951,24920,24921,24922,24939,24948,24943,24933,24945,24927,24925,24915,24949,24985,24982,24967,25004,24980,24986,24970,24977,25003,25006,25036,25034,25033,25079,25032,25027,25030,25018,25035,32633,25037,25062,25059,25078,25082,25076,25087,25085,25084,25086,25088,25096,25097,25101,25100,25108,25115,25118,25121,25130,25134,25136,25138,25139,25153,25166,25182,25187,25179,25184,25192,25212,25218,25225,25214,25234,25235,25238,25300,25219,25236,25303,25297,25275,25295,25343,25286,25812,25288,25308,25292,25290,25282,25287,25243,25289,25356,25326,25329,25383,25346,25352,25327,25333,25424,25406,25421,25628,25423,25494,25486,25472,25515,25462,25507,25487,25481,25503,25525,25451,25449,25534,25577,25536,25542,25571,25545,25554,25590,25540,25622,25652,25606,25619,25638,25654,25885,25623,25640,25615,25703,25711,25718,25678,25898,25749,25747,25765,25769,25736,25788,25818,25810,25797,25799,25787,25816,25794,25841,25831,33289,25824,25825,25260,25827,25839,25900,25846,25844,25842,25850,25856,25853,25880,25884,25861,25892,25891,25899,25908,25909,25911,25910,25912,30027,25928,25942,25941,25933,25944,25950,25949,25970,25976,25986,25987,35722,26011,26015,26027,26039,26051,26054,26049,26052,26060,26066,26075,26073,26080,26081,26097,26482,26122,26115,26107,26483,26165,26166,26164,26140,26191,26180,26185,26177,26206,26205,26212,26215,26216,26207,26210,26224,26243,26248,26254,26249,26244,26264,26269,26305,26297,26313,26302,26300,26308,26296,26326,26330,26336,26175,26342,26345,26352,26357,26359,26383,26390,26398,26406,26407,38712,26414,26431,26422,26433,26424,26423,26438,26462,26464,26457,26467,26468,26505,26480,26537,26492,26474,26508,26507,26534,26529,26501,26551,26607,26548,26604,26547,26601,26552,26596,26590,26589,26594,26606,26553,26574,26566,26599,27292,26654,26694,26665,26688,26701,26674,26702,26803,26667,26713,26723,26743,26751,26783,26767,26797,26772,26781,26779,26755,27310,26809,26740,26805,26784,26810,26895,26765,26750,26881,26826,26888,26840,26914,26918,26849,26892,26829,26836,26855,26837,26934,26898,26884,26839,26851,26917,26873,26848,26863,26920,26922,26906,26915,26913,26822,27001,26999,26972,27e3,26987,26964,27006,26990,26937,26996,26941,26969,26928,26977,26974,26973,27009,26986,27058,27054,27088,27071,27073,27091,27070,27086,23528,27082,27101,27067,27075,27047,27182,27025,27040,27036,27029,27060,27102,27112,27138,27163,27135,27402,27129,27122,27111,27141,27057,27166,27117,27156,27115,27146,27154,27329,27171,27155,27204,27148,27250,27190,27256,27207,27234,27225,27238,27208,27192,27170,27280,27277,27296,27268,27298,27299,27287,34327,27323,27331,27330,27320,27315,27308,27358,27345,27359,27306,27354,27370,27387,27397,34326,27386,27410,27414,39729,27423,27448,27447,30428,27449,39150,27463,27459,27465,27472,27481,27476,27483,27487,27489,27512,27513,27519,27520,27524,27523,27533,27544,27541,27550,27556,27562,27563,27567,27570,27569,27571,27575,27580,27590,27595,27603,27615,27628,27627,27635,27631,40638,27656,27667,27668,27675,27684,27683,27742,27733,27746,27754,27778,27789,27802,27777,27803,27774,27752,27763,27794,27792,27844,27889,27859,27837,27863,27845,27869,27822,27825,27838,27834,27867,27887,27865,27882,27935,34893,27958,27947,27965,27960,27929,27957,27955,27922,27916,28003,28051,28004,27994,28025,27993,28046,28053,28644,28037,28153,28181,28170,28085,28103,28134,28088,28102,28140,28126,28108,28136,28114,28101,28154,28121,28132,28117,28138,28142,28205,28270,28206,28185,28274,28255,28222,28195,28267,28203,28278,28237,28191,28227,28218,28238,28196,28415,28189,28216,28290,28330,28312,28361,28343,28371,28349,28335,28356,28338,28372,28373,28303,28325,28354,28319,28481,28433,28748,28396,28408,28414,28479,28402,28465,28399,28466,28364,28478,28435,28407,28550,28538,28536,28545,28544,28527,28507,28659,28525,28546,28540,28504,28558,28561,28610,28518,28595,28579,28577,28580,28601,28614,28586,28639,28629,28652,28628,28632,28657,28654,28635,28681,28683,28666,28689,28673,28687,28670,28699,28698,28532,28701,28696,28703,28720,28734,28722,28753,28771,28825,28818,28847,28913,28844,28856,28851,28846,28895,28875,28893,28889,28937,28925,28956,28953,29029,29013,29064,29030,29026,29004,29014,29036,29071,29179,29060,29077,29096,29100,29143,29113,29118,29138,29129,29140,29134,29152,29164,29159,29173,29180,29177,29183,29197,29200,29211,29224,29229,29228,29232,29234,29243,29244,29247,29248,29254,29259,29272,29300,29310,29314,29313,29319,29330,29334,29346,29351,29369,29362,29379,29382,29380,29390,29394,29410,29408,29409,29433,29431,20495,29463,29450,29468,29462,29469,29492,29487,29481,29477,29502,29518,29519,40664,29527,29546,29544,29552,29560,29557,29563,29562,29640,29619,29646,29627,29632,29669,29678,29662,29858,29701,29807,29733,29688,29746,29754,29781,29759,29791,29785,29761,29788,29801,29808,29795,29802,29814,29822,29835,29854,29863,29898,29903,29908,29681,29920,29923,29927,29929,29934,29938,29936,29937,29944,29943,29956,29955,29957,29964,29966,29965,29973,29971,29982,29990,29996,30012,30020,30029,30026,30025,30043,30022,30042,30057,30052,30055,30059,30061,30072,30070,30086,30087,30068,30090,30089,30082,30100,30106,30109,30117,30115,30146,30131,30147,30133,30141,30136,30140,30129,30157,30154,30162,30169,30179,30174,30206,30207,30204,30209,30192,30202,30194,30195,30219,30221,30217,30239,30247,30240,30241,30242,30244,30260,30256,30267,30279,30280,30278,30300,30296,30305,30306,30312,30313,30314,30311,30316,30320,30322,30326,30328,30332,30336,30339,30344,30347,30350,30358,30355,30361,30362,30384,30388,30392,30393,30394,30402,30413,30422,30418,30430,30433,30437,30439,30442,34351,30459,30472,30471,30468,30505,30500,30494,30501,30502,30491,30519,30520,30535,30554,30568,30571,30555,30565,30591,30590,30585,30606,30603,30609,30624,30622,30640,30646,30649,30655,30652,30653,30651,30663,30669,30679,30682,30684,30691,30702,30716,30732,30738,31014,30752,31018,30789,30862,30836,30854,30844,30874,30860,30883,30901,30890,30895,30929,30918,30923,30932,30910,30908,30917,30922,30956,30951,30938,30973,30964,30983,30994,30993,31001,31020,31019,31040,31072,31063,31071,31066,31061,31059,31098,31103,31114,31133,31143,40779,31146,31150,31155,31161,31162,31177,31189,31207,31212,31201,31203,31240,31245,31256,31257,31264,31263,31104,31281,31291,31294,31287,31299,31319,31305,31329,31330,31337,40861,31344,31353,31357,31368,31383,31381,31384,31382,31401,31432,31408,31414,31429,31428,31423,36995,31431,31434,31437,31439,31445,31443,31449,31450,31453,31457,31458,31462,31469,31472,31490,31503,31498,31494,31539,31512,31513,31518,31541,31528,31542,31568,31610,31492,31565,31499,31564,31557,31605,31589,31604,31591,31600,31601,31596,31598,31645,31640,31647,31629,31644,31642,31627,31634,31631,31581,31641,31691,31681,31692,31695,31668,31686,31709,31721,31761,31764,31718,31717,31840,31744,31751,31763,31731,31735,31767,31757,31734,31779,31783,31786,31775,31799,31787,31805,31820,31811,31828,31823,31808,31824,31832,31839,31844,31830,31845,31852,31861,31875,31888,31908,31917,31906,31915,31905,31912,31923,31922,31921,31918,31929,31933,31936,31941,31938,31960,31954,31964,31970,39739,31983,31986,31988,31990,31994,32006,32002,32028,32021,32010,32069,32075,32046,32050,32063,32053,32070,32115,32086,32078,32114,32104,32110,32079,32099,32147,32137,32091,32143,32125,32155,32186,32174,32163,32181,32199,32189,32171,32317,32162,32175,32220,32184,32159,32176,32216,32221,32228,32222,32251,32242,32225,32261,32266,32291,32289,32274,32305,32287,32265,32267,32290,32326,32358,32315,32309,32313,32323,32311,32306,32314,32359,32349,32342,32350,32345,32346,32377,32362,32361,32380,32379,32387,32213,32381,36782,32383,32392,32393,32396,32402,32400,32403,32404,32406,32398,32411,32412,32568,32570,32581,32588,32589,32590,32592,32593,32597,32596,32600,32607,32608,32616,32617,32615,32632,32642,32646,32643,32648,32647,32652,32660,32670,32669,32666,32675,32687,32690,32697,32686,32694,32696,35697,32709,32710,32714,32725,32724,32737,32742,32745,32755,32761,39132,32774,32772,32779,32786,32792,32793,32796,32801,32808,32831,32827,32842,32838,32850,32856,32858,32863,32866,32872,32883,32882,32880,32886,32889,32893,32895,32900,32902,32901,32923,32915,32922,32941,20880,32940,32987,32997,32985,32989,32964,32986,32982,33033,33007,33009,33051,33065,33059,33071,33099,38539,33094,33086,33107,33105,33020,33137,33134,33125,33126,33140,33155,33160,33162,33152,33154,33184,33173,33188,33187,33119,33171,33193,33200,33205,33214,33208,33213,33216,33218,33210,33225,33229,33233,33241,33240,33224,33242,33247,33248,33255,33274,33275,33278,33281,33282,33285,33287,33290,33293,33296,33302,33321,33323,33336,33331,33344,33369,33368,33373,33370,33375,33380,33378,33384,33386,33387,33326,33393,33399,33400,33406,33421,33426,33451,33439,33467,33452,33505,33507,33503,33490,33524,33523,33530,33683,33539,33531,33529,33502,33542,33500,33545,33497,33589,33588,33558,33586,33585,33600,33593,33616,33605,33583,33579,33559,33560,33669,33690,33706,33695,33698,33686,33571,33678,33671,33674,33660,33717,33651,33653,33696,33673,33704,33780,33811,33771,33742,33789,33795,33752,33803,33729,33783,33799,33760,33778,33805,33826,33824,33725,33848,34054,33787,33901,33834,33852,34138,33924,33911,33899,33965,33902,33922,33897,33862,33836,33903,33913,33845,33994,33890,33977,33983,33951,34009,33997,33979,34010,34e3,33985,33990,34006,33953,34081,34047,34036,34071,34072,34092,34079,34069,34068,34044,34112,34147,34136,34120,34113,34306,34123,34133,34176,34212,34184,34193,34186,34216,34157,34196,34203,34282,34183,34204,34167,34174,34192,34249,34234,34255,34233,34256,34261,34269,34277,34268,34297,34314,34323,34315,34302,34298,34310,34338,34330,34352,34367,34381,20053,34388,34399,34407,34417,34451,34467,34473,34474,34443,34444,34486,34479,34500,34502,34480,34505,34851,34475,34516,34526,34537,34540,34527,34523,34543,34578,34566,34568,34560,34563,34555,34577,34569,34573,34553,34570,34612,34623,34615,34619,34597,34601,34586,34656,34655,34680,34636,34638,34676,34647,34664,34670,34649,34643,34659,34666,34821,34722,34719,34690,34735,34763,34749,34752,34768,38614,34731,34756,34739,34759,34758,34747,34799,34802,34784,34831,34829,34814,34806,34807,34830,34770,34833,34838,34837,34850,34849,34865,34870,34873,34855,34875,34884,34882,34898,34905,34910,34914,34923,34945,34942,34974,34933,34941,34997,34930,34946,34967,34962,34990,34969,34978,34957,34980,34992,35007,34993,35011,35012,35028,35032,35033,35037,35065,35074,35068,35060,35048,35058,35076,35084,35082,35091,35139,35102,35109,35114,35115,35137,35140,35131,35126,35128,35148,35101,35168,35166,35174,35172,35181,35178,35183,35188,35191,35198,35203,35208,35210,35219,35224,35233,35241,35238,35244,35247,35250,35258,35261,35263,35264,35290,35292,35293,35303,35316,35320,35331,35350,35344,35340,35355,35357,35365,35382,35393,35419,35410,35398,35400,35452,35437,35436,35426,35461,35458,35460,35496,35489,35473,35493,35494,35482,35491,35524,35533,35522,35546,35563,35571,35559,35556,35569,35604,35552,35554,35575,35550,35547,35596,35591,35610,35553,35606,35600,35607,35616,35635,38827,35622,35627,35646,35624,35649,35660,35663,35662,35657,35670,35675,35674,35691,35679,35692,35695,35700,35709,35712,35724,35726,35730,35731,35734,35737,35738,35898,35905,35903,35912,35916,35918,35920,35925,35938,35948,35960,35962,35970,35977,35973,35978,35981,35982,35988,35964,35992,25117,36013,36010,36029,36018,36019,36014,36022,36040,36033,36068,36067,36058,36093,36090,36091,36100,36101,36106,36103,36111,36109,36112,40782,36115,36045,36116,36118,36199,36205,36209,36211,36225,36249,36290,36286,36282,36303,36314,36310,36300,36315,36299,36330,36331,36319,36323,36348,36360,36361,36351,36381,36382,36368,36383,36418,36405,36400,36404,36426,36423,36425,36428,36432,36424,36441,36452,36448,36394,36451,36437,36470,36466,36476,36481,36487,36485,36484,36491,36490,36499,36497,36500,36505,36522,36513,36524,36528,36550,36529,36542,36549,36552,36555,36571,36579,36604,36603,36587,36606,36618,36613,36629,36626,36633,36627,36636,36639,36635,36620,36646,36659,36667,36665,36677,36674,36670,36684,36681,36678,36686,36695,36700,36706,36707,36708,36764,36767,36771,36781,36783,36791,36826,36837,36834,36842,36847,36999,36852,36869,36857,36858,36881,36885,36897,36877,36894,36886,36875,36903,36918,36917,36921,36856,36943,36944,36945,36946,36878,36937,36926,36950,36952,36958,36968,36975,36982,38568,36978,36994,36989,36993,36992,37002,37001,37007,37032,37039,37041,37045,37090,37092,25160,37083,37122,37138,37145,37170,37168,37194,37206,37208,37219,37221,37225,37235,37234,37259,37257,37250,37282,37291,37295,37290,37301,37300,37306,37312,37313,37321,37323,37328,37334,37343,37345,37339,37372,37365,37366,37406,37375,37396,37420,37397,37393,37470,37463,37445,37449,37476,37448,37525,37439,37451,37456,37532,37526,37523,37531,37466,37583,37561,37559,37609,37647,37626,37700,37678,37657,37666,37658,37667,37690,37685,37691,37724,37728,37756,37742,37718,37808,37804,37805,37780,37817,37846,37847,37864,37861,37848,37827,37853,37840,37832,37860,37914,37908,37907,37891,37895,37904,37942,37931,37941,37921,37946,37953,37970,37956,37979,37984,37986,37982,37994,37417,38e3,38005,38007,38013,37978,38012,38014,38017,38015,38274,38279,38282,38292,38294,38296,38297,38304,38312,38311,38317,38332,38331,38329,38334,38346,28662,38339,38349,38348,38357,38356,38358,38364,38369,38373,38370,38433,38440,38446,38447,38466,38476,38479,38475,38519,38492,38494,38493,38495,38502,38514,38508,38541,38552,38549,38551,38570,38567,38577,38578,38576,38580,38582,38584,38585,38606,38603,38601,38605,35149,38620,38669,38613,38649,38660,38662,38664,38675,38670,38673,38671,38678,38681,38692,38698,38704,38713,38717,38718,38724,38726,38728,38722,38729,38748,38752,38756,38758,38760,21202,38763,38769,38777,38789,38780,38785,38778,38790,38795,38799,38800,38812,38824,38822,38819,38835,38836,38851,38854,38856,38859,38876,38893,40783,38898,31455,38902,38901,38927,38924,38968,38948,38945,38967,38973,38982,38991,38987,39019,39023,39024,39025,39028,39027,39082,39087,39089,39094,39108,39107,39110,39145,39147,39171,39177,39186,39188,39192,39201,39197,39198,39204,39200,39212,39214,39229,39230,39234,39241,39237,39248,39243,39249,39250,39244,39253,39319,39320,39333,39341,39342,39356,39391,39387,39389,39384,39377,39405,39406,39409,39410,39419,39416,39425,39439,39429,39394,39449,39467,39479,39493,39490,39488,39491,39486,39509,39501,39515,39511,39519,39522,39525,39524,39529,39531,39530,39597,39600,39612,39616,39631,39633,39635,39636,39646,39647,39650,39651,39654,39663,39659,39662,39668,39665,39671,39675,39686,39704,39706,39711,39714,39715,39717,39719,39720,39721,39722,39726,39727,39730,39748,39747,39759,39757,39758,39761,39768,39796,39827,39811,39825,39830,39831,39839,39840,39848,39860,39872,39882,39865,39878,39887,39889,39890,39907,39906,39908,39892,39905,39994,39922,39921,39920,39957,39956,39945,39955,39948,39942,39944,39954,39946,39940,39982,39963,39973,39972,39969,39984,40007,39986,40006,39998,40026,40032,40039,40054,40056,40167,40172,40176,40201,40200,40171,40195,40198,40234,40230,40367,40227,40223,40260,40213,40210,40257,40255,40254,40262,40264,40285,40286,40292,40273,40272,40281,40306,40329,40327,40363,40303,40314,40346,40356,40361,40370,40388,40385,40379,40376,40378,40390,40399,40386,40409,40403,40440,40422,40429,40431,40445,40474,40475,40478,40565,40569,40573,40577,40584,40587,40588,40594,40597,40593,40605,40613,40617,40632,40618,40621,38753,40652,40654,40655,40656,40660,40668,40670,40669,40672,40677,40680,40687,40692,40694,40695,40697,40699,40700,40701,40711,40712,30391,40725,40737,40748,40766,40778,40786,40788,40803,40799,40800,40801,40806,40807,40812,40810,40823,40818,40822,40853,40860,40864,22575,27079,36953,29796,20956,29081,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32394,35100,37704,37512,34012,20425,28859,26161,26824,37625,26363,24389,20008,20193,20220,20224,20227,20281,20310,20370,20362,20378,20372,20429,20544,20514,20479,20510,20550,20592,20546,20628,20724,20696,20810,20836,20893,20926,20972,21013,21148,21158,21184,21211,21248,21255,21284,21362,21395,21426,21469,64014,21660,21642,21673,21759,21894,22361,22373,22444,22472,22471,64015,64016,22686,22706,22795,22867,22875,22877,22883,22948,22970,23382,23488,29999,23512,23532,23582,23718,23738,23797,23847,23891,64017,23874,23917,23992,23993,24016,24353,24372,24423,24503,24542,24669,24709,24714,24798,24789,24864,24818,24849,24887,24880,24984,25107,25254,25589,25696,25757,25806,25934,26112,26133,26171,26121,26158,26142,26148,26213,26199,26201,64018,26227,26265,26272,26290,26303,26362,26382,63785,26470,26555,26706,26560,26625,26692,26831,64019,26984,64020,27032,27106,27184,27243,27206,27251,27262,27362,27364,27606,27711,27740,27782,27759,27866,27908,28039,28015,28054,28076,28111,28152,28146,28156,28217,28252,28199,28220,28351,28552,28597,28661,28677,28679,28712,28805,28843,28943,28932,29020,28998,28999,64021,29121,29182,29361,29374,29476,64022,29559,29629,29641,29654,29667,29650,29703,29685,29734,29738,29737,29742,29794,29833,29855,29953,30063,30338,30364,30366,30363,30374,64023,30534,21167,30753,30798,30820,30842,31024,64024,64025,64026,31124,64027,31131,31441,31463,64028,31467,31646,64029,32072,32092,32183,32160,32214,32338,32583,32673,64030,33537,33634,33663,33735,33782,33864,33972,34131,34137,34155,64031,34224,64032,64033,34823,35061,35346,35383,35449,35495,35518,35551,64034,35574,35667,35711,36080,36084,36114,36214,64035,36559,64036,64037,36967,37086,64038,37141,37159,37338,37335,37342,37357,37358,37348,37349,37382,37392,37386,37434,37440,37436,37454,37465,37457,37433,37479,37543,37495,37496,37607,37591,37593,37584,64039,37589,37600,37587,37669,37665,37627,64040,37662,37631,37661,37634,37744,37719,37796,37830,37854,37880,37937,37957,37960,38290,63964,64041,38557,38575,38707,38715,38723,38733,38735,38737,38741,38999,39013,64042,64043,39207,64044,39326,39502,39641,39644,39797,39794,39823,39857,39867,39936,40304,40299,64045,40473,40657,0,0,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,65506,65508,65287,65282,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,65506,65508,65287,65282,12849,8470,8481,8757,32394,35100,37704,37512,34012,20425,28859,26161,26824,37625,26363,24389,20008,20193,20220,20224,20227,20281,20310,20370,20362,20378,20372,20429,20544,20514,20479,20510,20550,20592,20546,20628,20724,20696,20810,20836,20893,20926,20972,21013,21148,21158,21184,21211,21248,21255,21284,21362,21395,21426,21469,64014,21660,21642,21673,21759,21894,22361,22373,22444,22472,22471,64015,64016,22686,22706,22795,22867,22875,22877,22883,22948,22970,23382,23488,29999,23512,23532,23582,23718,23738,23797,23847,23891,64017,23874,23917,23992,23993,24016,24353,24372,24423,24503,24542,24669,24709,24714,24798,24789,24864,24818,24849,24887,24880,24984,25107,25254,25589,25696,25757,25806,25934,26112,26133,26171,26121,26158,26142,26148,26213,26199,26201,64018,26227,26265,26272,26290,26303,26362,26382,63785,26470,26555,26706,26560,26625,26692,26831,64019,26984,64020,27032,27106,27184,27243,27206,27251,27262,27362,27364,27606,27711,27740,27782,27759,27866,27908,28039,28015,28054,28076,28111,28152,28146,28156,28217,28252,28199,28220,28351,28552,28597,28661,28677,28679,28712,28805,28843,28943,28932,29020,28998,28999,64021,29121,29182,29361,29374,29476,64022,29559,29629,29641,29654,29667,29650,29703,29685,29734,29738,29737,29742,29794,29833,29855,29953,30063,30338,30364,30366,30363,30374,64023,30534,21167,30753,30798,30820,30842,31024,64024,64025,64026,31124,64027,31131,31441,31463,64028,31467,31646,64029,32072,32092,32183,32160,32214,32338,32583,32673,64030,33537,33634,33663,33735,33782,33864,33972,34131,34137,34155,64031,34224,64032,64033,34823,35061,35346,35383,35449,35495,35518,35551,64034,35574,35667,35711,36080,36084,36114,36214,64035,36559,64036,64037,36967,37086,64038,37141,37159,37338,37335,37342,37357,37358,37348,37349,37382,37392,37386,37434,37440,37436,37454,37465,37457,37433,37479,37543,37495,37496,37607,37591,37593,37584,64039,37589,37600,37587,37669,37665,37627,64040,37662,37631,37661,37634,37744,37719,37796,37830,37854,37880,37937,37957,37960,38290,63964,64041,38557,38575,38707,38715,38723,38733,38735,38737,38741,38999,39013,64042,64043,39207,64044,39326,39502,39641,39644,39797,39794,39823,39857,39867,39936,40304,40299,64045,40473,40657,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],py=[12288,12289,12290,65292,65294,12539,65306,65307,65311,65281,12443,12444,180,65344,168,65342,65507,65343,12541,12542,12445,12446,12291,20189,12293,12294,12295,12540,8213,8208,65295,65340,65374,8741,65372,8230,8229,8216,8217,8220,8221,65288,65289,12308,12309,65339,65341,65371,65373,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,65291,65293,177,215,247,65309,8800,65308,65310,8806,8807,8734,8756,9794,9792,176,8242,8243,8451,65509,65284,65504,65505,65285,65283,65286,65290,65312,167,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,9661,9660,8251,12306,8594,8592,8593,8595,12307,0,0,0,0,0,0,0,0,0,0,0,8712,8715,8838,8839,8834,8835,8746,8745,0,0,0,0,0,0,0,0,8743,8744,65506,8658,8660,8704,8707,0,0,0,0,0,0,0,0,0,0,0,8736,8869,8978,8706,8711,8801,8786,8810,8811,8730,8765,8733,8757,8747,8748,0,0,0,0,0,0,0,8491,8240,9839,9837,9834,8224,8225,182,0,0,0,0,9711,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,0,0,0,0,0,0,0,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,0,0,0,0,0,0,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,0,0,0,0,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,0,0,0,0,0,0,0,0,0,0,0,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,0,0,0,0,0,0,0,0,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,0,0,0,0,0,0,0,0,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,0,0,0,0,0,0,0,0,0,0,0,0,0,9472,9474,9484,9488,9496,9492,9500,9516,9508,9524,9532,9473,9475,9487,9491,9499,9495,9507,9523,9515,9531,9547,9504,9519,9512,9527,9535,9501,9520,9509,9528,9538,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9322,9323,9324,9325,9326,9327,9328,9329,9330,9331,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,0,13129,13076,13090,13133,13080,13095,13059,13110,13137,13143,13069,13094,13091,13099,13130,13115,13212,13213,13214,13198,13199,13252,13217,0,0,0,0,0,0,0,0,13179,12317,12319,8470,13261,8481,12964,12965,12966,12967,12968,12849,12850,12857,13182,13181,13180,8786,8801,8747,8750,8721,8730,8869,8736,8735,8895,8757,8745,8746,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20124,21782,23043,38463,21696,24859,25384,23030,36898,33909,33564,31312,24746,25569,28197,26093,33894,33446,39925,26771,22311,26017,25201,23451,22992,34427,39156,32098,32190,39822,25110,31903,34999,23433,24245,25353,26263,26696,38343,38797,26447,20197,20234,20301,20381,20553,22258,22839,22996,23041,23561,24799,24847,24944,26131,26885,28858,30031,30064,31227,32173,32239,32963,33806,34915,35586,36949,36986,21307,20117,20133,22495,32946,37057,30959,19968,22769,28322,36920,31282,33576,33419,39983,20801,21360,21693,21729,22240,23035,24341,39154,28139,32996,34093,38498,38512,38560,38907,21515,21491,23431,28879,32701,36802,38632,21359,40284,31418,19985,30867,33276,28198,22040,21764,27421,34074,39995,23013,21417,28006,29916,38287,22082,20113,36939,38642,33615,39180,21473,21942,23344,24433,26144,26355,26628,27704,27891,27945,29787,30408,31310,38964,33521,34907,35424,37613,28082,30123,30410,39365,24742,35585,36234,38322,27022,21421,20870,22290,22576,22852,23476,24310,24616,25513,25588,27839,28436,28814,28948,29017,29141,29503,32257,33398,33489,34199,36960,37467,40219,22633,26044,27738,29989,20985,22830,22885,24448,24540,25276,26106,27178,27431,27572,29579,32705,35158,40236,40206,40644,23713,27798,33659,20740,23627,25014,33222,26742,29281,20057,20474,21368,24681,28201,31311,38899,19979,21270,20206,20309,20285,20385,20339,21152,21487,22025,22799,23233,23478,23521,31185,26247,26524,26550,27468,27827,28779,29634,31117,31166,31292,31623,33457,33499,33540,33655,33775,33747,34662,35506,22057,36008,36838,36942,38686,34442,20420,23784,25105,29273,30011,33253,33469,34558,36032,38597,39187,39381,20171,20250,35299,22238,22602,22730,24315,24555,24618,24724,24674,25040,25106,25296,25913,39745,26214,26800,28023,28784,30028,30342,32117,33445,34809,38283,38542,35997,20977,21182,22806,21683,23475,23830,24936,27010,28079,30861,33995,34903,35442,37799,39608,28012,39336,34521,22435,26623,34510,37390,21123,22151,21508,24275,25313,25785,26684,26680,27579,29554,30906,31339,35226,35282,36203,36611,37101,38307,38548,38761,23398,23731,27005,38989,38990,25499,31520,27179,27263,26806,39949,28511,21106,21917,24688,25324,27963,28167,28369,33883,35088,36676,19988,39993,21494,26907,27194,38788,26666,20828,31427,33970,37340,37772,22107,40232,26658,33541,33841,31909,21e3,33477,29926,20094,20355,20896,23506,21002,21208,21223,24059,21914,22570,23014,23436,23448,23515,24178,24185,24739,24863,24931,25022,25563,25954,26577,26707,26874,27454,27475,27735,28450,28567,28485,29872,29976,30435,30475,31487,31649,31777,32233,32566,32752,32925,33382,33694,35251,35532,36011,36996,37969,38291,38289,38306,38501,38867,39208,33304,20024,21547,23736,24012,29609,30284,30524,23721,32747,36107,38593,38929,38996,39e3,20225,20238,21361,21916,22120,22522,22855,23305,23492,23696,24076,24190,24524,25582,26426,26071,26082,26399,26827,26820,27231,24112,27589,27671,27773,30079,31048,23395,31232,32e3,24509,35215,35352,36020,36215,36556,36637,39138,39438,39740,20096,20605,20736,22931,23452,25135,25216,25836,27450,29344,30097,31047,32681,34811,35516,35696,25516,33738,38816,21513,21507,21931,26708,27224,35440,30759,26485,40653,21364,23458,33050,34384,36870,19992,20037,20167,20241,21450,21560,23470,24339,24613,25937,26429,27714,27762,27875,28792,29699,31350,31406,31496,32026,31998,32102,26087,29275,21435,23621,24040,25298,25312,25369,28192,34394,35377,36317,37624,28417,31142,39770,20136,20139,20140,20379,20384,20689,20807,31478,20849,20982,21332,21281,21375,21483,21932,22659,23777,24375,24394,24623,24656,24685,25375,25945,27211,27841,29378,29421,30703,33016,33029,33288,34126,37111,37857,38911,39255,39514,20208,20957,23597,26241,26989,23616,26354,26997,29577,26704,31873,20677,21220,22343,24062,37670,26020,27427,27453,29748,31105,31165,31563,32202,33465,33740,34943,35167,35641,36817,37329,21535,37504,20061,20534,21477,21306,29399,29590,30697,33510,36527,39366,39368,39378,20855,24858,34398,21936,31354,20598,23507,36935,38533,20018,27355,37351,23633,23624,25496,31391,27795,38772,36705,31402,29066,38536,31874,26647,32368,26705,37740,21234,21531,34219,35347,32676,36557,37089,21350,34952,31041,20418,20670,21009,20804,21843,22317,29674,22411,22865,24418,24452,24693,24950,24935,25001,25522,25658,25964,26223,26690,28179,30054,31293,31995,32076,32153,32331,32619,33550,33610,34509,35336,35427,35686,36605,38938,40335,33464,36814,39912,21127,25119,25731,28608,38553,26689,20625,27424,27770,28500,31348,32080,34880,35363,26376,20214,20537,20518,20581,20860,21048,21091,21927,22287,22533,23244,24314,25010,25080,25331,25458,26908,27177,29309,29356,29486,30740,30831,32121,30476,32937,35211,35609,36066,36562,36963,37749,38522,38997,39443,40568,20803,21407,21427,24187,24358,28187,28304,29572,29694,32067,33335,35328,35578,38480,20046,20491,21476,21628,22266,22993,23396,24049,24235,24359,25144,25925,26543,28246,29392,31946,34996,32929,32993,33776,34382,35463,36328,37431,38599,39015,40723,20116,20114,20237,21320,21577,21566,23087,24460,24481,24735,26791,27278,29786,30849,35486,35492,35703,37264,20062,39881,20132,20348,20399,20505,20502,20809,20844,21151,21177,21246,21402,21475,21521,21518,21897,22353,22434,22909,23380,23389,23439,24037,24039,24055,24184,24195,24218,24247,24344,24658,24908,25239,25304,25511,25915,26114,26179,26356,26477,26657,26775,27083,27743,27946,28009,28207,28317,30002,30343,30828,31295,31968,32005,32024,32094,32177,32789,32771,32943,32945,33108,33167,33322,33618,34892,34913,35611,36002,36092,37066,37237,37489,30783,37628,38308,38477,38917,39321,39640,40251,21083,21163,21495,21512,22741,25335,28640,35946,36703,40633,20811,21051,21578,22269,31296,37239,40288,40658,29508,28425,33136,29969,24573,24794,39592,29403,36796,27492,38915,20170,22256,22372,22718,23130,24680,25031,26127,26118,26681,26801,28151,30165,32058,33390,39746,20123,20304,21449,21766,23919,24038,24046,26619,27801,29811,30722,35408,37782,35039,22352,24231,25387,20661,20652,20877,26368,21705,22622,22971,23472,24425,25165,25505,26685,27507,28168,28797,37319,29312,30741,30758,31085,25998,32048,33756,35009,36617,38555,21092,22312,26448,32618,36001,20916,22338,38442,22586,27018,32948,21682,23822,22524,30869,40442,20316,21066,21643,25662,26152,26388,26613,31364,31574,32034,37679,26716,39853,31545,21273,20874,21047,23519,25334,25774,25830,26413,27578,34217,38609,30352,39894,25420,37638,39851,30399,26194,19977,20632,21442,23665,24808,25746,25955,26719,29158,29642,29987,31639,32386,34453,35715,36059,37240,39184,26028,26283,27531,20181,20180,20282,20351,21050,21496,21490,21987,22235,22763,22987,22985,23039,23376,23629,24066,24107,24535,24605,25351,25903,23388,26031,26045,26088,26525,27490,27515,27663,29509,31049,31169,31992,32025,32043,32930,33026,33267,35222,35422,35433,35430,35468,35566,36039,36060,38604,39164,27503,20107,20284,20365,20816,23383,23546,24904,25345,26178,27425,28363,27835,29246,29885,30164,30913,31034,32780,32819,33258,33940,36766,27728,40575,24335,35672,40235,31482,36600,23437,38635,19971,21489,22519,22833,23241,23460,24713,28287,28422,30142,36074,23455,34048,31712,20594,26612,33437,23649,34122,32286,33294,20889,23556,25448,36198,26012,29038,31038,32023,32773,35613,36554,36974,34503,37034,20511,21242,23610,26451,28796,29237,37196,37320,37675,33509,23490,24369,24825,20027,21462,23432,25163,26417,27530,29417,29664,31278,33131,36259,37202,39318,20754,21463,21610,23551,25480,27193,32172,38656,22234,21454,21608,23447,23601,24030,20462,24833,25342,27954,31168,31179,32066,32333,32722,33261,33311,33936,34886,35186,35728,36468,36655,36913,37195,37228,38598,37276,20160,20303,20805,21313,24467,25102,26580,27713,28171,29539,32294,37325,37507,21460,22809,23487,28113,31069,32302,31899,22654,29087,20986,34899,36848,20426,23803,26149,30636,31459,33308,39423,20934,24490,26092,26991,27529,28147,28310,28516,30462,32020,24033,36981,37255,38918,20966,21021,25152,26257,26329,28186,24246,32210,32626,26360,34223,34295,35576,21161,21465,22899,24207,24464,24661,37604,38500,20663,20767,21213,21280,21319,21484,21736,21830,21809,22039,22888,22974,23100,23477,23558,23567,23569,23578,24196,24202,24288,24432,25215,25220,25307,25484,25463,26119,26124,26157,26230,26494,26786,27167,27189,27836,28040,28169,28248,28988,28966,29031,30151,30465,30813,30977,31077,31216,31456,31505,31911,32057,32918,33750,33931,34121,34909,35059,35359,35388,35412,35443,35937,36062,37284,37478,37758,37912,38556,38808,19978,19976,19998,20055,20887,21104,22478,22580,22732,23330,24120,24773,25854,26465,26454,27972,29366,30067,31331,33976,35698,37304,37664,22065,22516,39166,25325,26893,27542,29165,32340,32887,33394,35302,39135,34645,36785,23611,20280,20449,20405,21767,23072,23517,23529,24515,24910,25391,26032,26187,26862,27035,28024,28145,30003,30137,30495,31070,31206,32051,33251,33455,34218,35242,35386,36523,36763,36914,37341,38663,20154,20161,20995,22645,22764,23563,29978,23613,33102,35338,36805,38499,38765,31525,35535,38920,37218,22259,21416,36887,21561,22402,24101,25512,27700,28810,30561,31883,32736,34928,36930,37204,37648,37656,38543,29790,39620,23815,23913,25968,26530,36264,38619,25454,26441,26905,33733,38935,38592,35070,28548,25722,23544,19990,28716,30045,26159,20932,21046,21218,22995,24449,24615,25104,25919,25972,26143,26228,26866,26646,27491,28165,29298,29983,30427,31934,32854,22768,35069,35199,35488,35475,35531,36893,37266,38738,38745,25993,31246,33030,38587,24109,24796,25114,26021,26132,26512,30707,31309,31821,32318,33034,36012,36196,36321,36447,30889,20999,25305,25509,25666,25240,35373,31363,31680,35500,38634,32118,33292,34633,20185,20808,21315,21344,23459,23554,23574,24029,25126,25159,25776,26643,26676,27849,27973,27927,26579,28508,29006,29053,26059,31359,31661,32218,32330,32680,33146,33307,33337,34214,35438,36046,36341,36984,36983,37549,37521,38275,39854,21069,21892,28472,28982,20840,31109,32341,33203,31950,22092,22609,23720,25514,26366,26365,26970,29401,30095,30094,30990,31062,31199,31895,32032,32068,34311,35380,38459,36961,40736,20711,21109,21452,21474,20489,21930,22766,22863,29245,23435,23652,21277,24803,24819,25436,25475,25407,25531,25805,26089,26361,24035,27085,27133,28437,29157,20105,30185,30456,31379,31967,32207,32156,32865,33609,33624,33900,33980,34299,35013,36208,36865,36973,37783,38684,39442,20687,22679,24974,33235,34101,36104,36896,20419,20596,21063,21363,24687,25417,26463,28204,36275,36895,20439,23646,36042,26063,32154,21330,34966,20854,25539,23384,23403,23562,25613,26449,36956,20182,22810,22826,27760,35409,21822,22549,22949,24816,25171,26561,33333,26965,38464,39364,39464,20307,22534,23550,32784,23729,24111,24453,24608,24907,25140,26367,27888,28382,32974,33151,33492,34955,36024,36864,36910,38538,40667,39899,20195,21488,22823,31532,37261,38988,40441,28381,28711,21331,21828,23429,25176,25246,25299,27810,28655,29730,35351,37944,28609,35582,33592,20967,34552,21482,21481,20294,36948,36784,22890,33073,24061,31466,36799,26842,35895,29432,40008,27197,35504,20025,21336,22022,22374,25285,25506,26086,27470,28129,28251,28845,30701,31471,31658,32187,32829,32966,34507,35477,37723,22243,22727,24382,26029,26262,27264,27573,30007,35527,20516,30693,22320,24347,24677,26234,27744,30196,31258,32622,33268,34584,36933,39347,31689,30044,31481,31569,33988,36880,31209,31378,33590,23265,30528,20013,20210,23449,24544,25277,26172,26609,27880,34411,34935,35387,37198,37619,39376,27159,28710,29482,33511,33879,36015,19969,20806,20939,21899,23541,24086,24115,24193,24340,24373,24427,24500,25074,25361,26274,26397,28526,29266,30010,30522,32884,33081,33144,34678,35519,35548,36229,36339,37530,38263,38914,40165,21189,25431,30452,26389,27784,29645,36035,37806,38515,27941,22684,26894,27084,36861,37786,30171,36890,22618,26626,25524,27131,20291,28460,26584,36795,34086,32180,37716,26943,28528,22378,22775,23340,32044,29226,21514,37347,40372,20141,20302,20572,20597,21059,35998,21576,22564,23450,24093,24213,24237,24311,24351,24716,25269,25402,25552,26799,27712,30855,31118,31243,32224,33351,35330,35558,36420,36883,37048,37165,37336,40718,27877,25688,25826,25973,28404,30340,31515,36969,37841,28346,21746,24505,25764,36685,36845,37444,20856,22635,22825,23637,24215,28155,32399,29980,36028,36578,39003,28857,20253,27583,28593,3e4,38651,20814,21520,22581,22615,22956,23648,24466,26007,26460,28193,30331,33759,36077,36884,37117,37709,30757,30778,21162,24230,22303,22900,24594,20498,20826,20908,20941,20992,21776,22612,22616,22871,23445,23798,23947,24764,25237,25645,26481,26691,26812,26847,30423,28120,28271,28059,28783,29128,24403,30168,31095,31561,31572,31570,31958,32113,21040,33891,34153,34276,35342,35588,35910,36367,36867,36879,37913,38518,38957,39472,38360,20685,21205,21516,22530,23566,24999,25758,27934,30643,31461,33012,33796,36947,37509,23776,40199,21311,24471,24499,28060,29305,30563,31167,31716,27602,29420,35501,26627,27233,20984,31361,26932,23626,40182,33515,23493,37193,28702,22136,23663,24775,25958,27788,35930,36929,38931,21585,26311,37389,22856,37027,20869,20045,20970,34201,35598,28760,25466,37707,26978,39348,32260,30071,21335,26976,36575,38627,27741,20108,23612,24336,36841,21250,36049,32905,34425,24319,26085,20083,20837,22914,23615,38894,20219,22922,24525,35469,28641,31152,31074,23527,33905,29483,29105,24180,24565,25467,25754,29123,31896,20035,24316,20043,22492,22178,24745,28611,32013,33021,33075,33215,36786,35223,34468,24052,25226,25773,35207,26487,27874,27966,29750,30772,23110,32629,33453,39340,20467,24259,25309,25490,25943,26479,30403,29260,32972,32954,36649,37197,20493,22521,23186,26757,26995,29028,29437,36023,22770,36064,38506,36889,34687,31204,30695,33833,20271,21093,21338,25293,26575,27850,30333,31636,31893,33334,34180,36843,26333,28448,29190,32283,33707,39361,40614,20989,31665,30834,31672,32903,31560,27368,24161,32908,30033,30048,20843,37474,28300,30330,37271,39658,20240,32624,25244,31567,38309,40169,22138,22617,34532,38588,20276,21028,21322,21453,21467,24070,25644,26001,26495,27710,27726,29256,29359,29677,30036,32321,33324,34281,36009,31684,37318,29033,38930,39151,25405,26217,30058,30436,30928,34115,34542,21290,21329,21542,22915,24199,24444,24754,25161,25209,25259,26e3,27604,27852,30130,30382,30865,31192,32203,32631,32933,34987,35513,36027,36991,38750,39131,27147,31800,20633,23614,24494,26503,27608,29749,30473,32654,40763,26570,31255,21305,30091,39661,24422,33181,33777,32920,24380,24517,30050,31558,36924,26727,23019,23195,32016,30334,35628,20469,24426,27161,27703,28418,29922,31080,34920,35413,35961,24287,25551,30149,31186,33495,37672,37618,33948,34541,39981,21697,24428,25996,27996,28693,36007,36051,38971,25935,29942,19981,20184,22496,22827,23142,23500,20904,24067,24220,24598,25206,25975,26023,26222,28014,29238,31526,33104,33178,33433,35676,36e3,36070,36212,38428,38468,20398,25771,27494,33310,33889,34154,37096,23553,26963,39080,33914,34135,20239,21103,24489,24133,26381,31119,33145,35079,35206,28149,24343,25173,27832,20175,29289,39826,20998,21563,22132,22707,24996,25198,28954,22894,31881,31966,32027,38640,25991,32862,19993,20341,20853,22592,24163,24179,24330,26564,20006,34109,38281,38491,31859,38913,20731,22721,30294,30887,21029,30629,34065,31622,20559,22793,29255,31687,32232,36794,36820,36941,20415,21193,23081,24321,38829,20445,33303,37610,22275,25429,27497,29995,35036,36628,31298,21215,22675,24917,25098,26286,27597,31807,33769,20515,20472,21253,21574,22577,22857,23453,23792,23791,23849,24214,25265,25447,25918,26041,26379,27861,27873,28921,30770,32299,32990,33459,33804,34028,34562,35090,35370,35914,37030,37586,39165,40179,40300,20047,20129,20621,21078,22346,22952,24125,24536,24537,25151,26292,26395,26576,26834,20882,32033,32938,33192,35584,35980,36031,37502,38450,21536,38956,21271,20693,21340,22696,25778,26420,29287,30566,31302,37350,21187,27809,27526,22528,24140,22868,26412,32763,20961,30406,25705,30952,39764,40635,22475,22969,26151,26522,27598,21737,27097,24149,33180,26517,39850,26622,40018,26717,20134,20451,21448,25273,26411,27819,36804,20397,32365,40639,19975,24930,28288,28459,34067,21619,26410,39749,24051,31637,23724,23494,34588,28234,34001,31252,33032,22937,31885,27665,30496,21209,22818,28961,29279,30683,38695,40289,26891,23167,23064,20901,21517,21629,26126,30431,36855,37528,40180,23018,29277,28357,20813,26825,32191,32236,38754,40634,25720,27169,33538,22916,23391,27611,29467,30450,32178,32791,33945,20786,26408,40665,30446,26466,21247,39173,23588,25147,31870,36016,21839,24758,32011,38272,21249,20063,20918,22812,29242,32822,37326,24357,30690,21380,24441,32004,34220,35379,36493,38742,26611,34222,37971,24841,24840,27833,30290,35565,36664,21807,20305,20778,21191,21451,23461,24189,24736,24962,25558,26377,26586,28263,28044,29494,29495,30001,31056,35029,35480,36938,37009,37109,38596,34701,22805,20104,20313,19982,35465,36671,38928,20653,24188,22934,23481,24248,25562,25594,25793,26332,26954,27096,27915,28342,29076,29992,31407,32650,32768,33865,33993,35201,35617,36362,36965,38525,39178,24958,25233,27442,27779,28020,32716,32764,28096,32645,34746,35064,26469,33713,38972,38647,27931,32097,33853,37226,20081,21365,23888,27396,28651,34253,34349,35239,21033,21519,23653,26446,26792,29702,29827,30178,35023,35041,37324,38626,38520,24459,29575,31435,33870,25504,30053,21129,27969,28316,29705,30041,30827,31890,38534,31452,40845,20406,24942,26053,34396,20102,20142,20698,20001,20940,23534,26009,26753,28092,29471,30274,30637,31260,31975,33391,35538,36988,37327,38517,38936,21147,32209,20523,21400,26519,28107,29136,29747,33256,36650,38563,40023,40607,29792,22593,28057,32047,39006,20196,20278,20363,20919,21169,23994,24604,29618,31036,33491,37428,38583,38646,38666,40599,40802,26278,27508,21015,21155,28872,35010,24265,24651,24976,28451,29001,31806,32244,32879,34030,36899,37676,21570,39791,27347,28809,36034,36335,38706,21172,23105,24266,24324,26391,27004,27028,28010,28431,29282,29436,31725,32769,32894,34635,37070,20845,40595,31108,32907,37682,35542,20525,21644,35441,27498,36036,33031,24785,26528,40434,20121,20120,39952,35435,34241,34152,26880,28286,30871,33109,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24332,19984,19989,20010,20017,20022,20028,20031,20034,20054,20056,20098,20101,35947,20106,33298,24333,20110,20126,20127,20128,20130,20144,20147,20150,20174,20173,20164,20166,20162,20183,20190,20205,20191,20215,20233,20314,20272,20315,20317,20311,20295,20342,20360,20367,20376,20347,20329,20336,20369,20335,20358,20374,20760,20436,20447,20430,20440,20443,20433,20442,20432,20452,20453,20506,20520,20500,20522,20517,20485,20252,20470,20513,20521,20524,20478,20463,20497,20486,20547,20551,26371,20565,20560,20552,20570,20566,20588,20600,20608,20634,20613,20660,20658,20681,20682,20659,20674,20694,20702,20709,20717,20707,20718,20729,20725,20745,20737,20738,20758,20757,20756,20762,20769,20794,20791,20796,20795,20799,20800,20818,20812,20820,20834,31480,20841,20842,20846,20864,20866,22232,20876,20873,20879,20881,20883,20885,20886,20900,20902,20898,20905,20906,20907,20915,20913,20914,20912,20917,20925,20933,20937,20955,20960,34389,20969,20973,20976,20981,20990,20996,21003,21012,21006,21031,21034,21038,21043,21049,21071,21060,21067,21068,21086,21076,21098,21108,21097,21107,21119,21117,21133,21140,21138,21105,21128,21137,36776,36775,21164,21165,21180,21173,21185,21197,21207,21214,21219,21222,39149,21216,21235,21237,21240,21241,21254,21256,30008,21261,21264,21263,21269,21274,21283,21295,21297,21299,21304,21312,21318,21317,19991,21321,21325,20950,21342,21353,21358,22808,21371,21367,21378,21398,21408,21414,21413,21422,21424,21430,21443,31762,38617,21471,26364,29166,21486,21480,21485,21498,21505,21565,21568,21548,21549,21564,21550,21558,21545,21533,21582,21647,21621,21646,21599,21617,21623,21616,21650,21627,21632,21622,21636,21648,21638,21703,21666,21688,21669,21676,21700,21704,21672,21675,21698,21668,21694,21692,21720,21733,21734,21775,21780,21757,21742,21741,21754,21730,21817,21824,21859,21836,21806,21852,21829,21846,21847,21816,21811,21853,21913,21888,21679,21898,21919,21883,21886,21912,21918,21934,21884,21891,21929,21895,21928,21978,21957,21983,21956,21980,21988,21972,22036,22007,22038,22014,22013,22043,22009,22094,22096,29151,22068,22070,22066,22072,22123,22116,22063,22124,22122,22150,22144,22154,22176,22164,22159,22181,22190,22198,22196,22210,22204,22209,22211,22208,22216,22222,22225,22227,22231,22254,22265,22272,22271,22276,22281,22280,22283,22285,22291,22296,22294,21959,22300,22310,22327,22328,22350,22331,22336,22351,22377,22464,22408,22369,22399,22409,22419,22432,22451,22436,22442,22448,22467,22470,22484,22482,22483,22538,22486,22499,22539,22553,22557,22642,22561,22626,22603,22640,27584,22610,22589,22649,22661,22713,22687,22699,22714,22750,22715,22712,22702,22725,22739,22737,22743,22745,22744,22757,22748,22756,22751,22767,22778,22777,22779,22780,22781,22786,22794,22800,22811,26790,22821,22828,22829,22834,22840,22846,31442,22869,22864,22862,22874,22872,22882,22880,22887,22892,22889,22904,22913,22941,20318,20395,22947,22962,22982,23016,23004,22925,23001,23002,23077,23071,23057,23068,23049,23066,23104,23148,23113,23093,23094,23138,23146,23194,23228,23230,23243,23234,23229,23267,23255,23270,23273,23254,23290,23291,23308,23307,23318,23346,23248,23338,23350,23358,23363,23365,23360,23377,23381,23386,23387,23397,23401,23408,23411,23413,23416,25992,23418,23424,23427,23462,23480,23491,23495,23497,23508,23504,23524,23526,23522,23518,23525,23531,23536,23542,23539,23557,23559,23560,23565,23571,23584,23586,23592,23608,23609,23617,23622,23630,23635,23632,23631,23409,23660,23662,20066,23670,23673,23692,23697,23700,22939,23723,23739,23734,23740,23735,23749,23742,23751,23769,23785,23805,23802,23789,23948,23786,23819,23829,23831,23900,23839,23835,23825,23828,23842,23834,23833,23832,23884,23890,23886,23883,23916,23923,23926,23943,23940,23938,23970,23965,23980,23982,23997,23952,23991,23996,24009,24013,24019,24018,24022,24027,24043,24050,24053,24075,24090,24089,24081,24091,24118,24119,24132,24131,24128,24142,24151,24148,24159,24162,24164,24135,24181,24182,24186,40636,24191,24224,24257,24258,24264,24272,24271,24278,24291,24285,24282,24283,24290,24289,24296,24297,24300,24305,24307,24304,24308,24312,24318,24323,24329,24413,24412,24331,24337,24342,24361,24365,24376,24385,24392,24396,24398,24367,24401,24406,24407,24409,24417,24429,24435,24439,24451,24450,24447,24458,24456,24465,24455,24478,24473,24472,24480,24488,24493,24508,24534,24571,24548,24568,24561,24541,24755,24575,24609,24672,24601,24592,24617,24590,24625,24603,24597,24619,24614,24591,24634,24666,24641,24682,24695,24671,24650,24646,24653,24675,24643,24676,24642,24684,24683,24665,24705,24717,24807,24707,24730,24708,24731,24726,24727,24722,24743,24715,24801,24760,24800,24787,24756,24560,24765,24774,24757,24792,24909,24853,24838,24822,24823,24832,24820,24826,24835,24865,24827,24817,24845,24846,24903,24894,24872,24871,24906,24895,24892,24876,24884,24893,24898,24900,24947,24951,24920,24921,24922,24939,24948,24943,24933,24945,24927,24925,24915,24949,24985,24982,24967,25004,24980,24986,24970,24977,25003,25006,25036,25034,25033,25079,25032,25027,25030,25018,25035,32633,25037,25062,25059,25078,25082,25076,25087,25085,25084,25086,25088,25096,25097,25101,25100,25108,25115,25118,25121,25130,25134,25136,25138,25139,25153,25166,25182,25187,25179,25184,25192,25212,25218,25225,25214,25234,25235,25238,25300,25219,25236,25303,25297,25275,25295,25343,25286,25812,25288,25308,25292,25290,25282,25287,25243,25289,25356,25326,25329,25383,25346,25352,25327,25333,25424,25406,25421,25628,25423,25494,25486,25472,25515,25462,25507,25487,25481,25503,25525,25451,25449,25534,25577,25536,25542,25571,25545,25554,25590,25540,25622,25652,25606,25619,25638,25654,25885,25623,25640,25615,25703,25711,25718,25678,25898,25749,25747,25765,25769,25736,25788,25818,25810,25797,25799,25787,25816,25794,25841,25831,33289,25824,25825,25260,25827,25839,25900,25846,25844,25842,25850,25856,25853,25880,25884,25861,25892,25891,25899,25908,25909,25911,25910,25912,30027,25928,25942,25941,25933,25944,25950,25949,25970,25976,25986,25987,35722,26011,26015,26027,26039,26051,26054,26049,26052,26060,26066,26075,26073,26080,26081,26097,26482,26122,26115,26107,26483,26165,26166,26164,26140,26191,26180,26185,26177,26206,26205,26212,26215,26216,26207,26210,26224,26243,26248,26254,26249,26244,26264,26269,26305,26297,26313,26302,26300,26308,26296,26326,26330,26336,26175,26342,26345,26352,26357,26359,26383,26390,26398,26406,26407,38712,26414,26431,26422,26433,26424,26423,26438,26462,26464,26457,26467,26468,26505,26480,26537,26492,26474,26508,26507,26534,26529,26501,26551,26607,26548,26604,26547,26601,26552,26596,26590,26589,26594,26606,26553,26574,26566,26599,27292,26654,26694,26665,26688,26701,26674,26702,26803,26667,26713,26723,26743,26751,26783,26767,26797,26772,26781,26779,26755,27310,26809,26740,26805,26784,26810,26895,26765,26750,26881,26826,26888,26840,26914,26918,26849,26892,26829,26836,26855,26837,26934,26898,26884,26839,26851,26917,26873,26848,26863,26920,26922,26906,26915,26913,26822,27001,26999,26972,27e3,26987,26964,27006,26990,26937,26996,26941,26969,26928,26977,26974,26973,27009,26986,27058,27054,27088,27071,27073,27091,27070,27086,23528,27082,27101,27067,27075,27047,27182,27025,27040,27036,27029,27060,27102,27112,27138,27163,27135,27402,27129,27122,27111,27141,27057,27166,27117,27156,27115,27146,27154,27329,27171,27155,27204,27148,27250,27190,27256,27207,27234,27225,27238,27208,27192,27170,27280,27277,27296,27268,27298,27299,27287,34327,27323,27331,27330,27320,27315,27308,27358,27345,27359,27306,27354,27370,27387,27397,34326,27386,27410,27414,39729,27423,27448,27447,30428,27449,39150,27463,27459,27465,27472,27481,27476,27483,27487,27489,27512,27513,27519,27520,27524,27523,27533,27544,27541,27550,27556,27562,27563,27567,27570,27569,27571,27575,27580,27590,27595,27603,27615,27628,27627,27635,27631,40638,27656,27667,27668,27675,27684,27683,27742,27733,27746,27754,27778,27789,27802,27777,27803,27774,27752,27763,27794,27792,27844,27889,27859,27837,27863,27845,27869,27822,27825,27838,27834,27867,27887,27865,27882,27935,34893,27958,27947,27965,27960,27929,27957,27955,27922,27916,28003,28051,28004,27994,28025,27993,28046,28053,28644,28037,28153,28181,28170,28085,28103,28134,28088,28102,28140,28126,28108,28136,28114,28101,28154,28121,28132,28117,28138,28142,28205,28270,28206,28185,28274,28255,28222,28195,28267,28203,28278,28237,28191,28227,28218,28238,28196,28415,28189,28216,28290,28330,28312,28361,28343,28371,28349,28335,28356,28338,28372,28373,28303,28325,28354,28319,28481,28433,28748,28396,28408,28414,28479,28402,28465,28399,28466,28364,28478,28435,28407,28550,28538,28536,28545,28544,28527,28507,28659,28525,28546,28540,28504,28558,28561,28610,28518,28595,28579,28577,28580,28601,28614,28586,28639,28629,28652,28628,28632,28657,28654,28635,28681,28683,28666,28689,28673,28687,28670,28699,28698,28532,28701,28696,28703,28720,28734,28722,28753,28771,28825,28818,28847,28913,28844,28856,28851,28846,28895,28875,28893,28889,28937,28925,28956,28953,29029,29013,29064,29030,29026,29004,29014,29036,29071,29179,29060,29077,29096,29100,29143,29113,29118,29138,29129,29140,29134,29152,29164,29159,29173,29180,29177,29183,29197,29200,29211,29224,29229,29228,29232,29234,29243,29244,29247,29248,29254,29259,29272,29300,29310,29314,29313,29319,29330,29334,29346,29351,29369,29362,29379,29382,29380,29390,29394,29410,29408,29409,29433,29431,20495,29463,29450,29468,29462,29469,29492,29487,29481,29477,29502,29518,29519,40664,29527,29546,29544,29552,29560,29557,29563,29562,29640,29619,29646,29627,29632,29669,29678,29662,29858,29701,29807,29733,29688,29746,29754,29781,29759,29791,29785,29761,29788,29801,29808,29795,29802,29814,29822,29835,29854,29863,29898,29903,29908,29681,29920,29923,29927,29929,29934,29938,29936,29937,29944,29943,29956,29955,29957,29964,29966,29965,29973,29971,29982,29990,29996,30012,30020,30029,30026,30025,30043,30022,30042,30057,30052,30055,30059,30061,30072,30070,30086,30087,30068,30090,30089,30082,30100,30106,30109,30117,30115,30146,30131,30147,30133,30141,30136,30140,30129,30157,30154,30162,30169,30179,30174,30206,30207,30204,30209,30192,30202,30194,30195,30219,30221,30217,30239,30247,30240,30241,30242,30244,30260,30256,30267,30279,30280,30278,30300,30296,30305,30306,30312,30313,30314,30311,30316,30320,30322,30326,30328,30332,30336,30339,30344,30347,30350,30358,30355,30361,30362,30384,30388,30392,30393,30394,30402,30413,30422,30418,30430,30433,30437,30439,30442,34351,30459,30472,30471,30468,30505,30500,30494,30501,30502,30491,30519,30520,30535,30554,30568,30571,30555,30565,30591,30590,30585,30606,30603,30609,30624,30622,30640,30646,30649,30655,30652,30653,30651,30663,30669,30679,30682,30684,30691,30702,30716,30732,30738,31014,30752,31018,30789,30862,30836,30854,30844,30874,30860,30883,30901,30890,30895,30929,30918,30923,30932,30910,30908,30917,30922,30956,30951,30938,30973,30964,30983,30994,30993,31001,31020,31019,31040,31072,31063,31071,31066,31061,31059,31098,31103,31114,31133,31143,40779,31146,31150,31155,31161,31162,31177,31189,31207,31212,31201,31203,31240,31245,31256,31257,31264,31263,31104,31281,31291,31294,31287,31299,31319,31305,31329,31330,31337,40861,31344,31353,31357,31368,31383,31381,31384,31382,31401,31432,31408,31414,31429,31428,31423,36995,31431,31434,31437,31439,31445,31443,31449,31450,31453,31457,31458,31462,31469,31472,31490,31503,31498,31494,31539,31512,31513,31518,31541,31528,31542,31568,31610,31492,31565,31499,31564,31557,31605,31589,31604,31591,31600,31601,31596,31598,31645,31640,31647,31629,31644,31642,31627,31634,31631,31581,31641,31691,31681,31692,31695,31668,31686,31709,31721,31761,31764,31718,31717,31840,31744,31751,31763,31731,31735,31767,31757,31734,31779,31783,31786,31775,31799,31787,31805,31820,31811,31828,31823,31808,31824,31832,31839,31844,31830,31845,31852,31861,31875,31888,31908,31917,31906,31915,31905,31912,31923,31922,31921,31918,31929,31933,31936,31941,31938,31960,31954,31964,31970,39739,31983,31986,31988,31990,31994,32006,32002,32028,32021,32010,32069,32075,32046,32050,32063,32053,32070,32115,32086,32078,32114,32104,32110,32079,32099,32147,32137,32091,32143,32125,32155,32186,32174,32163,32181,32199,32189,32171,32317,32162,32175,32220,32184,32159,32176,32216,32221,32228,32222,32251,32242,32225,32261,32266,32291,32289,32274,32305,32287,32265,32267,32290,32326,32358,32315,32309,32313,32323,32311,32306,32314,32359,32349,32342,32350,32345,32346,32377,32362,32361,32380,32379,32387,32213,32381,36782,32383,32392,32393,32396,32402,32400,32403,32404,32406,32398,32411,32412,32568,32570,32581,32588,32589,32590,32592,32593,32597,32596,32600,32607,32608,32616,32617,32615,32632,32642,32646,32643,32648,32647,32652,32660,32670,32669,32666,32675,32687,32690,32697,32686,32694,32696,35697,32709,32710,32714,32725,32724,32737,32742,32745,32755,32761,39132,32774,32772,32779,32786,32792,32793,32796,32801,32808,32831,32827,32842,32838,32850,32856,32858,32863,32866,32872,32883,32882,32880,32886,32889,32893,32895,32900,32902,32901,32923,32915,32922,32941,20880,32940,32987,32997,32985,32989,32964,32986,32982,33033,33007,33009,33051,33065,33059,33071,33099,38539,33094,33086,33107,33105,33020,33137,33134,33125,33126,33140,33155,33160,33162,33152,33154,33184,33173,33188,33187,33119,33171,33193,33200,33205,33214,33208,33213,33216,33218,33210,33225,33229,33233,33241,33240,33224,33242,33247,33248,33255,33274,33275,33278,33281,33282,33285,33287,33290,33293,33296,33302,33321,33323,33336,33331,33344,33369,33368,33373,33370,33375,33380,33378,33384,33386,33387,33326,33393,33399,33400,33406,33421,33426,33451,33439,33467,33452,33505,33507,33503,33490,33524,33523,33530,33683,33539,33531,33529,33502,33542,33500,33545,33497,33589,33588,33558,33586,33585,33600,33593,33616,33605,33583,33579,33559,33560,33669,33690,33706,33695,33698,33686,33571,33678,33671,33674,33660,33717,33651,33653,33696,33673,33704,33780,33811,33771,33742,33789,33795,33752,33803,33729,33783,33799,33760,33778,33805,33826,33824,33725,33848,34054,33787,33901,33834,33852,34138,33924,33911,33899,33965,33902,33922,33897,33862,33836,33903,33913,33845,33994,33890,33977,33983,33951,34009,33997,33979,34010,34e3,33985,33990,34006,33953,34081,34047,34036,34071,34072,34092,34079,34069,34068,34044,34112,34147,34136,34120,34113,34306,34123,34133,34176,34212,34184,34193,34186,34216,34157,34196,34203,34282,34183,34204,34167,34174,34192,34249,34234,34255,34233,34256,34261,34269,34277,34268,34297,34314,34323,34315,34302,34298,34310,34338,34330,34352,34367,34381,20053,34388,34399,34407,34417,34451,34467,34473,34474,34443,34444,34486,34479,34500,34502,34480,34505,34851,34475,34516,34526,34537,34540,34527,34523,34543,34578,34566,34568,34560,34563,34555,34577,34569,34573,34553,34570,34612,34623,34615,34619,34597,34601,34586,34656,34655,34680,34636,34638,34676,34647,34664,34670,34649,34643,34659,34666,34821,34722,34719,34690,34735,34763,34749,34752,34768,38614,34731,34756,34739,34759,34758,34747,34799,34802,34784,34831,34829,34814,34806,34807,34830,34770,34833,34838,34837,34850,34849,34865,34870,34873,34855,34875,34884,34882,34898,34905,34910,34914,34923,34945,34942,34974,34933,34941,34997,34930,34946,34967,34962,34990,34969,34978,34957,34980,34992,35007,34993,35011,35012,35028,35032,35033,35037,35065,35074,35068,35060,35048,35058,35076,35084,35082,35091,35139,35102,35109,35114,35115,35137,35140,35131,35126,35128,35148,35101,35168,35166,35174,35172,35181,35178,35183,35188,35191,35198,35203,35208,35210,35219,35224,35233,35241,35238,35244,35247,35250,35258,35261,35263,35264,35290,35292,35293,35303,35316,35320,35331,35350,35344,35340,35355,35357,35365,35382,35393,35419,35410,35398,35400,35452,35437,35436,35426,35461,35458,35460,35496,35489,35473,35493,35494,35482,35491,35524,35533,35522,35546,35563,35571,35559,35556,35569,35604,35552,35554,35575,35550,35547,35596,35591,35610,35553,35606,35600,35607,35616,35635,38827,35622,35627,35646,35624,35649,35660,35663,35662,35657,35670,35675,35674,35691,35679,35692,35695,35700,35709,35712,35724,35726,35730,35731,35734,35737,35738,35898,35905,35903,35912,35916,35918,35920,35925,35938,35948,35960,35962,35970,35977,35973,35978,35981,35982,35988,35964,35992,25117,36013,36010,36029,36018,36019,36014,36022,36040,36033,36068,36067,36058,36093,36090,36091,36100,36101,36106,36103,36111,36109,36112,40782,36115,36045,36116,36118,36199,36205,36209,36211,36225,36249,36290,36286,36282,36303,36314,36310,36300,36315,36299,36330,36331,36319,36323,36348,36360,36361,36351,36381,36382,36368,36383,36418,36405,36400,36404,36426,36423,36425,36428,36432,36424,36441,36452,36448,36394,36451,36437,36470,36466,36476,36481,36487,36485,36484,36491,36490,36499,36497,36500,36505,36522,36513,36524,36528,36550,36529,36542,36549,36552,36555,36571,36579,36604,36603,36587,36606,36618,36613,36629,36626,36633,36627,36636,36639,36635,36620,36646,36659,36667,36665,36677,36674,36670,36684,36681,36678,36686,36695,36700,36706,36707,36708,36764,36767,36771,36781,36783,36791,36826,36837,36834,36842,36847,36999,36852,36869,36857,36858,36881,36885,36897,36877,36894,36886,36875,36903,36918,36917,36921,36856,36943,36944,36945,36946,36878,36937,36926,36950,36952,36958,36968,36975,36982,38568,36978,36994,36989,36993,36992,37002,37001,37007,37032,37039,37041,37045,37090,37092,25160,37083,37122,37138,37145,37170,37168,37194,37206,37208,37219,37221,37225,37235,37234,37259,37257,37250,37282,37291,37295,37290,37301,37300,37306,37312,37313,37321,37323,37328,37334,37343,37345,37339,37372,37365,37366,37406,37375,37396,37420,37397,37393,37470,37463,37445,37449,37476,37448,37525,37439,37451,37456,37532,37526,37523,37531,37466,37583,37561,37559,37609,37647,37626,37700,37678,37657,37666,37658,37667,37690,37685,37691,37724,37728,37756,37742,37718,37808,37804,37805,37780,37817,37846,37847,37864,37861,37848,37827,37853,37840,37832,37860,37914,37908,37907,37891,37895,37904,37942,37931,37941,37921,37946,37953,37970,37956,37979,37984,37986,37982,37994,37417,38e3,38005,38007,38013,37978,38012,38014,38017,38015,38274,38279,38282,38292,38294,38296,38297,38304,38312,38311,38317,38332,38331,38329,38334,38346,28662,38339,38349,38348,38357,38356,38358,38364,38369,38373,38370,38433,38440,38446,38447,38466,38476,38479,38475,38519,38492,38494,38493,38495,38502,38514,38508,38541,38552,38549,38551,38570,38567,38577,38578,38576,38580,38582,38584,38585,38606,38603,38601,38605,35149,38620,38669,38613,38649,38660,38662,38664,38675,38670,38673,38671,38678,38681,38692,38698,38704,38713,38717,38718,38724,38726,38728,38722,38729,38748,38752,38756,38758,38760,21202,38763,38769,38777,38789,38780,38785,38778,38790,38795,38799,38800,38812,38824,38822,38819,38835,38836,38851,38854,38856,38859,38876,38893,40783,38898,31455,38902,38901,38927,38924,38968,38948,38945,38967,38973,38982,38991,38987,39019,39023,39024,39025,39028,39027,39082,39087,39089,39094,39108,39107,39110,39145,39147,39171,39177,39186,39188,39192,39201,39197,39198,39204,39200,39212,39214,39229,39230,39234,39241,39237,39248,39243,39249,39250,39244,39253,39319,39320,39333,39341,39342,39356,39391,39387,39389,39384,39377,39405,39406,39409,39410,39419,39416,39425,39439,39429,39394,39449,39467,39479,39493,39490,39488,39491,39486,39509,39501,39515,39511,39519,39522,39525,39524,39529,39531,39530,39597,39600,39612,39616,39631,39633,39635,39636,39646,39647,39650,39651,39654,39663,39659,39662,39668,39665,39671,39675,39686,39704,39706,39711,39714,39715,39717,39719,39720,39721,39722,39726,39727,39730,39748,39747,39759,39757,39758,39761,39768,39796,39827,39811,39825,39830,39831,39839,39840,39848,39860,39872,39882,39865,39878,39887,39889,39890,39907,39906,39908,39892,39905,39994,39922,39921,39920,39957,39956,39945,39955,39948,39942,39944,39954,39946,39940,39982,39963,39973,39972,39969,39984,40007,39986,40006,39998,40026,40032,40039,40054,40056,40167,40172,40176,40201,40200,40171,40195,40198,40234,40230,40367,40227,40223,40260,40213,40210,40257,40255,40254,40262,40264,40285,40286,40292,40273,40272,40281,40306,40329,40327,40363,40303,40314,40346,40356,40361,40370,40388,40385,40379,40376,40378,40390,40399,40386,40409,40403,40440,40422,40429,40431,40445,40474,40475,40478,40565,40569,40573,40577,40584,40587,40588,40594,40597,40593,40605,40613,40617,40632,40618,40621,38753,40652,40654,40655,40656,40660,40668,40670,40669,40672,40677,40680,40687,40692,40694,40695,40697,40699,40700,40701,40711,40712,30391,40725,40737,40748,40766,40778,40786,40788,40803,40799,40800,40801,40806,40807,40812,40810,40823,40818,40822,40853,40860,40864,22575,27079,36953,29796,20956,29081,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32394,35100,37704,37512,34012,20425,28859,26161,26824,37625,26363,24389,20008,20193,20220,20224,20227,20281,20310,20370,20362,20378,20372,20429,20544,20514,20479,20510,20550,20592,20546,20628,20724,20696,20810,20836,20893,20926,20972,21013,21148,21158,21184,21211,21248,21255,21284,21362,21395,21426,21469,64014,21660,21642,21673,21759,21894,22361,22373,22444,22472,22471,64015,64016,22686,22706,22795,22867,22875,22877,22883,22948,22970,23382,23488,29999,23512,23532,23582,23718,23738,23797,23847,23891,64017,23874,23917,23992,23993,24016,24353,24372,24423,24503,24542,24669,24709,24714,24798,24789,24864,24818,24849,24887,24880,24984,25107,25254,25589,25696,25757,25806,25934,26112,26133,26171,26121,26158,26142,26148,26213,26199,26201,64018,26227,26265,26272,26290,26303,26362,26382,63785,26470,26555,26706,26560,26625,26692,26831,64019,26984,64020,27032,27106,27184,27243,27206,27251,27262,27362,27364,27606,27711,27740,27782,27759,27866,27908,28039,28015,28054,28076,28111,28152,28146,28156,28217,28252,28199,28220,28351,28552,28597,28661,28677,28679,28712,28805,28843,28943,28932,29020,28998,28999,64021,29121,29182,29361,29374,29476,64022,29559,29629,29641,29654,29667,29650,29703,29685,29734,29738,29737,29742,29794,29833,29855,29953,30063,30338,30364,30366,30363,30374,64023,30534,21167,30753,30798,30820,30842,31024,64024,64025,64026,31124,64027,31131,31441,31463,64028,31467,31646,64029,32072,32092,32183,32160,32214,32338,32583,32673,64030,33537,33634,33663,33735,33782,33864,33972,34131,34137,34155,64031,34224,64032,64033,34823,35061,35346,35383,35449,35495,35518,35551,64034,35574,35667,35711,36080,36084,36114,36214,64035,36559,64036,64037,36967,37086,64038,37141,37159,37338,37335,37342,37357,37358,37348,37349,37382,37392,37386,37434,37440,37436,37454,37465,37457,37433,37479,37543,37495,37496,37607,37591,37593,37584,64039,37589,37600,37587,37669,37665,37627,64040,37662,37631,37661,37634,37744,37719,37796,37830,37854,37880,37937,37957,37960,38290,63964,64041,38557,38575,38707,38715,38723,38733,38735,38737,38741,38999,39013,64042,64043,39207,64044,39326,39502,39641,39644,39797,39794,39823,39857,39867,39936,40304,40299,64045,40473,40657,0,0,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,65506,65508,65287,65282,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,65506,65508,65287,65282,12849,8470,8481,8757,32394,35100,37704,37512,34012,20425,28859,26161,26824,37625,26363,24389,20008,20193,20220,20224,20227,20281,20310,20370,20362,20378,20372,20429,20544,20514,20479,20510,20550,20592,20546,20628,20724,20696,20810,20836,20893,20926,20972,21013,21148,21158,21184,21211,21248,21255,21284,21362,21395,21426,21469,64014,21660,21642,21673,21759,21894,22361,22373,22444,22472,22471,64015,64016,22686,22706,22795,22867,22875,22877,22883,22948,22970,23382,23488,29999,23512,23532,23582,23718,23738,23797,23847,23891,64017,23874,23917,23992,23993,24016,24353,24372,24423,24503,24542,24669,24709,24714,24798,24789,24864,24818,24849,24887,24880,24984,25107,25254,25589,25696,25757,25806,25934,26112,26133,26171,26121,26158,26142,26148,26213,26199,26201,64018,26227,26265,26272,26290,26303,26362,26382,63785,26470,26555,26706,26560,26625,26692,26831,64019,26984,64020,27032,27106,27184,27243,27206,27251,27262,27362,27364,27606,27711,27740,27782,27759,27866,27908,28039,28015,28054,28076,28111,28152,28146,28156,28217,28252,28199,28220,28351,28552,28597,28661,28677,28679,28712,28805,28843,28943,28932,29020,28998,28999,64021,29121,29182,29361,29374,29476,64022,29559,29629,29641,29654,29667,29650,29703,29685,29734,29738,29737,29742,29794,29833,29855,29953,30063,30338,30364,30366,30363,30374,64023,30534,21167,30753,30798,30820,30842,31024,64024,64025,64026,31124,64027,31131,31441,31463,64028,31467,31646,64029,32072,32092,32183,32160,32214,32338,32583,32673,64030,33537,33634,33663,33735,33782,33864,33972,34131,34137,34155,64031,34224,64032,64033,34823,35061,35346,35383,35449,35495,35518,35551,64034,35574,35667,35711,36080,36084,36114,36214,64035,36559,64036,64037,36967,37086,64038,37141,37159,37338,37335,37342,37357,37358,37348,37349,37382,37392,37386,37434,37440,37436,37454,37465,37457,37433,37479,37543,37495,37496,37607,37591,37593,37584,64039,37589,37600,37587,37669,37665,37627,64040,37662,37631,37661,37634,37744,37719,37796,37830,37854,37880,37937,37957,37960,38290,63964,64041,38557,38575,38707,38715,38723,38733,38735,38737,38741,38999,39013,64042,64043,39207,64044,39326,39502,39641,39644,39797,39794,39823,39857,39867,39936,40304,40299,64045,40473,40657,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];Object.defineProperty(M7,"__esModule",{value:!0});M7.EUCJPDecoder=void 0;var yy=s3,vy=f6,gy=py,my=_0,Ro=x3(),xy=w3(),B5=J2,wy=function(e){yy.__extends(t,e);function t(){var r=e!==null&&e.apply(this,arguments)||this;return r.jis0212Flag=!1,r.lead=0,r}return t.prototype.decode=function(r){var n,i=r.read();if(i===Ro.END_OF_BUFFER&&this.lead!==0)return this.lead=0,this.fail();if(i===Ro.END_OF_BUFFER&&this.lead===0)return xy.FINISHED;if(this.lead===142&&(0,B5.inRange)(i,161,223))return this.lead=0,65377-161+i;if(this.lead===143&&(0,B5.inRange)(i,161,254))return this.jis0212Flag=!0,this.lead=i,null;if(this.lead!==0){var o=this.lead;this.lead=0;var s=null;return(0,B5.inRange)(o,161,254)&&(0,B5.inRange)(i,161,254)&&(s=(n=(this.jis0212Flag?gy:vy)[(o-161)*94+(i-161)])!==null&&n!==void 0?n:null),this.jis0212Flag=!1,(0,B5.inRange)(i,161,254)||r.write(i),s??this.fail()}return(0,B5.isASCII)(i)?i:i===142||i===143||(0,B5.inRange)(i,161,254)?(this.lead=i,null):this.fail()},t}(my.AbstractDecoder);M7.EUCJPDecoder=wy;var z7={};Object.defineProperty(z7,"__esModule",{value:!0});z7.EUCJPEncoder=void 0;var _y=s3,Ey=f6,Sy=E0,by=x3(),Cy=w3(),nt=J2,Ay=function(e){_y.__extends(t,e);function t(){return e!==null&&e.apply(this,arguments)||this}return t.prototype.encode=function(r){var n=r.read();if(n===by.END_OF_BUFFER)return Cy.FINISHED;if((0,nt.isASCII)(n))return n;if(n===165)return 92;if(n===8254)return 126;if((0,nt.inRange)(n,65377,65439))return[142,n-65377+161];n===8722&&(n=65293);var i=(0,nt.indexOf)(Ey,n);if(i==null)return this.fail(n);var o=Math.floor(i/94)+161,s=i%94+161;return[o,s]},t}(Sy.AbstractEncoder);z7.EUCJPEncoder=Ay;var By=M7,Ty=z7,Iy=g2;(0,Iy.registerEncoding)("euc-jp",["cseucpkdfmtjapanese","euc-jp","x-euc-jp"],By.EUCJPDecoder,Ty.EUCJPEncoder);var j7={};const fc=[44034,44035,44037,44038,44043,44044,44045,44046,44047,44056,44062,44063,44065,44066,44067,44069,44070,44071,44072,44073,44074,44075,44078,44082,44083,44084,0,0,0,0,0,0,44085,44086,44087,44090,44091,44093,44094,44095,44097,44098,44099,44100,44101,44102,44103,44104,44105,44106,44108,44110,44111,44112,44113,44114,44115,44117,0,0,0,0,0,0,44118,44119,44121,44122,44123,44125,44126,44127,44128,44129,44130,44131,44132,44133,44134,44135,44136,44137,44138,44139,44140,44141,44142,44143,44146,44147,44149,44150,44153,44155,44156,44157,44158,44159,44162,44167,44168,44173,44174,44175,44177,44178,44179,44181,44182,44183,44184,44185,44186,44187,44190,44194,44195,44196,44197,44198,44199,44203,44205,44206,44209,44210,44211,44212,44213,44214,44215,44218,44222,44223,44224,44226,44227,44229,44230,44231,44233,44234,44235,44237,44238,44239,44240,44241,44242,44243,44244,44246,44248,44249,44250,44251,44252,44253,44254,44255,44258,44259,44261,44262,44265,44267,44269,44270,44274,44276,44279,44280,44281,44282,44283,44286,44287,44289,44290,44291,44293,44295,44296,44297,44298,44299,44302,44304,44306,44307,44308,44309,44310,44311,44313,44314,44315,44317,44318,44319,44321,44322,44323,44324,44325,44326,44327,44328,44330,44331,44334,44335,44336,44337,44338,44339,0,0,0,0,0,0,44342,44343,44345,44346,44347,44349,44350,44351,44352,44353,44354,44355,44358,44360,44362,44363,44364,44365,44366,44367,44369,44370,44371,44373,44374,44375,0,0,0,0,0,0,44377,44378,44379,44380,44381,44382,44383,44384,44386,44388,44389,44390,44391,44392,44393,44394,44395,44398,44399,44401,44402,44407,44408,44409,44410,44414,44416,44419,44420,44421,44422,44423,44426,44427,44429,44430,44431,44433,44434,44435,44436,44437,44438,44439,44440,44441,44442,44443,44446,44447,44448,44449,44450,44451,44453,44454,44455,44456,44457,44458,44459,44460,44461,44462,44463,44464,44465,44466,44467,44468,44469,44470,44472,44473,44474,44475,44476,44477,44478,44479,44482,44483,44485,44486,44487,44489,44490,44491,44492,44493,44494,44495,44498,44500,44501,44502,44503,44504,44505,44506,44507,44509,44510,44511,44513,44514,44515,44517,44518,44519,44520,44521,44522,44523,44524,44525,44526,44527,44528,44529,44530,44531,44532,44533,44534,44535,44538,44539,44541,44542,44546,44547,44548,44549,44550,44551,44554,44556,44558,44559,44560,44561,44562,44563,44565,44566,44567,44568,44569,44570,44571,44572,0,0,0,0,0,0,44573,44574,44575,44576,44577,44578,44579,44580,44581,44582,44583,44584,44585,44586,44587,44588,44589,44590,44591,44594,44595,44597,44598,44601,44603,44604,0,0,0,0,0,0,44605,44606,44607,44610,44612,44615,44616,44617,44619,44623,44625,44626,44627,44629,44631,44632,44633,44634,44635,44638,44642,44643,44644,44646,44647,44650,44651,44653,44654,44655,44657,44658,44659,44660,44661,44662,44663,44666,44670,44671,44672,44673,44674,44675,44678,44679,44680,44681,44682,44683,44685,44686,44687,44688,44689,44690,44691,44692,44693,44694,44695,44696,44697,44698,44699,44700,44701,44702,44703,44704,44705,44706,44707,44708,44709,44710,44711,44712,44713,44714,44715,44716,44717,44718,44719,44720,44721,44722,44723,44724,44725,44726,44727,44728,44729,44730,44731,44735,44737,44738,44739,44741,44742,44743,44744,44745,44746,44747,44750,44754,44755,44756,44757,44758,44759,44762,44763,44765,44766,44767,44768,44769,44770,44771,44772,44773,44774,44775,44777,44778,44780,44782,44783,44784,44785,44786,44787,44789,44790,44791,44793,44794,44795,44797,44798,44799,44800,44801,44802,44803,44804,44805,0,0,0,0,0,0,44806,44809,44810,44811,44812,44814,44815,44817,44818,44819,44820,44821,44822,44823,44824,44825,44826,44827,44828,44829,44830,44831,44832,44833,44834,44835,0,0,0,0,0,0,44836,44837,44838,44839,44840,44841,44842,44843,44846,44847,44849,44851,44853,44854,44855,44856,44857,44858,44859,44862,44864,44868,44869,44870,44871,44874,44875,44876,44877,44878,44879,44881,44882,44883,44884,44885,44886,44887,44888,44889,44890,44891,44894,44895,44896,44897,44898,44899,44902,44903,44904,44905,44906,44907,44908,44909,44910,44911,44912,44913,44914,44915,44916,44917,44918,44919,44920,44922,44923,44924,44925,44926,44927,44929,44930,44931,44933,44934,44935,44937,44938,44939,44940,44941,44942,44943,44946,44947,44948,44950,44951,44952,44953,44954,44955,44957,44958,44959,44960,44961,44962,44963,44964,44965,44966,44967,44968,44969,44970,44971,44972,44973,44974,44975,44976,44977,44978,44979,44980,44981,44982,44983,44986,44987,44989,44990,44991,44993,44994,44995,44996,44997,44998,45002,45004,45007,45008,45009,45010,45011,45013,45014,45015,45016,45017,45018,45019,45021,45022,45023,45024,45025,0,0,0,0,0,0,45026,45027,45028,45029,45030,45031,45034,45035,45036,45037,45038,45039,45042,45043,45045,45046,45047,45049,45050,45051,45052,45053,45054,45055,45058,45059,0,0,0,0,0,0,45061,45062,45063,45064,45065,45066,45067,45069,45070,45071,45073,45074,45075,45077,45078,45079,45080,45081,45082,45083,45086,45087,45088,45089,45090,45091,45092,45093,45094,45095,45097,45098,45099,45100,45101,45102,45103,45104,45105,45106,45107,45108,45109,45110,45111,45112,45113,45114,45115,45116,45117,45118,45119,45120,45121,45122,45123,45126,45127,45129,45131,45133,45135,45136,45137,45138,45142,45144,45146,45147,45148,45150,45151,45152,45153,45154,45155,45156,45157,45158,45159,45160,45161,45162,45163,45164,45165,45166,45167,45168,45169,45170,45171,45172,45173,45174,45175,45176,45177,45178,45179,45182,45183,45185,45186,45187,45189,45190,45191,45192,45193,45194,45195,45198,45200,45202,45203,45204,45205,45206,45207,45211,45213,45214,45219,45220,45221,45222,45223,45226,45232,45234,45238,45239,45241,45242,45243,45245,45246,45247,45248,45249,45250,45251,45254,45258,45259,45260,45261,45262,45263,45266,0,0,0,0,0,0,45267,45269,45270,45271,45273,45274,45275,45276,45277,45278,45279,45281,45282,45283,45284,45286,45287,45288,45289,45290,45291,45292,45293,45294,45295,45296,0,0,0,0,0,0,45297,45298,45299,45300,45301,45302,45303,45304,45305,45306,45307,45308,45309,45310,45311,45312,45313,45314,45315,45316,45317,45318,45319,45322,45325,45326,45327,45329,45332,45333,45334,45335,45338,45342,45343,45344,45345,45346,45350,45351,45353,45354,45355,45357,45358,45359,45360,45361,45362,45363,45366,45370,45371,45372,45373,45374,45375,45378,45379,45381,45382,45383,45385,45386,45387,45388,45389,45390,45391,45394,45395,45398,45399,45401,45402,45403,45405,45406,45407,45409,45410,45411,45412,45413,45414,45415,45416,45417,45418,45419,45420,45421,45422,45423,45424,45425,45426,45427,45428,45429,45430,45431,45434,45435,45437,45438,45439,45441,45443,45444,45445,45446,45447,45450,45452,45454,45455,45456,45457,45461,45462,45463,45465,45466,45467,45469,45470,45471,45472,45473,45474,45475,45476,45477,45478,45479,45481,45482,45483,45484,45485,45486,45487,45488,45489,45490,45491,45492,45493,45494,45495,45496,0,0,0,0,0,0,45497,45498,45499,45500,45501,45502,45503,45504,45505,45506,45507,45508,45509,45510,45511,45512,45513,45514,45515,45517,45518,45519,45521,45522,45523,45525,0,0,0,0,0,0,45526,45527,45528,45529,45530,45531,45534,45536,45537,45538,45539,45540,45541,45542,45543,45546,45547,45549,45550,45551,45553,45554,45555,45556,45557,45558,45559,45560,45562,45564,45566,45567,45568,45569,45570,45571,45574,45575,45577,45578,45581,45582,45583,45584,45585,45586,45587,45590,45592,45594,45595,45596,45597,45598,45599,45601,45602,45603,45604,45605,45606,45607,45608,45609,45610,45611,45612,45613,45614,45615,45616,45617,45618,45619,45621,45622,45623,45624,45625,45626,45627,45629,45630,45631,45632,45633,45634,45635,45636,45637,45638,45639,45640,45641,45642,45643,45644,45645,45646,45647,45648,45649,45650,45651,45652,45653,45654,45655,45657,45658,45659,45661,45662,45663,45665,45666,45667,45668,45669,45670,45671,45674,45675,45676,45677,45678,45679,45680,45681,45682,45683,45686,45687,45688,45689,45690,45691,45693,45694,45695,45696,45697,45698,45699,45702,45703,45704,45706,45707,45708,45709,45710,0,0,0,0,0,0,45711,45714,45715,45717,45718,45719,45723,45724,45725,45726,45727,45730,45732,45735,45736,45737,45739,45741,45742,45743,45745,45746,45747,45749,45750,45751,0,0,0,0,0,0,45752,45753,45754,45755,45756,45757,45758,45759,45760,45761,45762,45763,45764,45765,45766,45767,45770,45771,45773,45774,45775,45777,45779,45780,45781,45782,45783,45786,45788,45790,45791,45792,45793,45795,45799,45801,45802,45808,45809,45810,45814,45820,45821,45822,45826,45827,45829,45830,45831,45833,45834,45835,45836,45837,45838,45839,45842,45846,45847,45848,45849,45850,45851,45853,45854,45855,45856,45857,45858,45859,45860,45861,45862,45863,45864,45865,45866,45867,45868,45869,45870,45871,45872,45873,45874,45875,45876,45877,45878,45879,45880,45881,45882,45883,45884,45885,45886,45887,45888,45889,45890,45891,45892,45893,45894,45895,45896,45897,45898,45899,45900,45901,45902,45903,45904,45905,45906,45907,45911,45913,45914,45917,45920,45921,45922,45923,45926,45928,45930,45932,45933,45935,45938,45939,45941,45942,45943,45945,45946,45947,45948,45949,45950,45951,45954,45958,45959,45960,45961,45962,45963,45965,0,0,0,0,0,0,45966,45967,45969,45970,45971,45973,45974,45975,45976,45977,45978,45979,45980,45981,45982,45983,45986,45987,45988,45989,45990,45991,45993,45994,45995,45997,0,0,0,0,0,0,45998,45999,46e3,46001,46002,46003,46004,46005,46006,46007,46008,46009,46010,46011,46012,46013,46014,46015,46016,46017,46018,46019,46022,46023,46025,46026,46029,46031,46033,46034,46035,46038,46040,46042,46044,46046,46047,46049,46050,46051,46053,46054,46055,46057,46058,46059,46060,46061,46062,46063,46064,46065,46066,46067,46068,46069,46070,46071,46072,46073,46074,46075,46077,46078,46079,46080,46081,46082,46083,46084,46085,46086,46087,46088,46089,46090,46091,46092,46093,46094,46095,46097,46098,46099,46100,46101,46102,46103,46105,46106,46107,46109,46110,46111,46113,46114,46115,46116,46117,46118,46119,46122,46124,46125,46126,46127,46128,46129,46130,46131,46133,46134,46135,46136,46137,46138,46139,46140,46141,46142,46143,46144,46145,46146,46147,46148,46149,46150,46151,46152,46153,46154,46155,46156,46157,46158,46159,46162,46163,46165,46166,46167,46169,46170,46171,46172,46173,46174,46175,46178,46180,46182,0,0,0,0,0,0,46183,46184,46185,46186,46187,46189,46190,46191,46192,46193,46194,46195,46196,46197,46198,46199,46200,46201,46202,46203,46204,46205,46206,46207,46209,46210,0,0,0,0,0,0,46211,46212,46213,46214,46215,46217,46218,46219,46220,46221,46222,46223,46224,46225,46226,46227,46228,46229,46230,46231,46232,46233,46234,46235,46236,46238,46239,46240,46241,46242,46243,46245,46246,46247,46249,46250,46251,46253,46254,46255,46256,46257,46258,46259,46260,46262,46264,46266,46267,46268,46269,46270,46271,46273,46274,46275,46277,46278,46279,46281,46282,46283,46284,46285,46286,46287,46289,46290,46291,46292,46294,46295,46296,46297,46298,46299,46302,46303,46305,46306,46309,46311,46312,46313,46314,46315,46318,46320,46322,46323,46324,46325,46326,46327,46329,46330,46331,46332,46333,46334,46335,46336,46337,46338,46339,46340,46341,46342,46343,46344,46345,46346,46347,46348,46349,46350,46351,46352,46353,46354,46355,46358,46359,46361,46362,46365,46366,46367,46368,46369,46370,46371,46374,46379,46380,46381,46382,46383,46386,46387,46389,46390,46391,46393,46394,46395,46396,46397,46398,46399,46402,46406,0,0,0,0,0,0,46407,46408,46409,46410,46414,46415,46417,46418,46419,46421,46422,46423,46424,46425,46426,46427,46430,46434,46435,46436,46437,46438,46439,46440,46441,46442,0,0,0,0,0,0,46443,46444,46445,46446,46447,46448,46449,46450,46451,46452,46453,46454,46455,46456,46457,46458,46459,46460,46461,46462,46463,46464,46465,46466,46467,46468,46469,46470,46471,46472,46473,46474,46475,46476,46477,46478,46479,46480,46481,46482,46483,46484,46485,46486,46487,46488,46489,46490,46491,46492,46493,46494,46495,46498,46499,46501,46502,46503,46505,46508,46509,46510,46511,46514,46518,46519,46520,46521,46522,46526,46527,46529,46530,46531,46533,46534,46535,46536,46537,46538,46539,46542,46546,46547,46548,46549,46550,46551,46553,46554,46555,46556,46557,46558,46559,46560,46561,46562,46563,46564,46565,46566,46567,46568,46569,46570,46571,46573,46574,46575,46576,46577,46578,46579,46580,46581,46582,46583,46584,46585,46586,46587,46588,46589,46590,46591,46592,46593,46594,46595,46596,46597,46598,46599,46600,46601,46602,46603,46604,46605,46606,46607,46610,46611,46613,46614,46615,46617,46618,46619,46620,46621,0,0,0,0,0,0,46622,46623,46624,46625,46626,46627,46628,46630,46631,46632,46633,46634,46635,46637,46638,46639,46640,46641,46642,46643,46645,46646,46647,46648,46649,46650,0,0,0,0,0,0,46651,46652,46653,46654,46655,46656,46657,46658,46659,46660,46661,46662,46663,46665,46666,46667,46668,46669,46670,46671,46672,46673,46674,46675,46676,46677,46678,46679,46680,46681,46682,46683,46684,46685,46686,46687,46688,46689,46690,46691,46693,46694,46695,46697,46698,46699,46700,46701,46702,46703,46704,46705,46706,46707,46708,46709,46710,46711,46712,46713,46714,46715,46716,46717,46718,46719,46720,46721,46722,46723,46724,46725,46726,46727,46728,46729,46730,46731,46732,46733,46734,46735,46736,46737,46738,46739,46740,46741,46742,46743,46744,46745,46746,46747,46750,46751,46753,46754,46755,46757,46758,46759,46760,46761,46762,46765,46766,46767,46768,46770,46771,46772,46773,46774,46775,46776,46777,46778,46779,46780,46781,46782,46783,46784,46785,46786,46787,46788,46789,46790,46791,46792,46793,46794,46795,46796,46797,46798,46799,46800,46801,46802,46803,46805,46806,46807,46808,46809,46810,46811,46812,46813,0,0,0,0,0,0,46814,46815,46816,46817,46818,46819,46820,46821,46822,46823,46824,46825,46826,46827,46828,46829,46830,46831,46833,46834,46835,46837,46838,46839,46841,46842,0,0,0,0,0,0,46843,46844,46845,46846,46847,46850,46851,46852,46854,46855,46856,46857,46858,46859,46860,46861,46862,46863,46864,46865,46866,46867,46868,46869,46870,46871,46872,46873,46874,46875,46876,46877,46878,46879,46880,46881,46882,46883,46884,46885,46886,46887,46890,46891,46893,46894,46897,46898,46899,46900,46901,46902,46903,46906,46908,46909,46910,46911,46912,46913,46914,46915,46917,46918,46919,46921,46922,46923,46925,46926,46927,46928,46929,46930,46931,46934,46935,46936,46937,46938,46939,46940,46941,46942,46943,46945,46946,46947,46949,46950,46951,46953,46954,46955,46956,46957,46958,46959,46962,46964,46966,46967,46968,46969,46970,46971,46974,46975,46977,46978,46979,46981,46982,46983,46984,46985,46986,46987,46990,46995,46996,46997,47002,47003,47005,47006,47007,47009,47010,47011,47012,47013,47014,47015,47018,47022,47023,47024,47025,47026,47027,47030,47031,47033,47034,47035,47036,47037,47038,47039,47040,47041,0,0,0,0,0,0,47042,47043,47044,47045,47046,47048,47050,47051,47052,47053,47054,47055,47056,47057,47058,47059,47060,47061,47062,47063,47064,47065,47066,47067,47068,47069,0,0,0,0,0,0,47070,47071,47072,47073,47074,47075,47076,47077,47078,47079,47080,47081,47082,47083,47086,47087,47089,47090,47091,47093,47094,47095,47096,47097,47098,47099,47102,47106,47107,47108,47109,47110,47114,47115,47117,47118,47119,47121,47122,47123,47124,47125,47126,47127,47130,47132,47134,47135,47136,47137,47138,47139,47142,47143,47145,47146,47147,47149,47150,47151,47152,47153,47154,47155,47158,47162,47163,47164,47165,47166,47167,47169,47170,47171,47173,47174,47175,47176,47177,47178,47179,47180,47181,47182,47183,47184,47186,47188,47189,47190,47191,47192,47193,47194,47195,47198,47199,47201,47202,47203,47205,47206,47207,47208,47209,47210,47211,47214,47216,47218,47219,47220,47221,47222,47223,47225,47226,47227,47229,47230,47231,47232,47233,47234,47235,47236,47237,47238,47239,47240,47241,47242,47243,47244,47246,47247,47248,47249,47250,47251,47252,47253,47254,47255,47256,47257,47258,47259,47260,47261,47262,47263,0,0,0,0,0,0,47264,47265,47266,47267,47268,47269,47270,47271,47273,47274,47275,47276,47277,47278,47279,47281,47282,47283,47285,47286,47287,47289,47290,47291,47292,47293,0,0,0,0,0,0,47294,47295,47298,47300,47302,47303,47304,47305,47306,47307,47309,47310,47311,47313,47314,47315,47317,47318,47319,47320,47321,47322,47323,47324,47326,47328,47330,47331,47332,47333,47334,47335,47338,47339,47341,47342,47343,47345,47346,47347,47348,47349,47350,47351,47354,47356,47358,47359,47360,47361,47362,47363,47365,47366,47367,47368,47369,47370,47371,47372,47373,47374,47375,47376,47377,47378,47379,47380,47381,47382,47383,47385,47386,47387,47388,47389,47390,47391,47393,47394,47395,47396,47397,47398,47399,47400,47401,47402,47403,47404,47405,47406,47407,47408,47409,47410,47411,47412,47413,47414,47415,47416,47417,47418,47419,47422,47423,47425,47426,47427,47429,47430,47431,47432,47433,47434,47435,47437,47438,47440,47442,47443,47444,47445,47446,47447,47450,47451,47453,47454,47455,47457,47458,47459,47460,47461,47462,47463,47466,47468,47470,47471,47472,47473,47474,47475,47478,47479,47481,47482,47483,47485,0,0,0,0,0,0,47486,47487,47488,47489,47490,47491,47494,47496,47499,47500,47503,47504,47505,47506,47507,47508,47509,47510,47511,47512,47513,47514,47515,47516,47517,47518,0,0,0,0,0,0,47519,47520,47521,47522,47523,47524,47525,47526,47527,47528,47529,47530,47531,47534,47535,47537,47538,47539,47541,47542,47543,47544,47545,47546,47547,47550,47552,47554,47555,47556,47557,47558,47559,47562,47563,47565,47571,47572,47573,47574,47575,47578,47580,47583,47584,47586,47590,47591,47593,47594,47595,47597,47598,47599,47600,47601,47602,47603,47606,47611,47612,47613,47614,47615,47618,47619,47620,47621,47622,47623,47625,47626,47627,47628,47629,47630,47631,47632,47633,47634,47635,47636,47638,47639,47640,47641,47642,47643,47644,47645,47646,47647,47648,47649,47650,47651,47652,47653,47654,47655,47656,47657,47658,47659,47660,47661,47662,47663,47664,47665,47666,47667,47668,47669,47670,47671,47674,47675,47677,47678,47679,47681,47683,47684,47685,47686,47687,47690,47692,47695,47696,47697,47698,47702,47703,47705,47706,47707,47709,47710,47711,47712,47713,47714,47715,47718,47722,47723,47724,47725,47726,47727,0,0,0,0,0,0,47730,47731,47733,47734,47735,47737,47738,47739,47740,47741,47742,47743,47744,47745,47746,47750,47752,47753,47754,47755,47757,47758,47759,47760,47761,47762,0,0,0,0,0,0,47763,47764,47765,47766,47767,47768,47769,47770,47771,47772,47773,47774,47775,47776,47777,47778,47779,47780,47781,47782,47783,47786,47789,47790,47791,47793,47795,47796,47797,47798,47799,47802,47804,47806,47807,47808,47809,47810,47811,47813,47814,47815,47817,47818,47819,47820,47821,47822,47823,47824,47825,47826,47827,47828,47829,47830,47831,47834,47835,47836,47837,47838,47839,47840,47841,47842,47843,47844,47845,47846,47847,47848,47849,47850,47851,47852,47853,47854,47855,47856,47857,47858,47859,47860,47861,47862,47863,47864,47865,47866,47867,47869,47870,47871,47873,47874,47875,47877,47878,47879,47880,47881,47882,47883,47884,47886,47888,47890,47891,47892,47893,47894,47895,47897,47898,47899,47901,47902,47903,47905,47906,47907,47908,47909,47910,47911,47912,47914,47916,47917,47918,47919,47920,47921,47922,47923,47927,47929,47930,47935,47936,47937,47938,47939,47942,47944,47946,47947,47948,47950,47953,47954,0,0,0,0,0,0,47955,47957,47958,47959,47961,47962,47963,47964,47965,47966,47967,47968,47970,47972,47973,47974,47975,47976,47977,47978,47979,47981,47982,47983,47984,47985,0,0,0,0,0,0,47986,47987,47988,47989,47990,47991,47992,47993,47994,47995,47996,47997,47998,47999,48e3,48001,48002,48003,48004,48005,48006,48007,48009,48010,48011,48013,48014,48015,48017,48018,48019,48020,48021,48022,48023,48024,48025,48026,48027,48028,48029,48030,48031,48032,48033,48034,48035,48037,48038,48039,48041,48042,48043,48045,48046,48047,48048,48049,48050,48051,48053,48054,48056,48057,48058,48059,48060,48061,48062,48063,48065,48066,48067,48069,48070,48071,48073,48074,48075,48076,48077,48078,48079,48081,48082,48084,48085,48086,48087,48088,48089,48090,48091,48092,48093,48094,48095,48096,48097,48098,48099,48100,48101,48102,48103,48104,48105,48106,48107,48108,48109,48110,48111,48112,48113,48114,48115,48116,48117,48118,48119,48122,48123,48125,48126,48129,48131,48132,48133,48134,48135,48138,48142,48144,48146,48147,48153,48154,48160,48161,48162,48163,48166,48168,48170,48171,48172,48174,48175,48178,48179,48181,0,0,0,0,0,0,48182,48183,48185,48186,48187,48188,48189,48190,48191,48194,48198,48199,48200,48202,48203,48206,48207,48209,48210,48211,48212,48213,48214,48215,48216,48217,0,0,0,0,0,0,48218,48219,48220,48222,48223,48224,48225,48226,48227,48228,48229,48230,48231,48232,48233,48234,48235,48236,48237,48238,48239,48240,48241,48242,48243,48244,48245,48246,48247,48248,48249,48250,48251,48252,48253,48254,48255,48256,48257,48258,48259,48262,48263,48265,48266,48269,48271,48272,48273,48274,48275,48278,48280,48283,48284,48285,48286,48287,48290,48291,48293,48294,48297,48298,48299,48300,48301,48302,48303,48306,48310,48311,48312,48313,48314,48315,48318,48319,48321,48322,48323,48325,48326,48327,48328,48329,48330,48331,48332,48334,48338,48339,48340,48342,48343,48345,48346,48347,48349,48350,48351,48352,48353,48354,48355,48356,48357,48358,48359,48360,48361,48362,48363,48364,48365,48366,48367,48368,48369,48370,48371,48375,48377,48378,48379,48381,48382,48383,48384,48385,48386,48387,48390,48392,48394,48395,48396,48397,48398,48399,48401,48402,48403,48405,48406,48407,48408,48409,48410,48411,48412,48413,0,0,0,0,0,0,48414,48415,48416,48417,48418,48419,48421,48422,48423,48424,48425,48426,48427,48429,48430,48431,48432,48433,48434,48435,48436,48437,48438,48439,48440,48441,0,0,0,0,0,0,48442,48443,48444,48445,48446,48447,48449,48450,48451,48452,48453,48454,48455,48458,48459,48461,48462,48463,48465,48466,48467,48468,48469,48470,48471,48474,48475,48476,48477,48478,48479,48480,48481,48482,48483,48485,48486,48487,48489,48490,48491,48492,48493,48494,48495,48496,48497,48498,48499,48500,48501,48502,48503,48504,48505,48506,48507,48508,48509,48510,48511,48514,48515,48517,48518,48523,48524,48525,48526,48527,48530,48532,48534,48535,48536,48539,48541,48542,48543,48544,48545,48546,48547,48549,48550,48551,48552,48553,48554,48555,48556,48557,48558,48559,48561,48562,48563,48564,48565,48566,48567,48569,48570,48571,48572,48573,48574,48575,48576,48577,48578,48579,48580,48581,48582,48583,48584,48585,48586,48587,48588,48589,48590,48591,48592,48593,48594,48595,48598,48599,48601,48602,48603,48605,48606,48607,48608,48609,48610,48611,48612,48613,48614,48615,48616,48618,48619,48620,48621,48622,48623,48625,0,0,0,0,0,0,48626,48627,48629,48630,48631,48633,48634,48635,48636,48637,48638,48639,48641,48642,48644,48646,48647,48648,48649,48650,48651,48654,48655,48657,48658,48659,0,0,0,0,0,0,48661,48662,48663,48664,48665,48666,48667,48670,48672,48673,48674,48675,48676,48677,48678,48679,48680,48681,48682,48683,48684,48685,48686,48687,48688,48689,48690,48691,48692,48693,48694,48695,48696,48697,48698,48699,48700,48701,48702,48703,48704,48705,48706,48707,48710,48711,48713,48714,48715,48717,48719,48720,48721,48722,48723,48726,48728,48732,48733,48734,48735,48738,48739,48741,48742,48743,48745,48747,48748,48749,48750,48751,48754,48758,48759,48760,48761,48762,48766,48767,48769,48770,48771,48773,48774,48775,48776,48777,48778,48779,48782,48786,48787,48788,48789,48790,48791,48794,48795,48796,48797,48798,48799,48800,48801,48802,48803,48804,48805,48806,48807,48809,48810,48811,48812,48813,48814,48815,48816,48817,48818,48819,48820,48821,48822,48823,48824,48825,48826,48827,48828,48829,48830,48831,48832,48833,48834,48835,48836,48837,48838,48839,48840,48841,48842,48843,48844,48845,48846,48847,48850,48851,0,0,0,0,0,0,48853,48854,48857,48858,48859,48860,48861,48862,48863,48865,48866,48870,48871,48872,48873,48874,48875,48877,48878,48879,48880,48881,48882,48883,48884,48885,0,0,0,0,0,0,48886,48887,48888,48889,48890,48891,48892,48893,48894,48895,48896,48898,48899,48900,48901,48902,48903,48906,48907,48908,48909,48910,48911,48912,48913,48914,48915,48916,48917,48918,48919,48922,48926,48927,48928,48929,48930,48931,48932,48933,48934,48935,48936,48937,48938,48939,48940,48941,48942,48943,48944,48945,48946,48947,48948,48949,48950,48951,48952,48953,48954,48955,48956,48957,48958,48959,48962,48963,48965,48966,48967,48969,48970,48971,48972,48973,48974,48975,48978,48979,48980,48982,48983,48984,48985,48986,48987,48988,48989,48990,48991,48992,48993,48994,48995,48996,48997,48998,48999,49e3,49001,49002,49003,49004,49005,49006,49007,49008,49009,49010,49011,49012,49013,49014,49015,49016,49017,49018,49019,49020,49021,49022,49023,49024,49025,49026,49027,49028,49029,49030,49031,49032,49033,49034,49035,49036,49037,49038,49039,49040,49041,49042,49043,49045,49046,49047,49048,49049,49050,49051,49052,49053,0,0,0,0,0,0,49054,49055,49056,49057,49058,49059,49060,49061,49062,49063,49064,49065,49066,49067,49068,49069,49070,49071,49073,49074,49075,49076,49077,49078,49079,49080,0,0,0,0,0,0,49081,49082,49083,49084,49085,49086,49087,49088,49089,49090,49091,49092,49094,49095,49096,49097,49098,49099,49102,49103,49105,49106,49107,49109,49110,49111,49112,49113,49114,49115,49117,49118,49120,49122,49123,49124,49125,49126,49127,49128,49129,49130,49131,49132,49133,49134,49135,49136,49137,49138,49139,49140,49141,49142,49143,49144,49145,49146,49147,49148,49149,49150,49151,49152,49153,49154,49155,49156,49157,49158,49159,49160,49161,49162,49163,49164,49165,49166,49167,49168,49169,49170,49171,49172,49173,49174,49175,49176,49177,49178,49179,49180,49181,49182,49183,49184,49185,49186,49187,49188,49189,49190,49191,49192,49193,49194,49195,49196,49197,49198,49199,49200,49201,49202,49203,49204,49205,49206,49207,49208,49209,49210,49211,49213,49214,49215,49216,49217,49218,49219,49220,49221,49222,49223,49224,49225,49226,49227,49228,49229,49230,49231,49232,49234,49235,49236,49237,49238,49239,49241,49242,49243,0,0,0,0,0,0,49245,49246,49247,49249,49250,49251,49252,49253,49254,49255,49258,49259,49260,49261,49262,49263,49264,49265,49266,49267,49268,49269,49270,49271,49272,49273,0,0,0,0,0,0,49274,49275,49276,49277,49278,49279,49280,49281,49282,49283,49284,49285,49286,49287,49288,49289,49290,49291,49292,49293,49294,49295,49298,49299,49301,49302,49303,49305,49306,49307,49308,49309,49310,49311,49314,49316,49318,49319,49320,49321,49322,49323,49326,49329,49330,49335,49336,49337,49338,49339,49342,49346,49347,49348,49350,49351,49354,49355,49357,49358,49359,49361,49362,49363,49364,49365,49366,49367,49370,49374,49375,49376,49377,49378,49379,49382,49383,49385,49386,49387,49389,49390,49391,49392,49393,49394,49395,49398,49400,49402,49403,49404,49405,49406,49407,49409,49410,49411,49413,49414,49415,49417,49418,49419,49420,49421,49422,49423,49425,49426,49427,49428,49430,49431,49432,49433,49434,49435,49441,49442,49445,49448,49449,49450,49451,49454,49458,49459,49460,49461,49463,49466,49467,49469,49470,49471,49473,49474,49475,49476,49477,49478,49479,49482,49486,49487,49488,49489,49490,49491,49494,49495,0,0,0,0,0,0,49497,49498,49499,49501,49502,49503,49504,49505,49506,49507,49510,49514,49515,49516,49517,49518,49519,49521,49522,49523,49525,49526,49527,49529,49530,49531,0,0,0,0,0,0,49532,49533,49534,49535,49536,49537,49538,49539,49540,49542,49543,49544,49545,49546,49547,49551,49553,49554,49555,49557,49559,49560,49561,49562,49563,49566,49568,49570,49571,49572,49574,49575,49578,49579,49581,49582,49583,49585,49586,49587,49588,49589,49590,49591,49592,49593,49594,49595,49596,49598,49599,49600,49601,49602,49603,49605,49606,49607,49609,49610,49611,49613,49614,49615,49616,49617,49618,49619,49621,49622,49625,49626,49627,49628,49629,49630,49631,49633,49634,49635,49637,49638,49639,49641,49642,49643,49644,49645,49646,49647,49650,49652,49653,49654,49655,49656,49657,49658,49659,49662,49663,49665,49666,49667,49669,49670,49671,49672,49673,49674,49675,49678,49680,49682,49683,49684,49685,49686,49687,49690,49691,49693,49694,49697,49698,49699,49700,49701,49702,49703,49706,49708,49710,49712,49715,49717,49718,49719,49720,49721,49722,49723,49724,49725,49726,49727,49728,49729,49730,49731,49732,49733,0,0,0,0,0,0,49734,49735,49737,49738,49739,49740,49741,49742,49743,49746,49747,49749,49750,49751,49753,49754,49755,49756,49757,49758,49759,49761,49762,49763,49764,49766,0,0,0,0,0,0,49767,49768,49769,49770,49771,49774,49775,49777,49778,49779,49781,49782,49783,49784,49785,49786,49787,49790,49792,49794,49795,49796,49797,49798,49799,49802,49803,49804,49805,49806,49807,49809,49810,49811,49812,49813,49814,49815,49817,49818,49820,49822,49823,49824,49825,49826,49827,49830,49831,49833,49834,49835,49838,49839,49840,49841,49842,49843,49846,49848,49850,49851,49852,49853,49854,49855,49856,49857,49858,49859,49860,49861,49862,49863,49864,49865,49866,49867,49868,49869,49870,49871,49872,49873,49874,49875,49876,49877,49878,49879,49880,49881,49882,49883,49886,49887,49889,49890,49893,49894,49895,49896,49897,49898,49902,49904,49906,49907,49908,49909,49911,49914,49917,49918,49919,49921,49922,49923,49924,49925,49926,49927,49930,49931,49934,49935,49936,49937,49938,49942,49943,49945,49946,49947,49949,49950,49951,49952,49953,49954,49955,49958,49959,49962,49963,49964,49965,49966,49967,49968,49969,49970,0,0,0,0,0,0,49971,49972,49973,49974,49975,49976,49977,49978,49979,49980,49981,49982,49983,49984,49985,49986,49987,49988,49990,49991,49992,49993,49994,49995,49996,49997,0,0,0,0,0,0,49998,49999,5e4,50001,50002,50003,50004,50005,50006,50007,50008,50009,50010,50011,50012,50013,50014,50015,50016,50017,50018,50019,50020,50021,50022,50023,50026,50027,50029,50030,50031,50033,50035,50036,50037,50038,50039,50042,50043,50046,50047,50048,50049,50050,50051,50053,50054,50055,50057,50058,50059,50061,50062,50063,50064,50065,50066,50067,50068,50069,50070,50071,50072,50073,50074,50075,50076,50077,50078,50079,50080,50081,50082,50083,50084,50085,50086,50087,50088,50089,50090,50091,50092,50093,50094,50095,50096,50097,50098,50099,50100,50101,50102,50103,50104,50105,50106,50107,50108,50109,50110,50111,50113,50114,50115,50116,50117,50118,50119,50120,50121,50122,50123,50124,50125,50126,50127,50128,50129,50130,50131,50132,50133,50134,50135,50138,50139,50141,50142,50145,50147,50148,50149,50150,50151,50154,50155,50156,50158,50159,50160,50161,50162,50163,50166,50167,50169,50170,50171,50172,50173,50174,0,0,0,0,0,0,50175,50176,50177,50178,50179,50180,50181,50182,50183,50185,50186,50187,50188,50189,50190,50191,50193,50194,50195,50196,50197,50198,50199,50200,50201,50202,0,0,0,0,0,0,50203,50204,50205,50206,50207,50208,50209,50210,50211,50213,50214,50215,50216,50217,50218,50219,50221,50222,50223,50225,50226,50227,50229,50230,50231,50232,50233,50234,50235,50238,50239,50240,50241,50242,50243,50244,50245,50246,50247,50249,50250,50251,50252,50253,50254,50255,50256,50257,50258,50259,50260,50261,50262,50263,50264,50265,50266,50267,50268,50269,50270,50271,50272,50273,50274,50275,50278,50279,50281,50282,50283,50285,50286,50287,50288,50289,50290,50291,50294,50295,50296,50298,50299,50300,50301,50302,50303,50305,50306,50307,50308,50309,50310,50311,50312,50313,50314,50315,50316,50317,50318,50319,50320,50321,50322,50323,50325,50326,50327,50328,50329,50330,50331,50333,50334,50335,50336,50337,50338,50339,50340,50341,50342,50343,50344,50345,50346,50347,50348,50349,50350,50351,50352,50353,50354,50355,50356,50357,50358,50359,50361,50362,50363,50365,50366,50367,50368,50369,50370,50371,50372,50373,0,0,0,0,0,0,50374,50375,50376,50377,50378,50379,50380,50381,50382,50383,50384,50385,50386,50387,50388,50389,50390,50391,50392,50393,50394,50395,50396,50397,50398,50399,0,0,0,0,0,0,50400,50401,50402,50403,50404,50405,50406,50407,50408,50410,50411,50412,50413,50414,50415,50418,50419,50421,50422,50423,50425,50427,50428,50429,50430,50434,50435,50436,50437,50438,50439,50440,50441,50442,50443,50445,50446,50447,50449,50450,50451,50453,50454,50455,50456,50457,50458,50459,50461,50462,50463,50464,50465,50466,50467,50468,50469,50470,50471,50474,50475,50477,50478,50479,50481,50482,50483,50484,50485,50486,50487,50490,50492,50494,50495,50496,50497,50498,50499,50502,50503,50507,50511,50512,50513,50514,50518,50522,50523,50524,50527,50530,50531,50533,50534,50535,50537,50538,50539,50540,50541,50542,50543,50546,50550,50551,50552,50553,50554,50555,50558,50559,50561,50562,50563,50565,50566,50568,50569,50570,50571,50574,50576,50578,50579,50580,50582,50585,50586,50587,50589,50590,50591,50593,50594,50595,50596,50597,50598,50599,50600,50602,50603,50604,50605,50606,50607,50608,50609,50610,50611,50614,0,0,0,0,0,0,50615,50618,50623,50624,50625,50626,50627,50635,50637,50639,50642,50643,50645,50646,50647,50649,50650,50651,50652,50653,50654,50655,50658,50660,50662,50663,0,0,0,0,0,0,50664,50665,50666,50667,50671,50673,50674,50675,50677,50680,50681,50682,50683,50690,50691,50692,50697,50698,50699,50701,50702,50703,50705,50706,50707,50708,50709,50710,50711,50714,50717,50718,50719,50720,50721,50722,50723,50726,50727,50729,50730,50731,50735,50737,50738,50742,50744,50746,50748,50749,50750,50751,50754,50755,50757,50758,50759,50761,50762,50763,50764,50765,50766,50767,50770,50774,50775,50776,50777,50778,50779,50782,50783,50785,50786,50787,50788,50789,50790,50791,50792,50793,50794,50795,50797,50798,50800,50802,50803,50804,50805,50806,50807,50810,50811,50813,50814,50815,50817,50818,50819,50820,50821,50822,50823,50826,50828,50830,50831,50832,50833,50834,50835,50838,50839,50841,50842,50843,50845,50846,50847,50848,50849,50850,50851,50854,50856,50858,50859,50860,50861,50862,50863,50866,50867,50869,50870,50871,50875,50876,50877,50878,50879,50882,50884,50886,50887,50888,50889,50890,50891,50894,0,0,0,0,0,0,50895,50897,50898,50899,50901,50902,50903,50904,50905,50906,50907,50910,50911,50914,50915,50916,50917,50918,50919,50922,50923,50925,50926,50927,50929,50930,0,0,0,0,0,0,50931,50932,50933,50934,50935,50938,50939,50940,50942,50943,50944,50945,50946,50947,50950,50951,50953,50954,50955,50957,50958,50959,50960,50961,50962,50963,50966,50968,50970,50971,50972,50973,50974,50975,50978,50979,50981,50982,50983,50985,50986,50987,50988,50989,50990,50991,50994,50996,50998,51e3,51001,51002,51003,51006,51007,51009,51010,51011,51013,51014,51015,51016,51017,51019,51022,51024,51033,51034,51035,51037,51038,51039,51041,51042,51043,51044,51045,51046,51047,51049,51050,51052,51053,51054,51055,51056,51057,51058,51059,51062,51063,51065,51066,51067,51071,51072,51073,51074,51078,51083,51084,51085,51087,51090,51091,51093,51097,51099,51100,51101,51102,51103,51106,51111,51112,51113,51114,51115,51118,51119,51121,51122,51123,51125,51126,51127,51128,51129,51130,51131,51134,51138,51139,51140,51141,51142,51143,51146,51147,51149,51151,51153,51154,51155,51156,51157,51158,51159,51161,51162,51163,51164,0,0,0,0,0,0,51166,51167,51168,51169,51170,51171,51173,51174,51175,51177,51178,51179,51181,51182,51183,51184,51185,51186,51187,51188,51189,51190,51191,51192,51193,51194,0,0,0,0,0,0,51195,51196,51197,51198,51199,51202,51203,51205,51206,51207,51209,51211,51212,51213,51214,51215,51218,51220,51223,51224,51225,51226,51227,51230,51231,51233,51234,51235,51237,51238,51239,51240,51241,51242,51243,51246,51248,51250,51251,51252,51253,51254,51255,51257,51258,51259,51261,51262,51263,51265,51266,51267,51268,51269,51270,51271,51274,51275,51278,51279,51280,51281,51282,51283,51285,51286,51287,51288,51289,51290,51291,51292,51293,51294,51295,51296,51297,51298,51299,51300,51301,51302,51303,51304,51305,51306,51307,51308,51309,51310,51311,51314,51315,51317,51318,51319,51321,51323,51324,51325,51326,51327,51330,51332,51336,51337,51338,51342,51343,51344,51345,51346,51347,51349,51350,51351,51352,51353,51354,51355,51356,51358,51360,51362,51363,51364,51365,51366,51367,51369,51370,51371,51372,51373,51374,51375,51376,51377,51378,51379,51380,51381,51382,51383,51384,51385,51386,51387,51390,51391,51392,51393,0,0,0,0,0,0,51394,51395,51397,51398,51399,51401,51402,51403,51405,51406,51407,51408,51409,51410,51411,51414,51416,51418,51419,51420,51421,51422,51423,51426,51427,51429,0,0,0,0,0,0,51430,51431,51432,51433,51434,51435,51436,51437,51438,51439,51440,51441,51442,51443,51444,51446,51447,51448,51449,51450,51451,51454,51455,51457,51458,51459,51463,51464,51465,51466,51467,51470,12288,12289,12290,183,8229,8230,168,12291,173,8213,8741,65340,8764,8216,8217,8220,8221,12308,12309,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,177,215,247,8800,8804,8805,8734,8756,176,8242,8243,8451,8491,65504,65505,65509,9794,9792,8736,8869,8978,8706,8711,8801,8786,167,8251,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,9661,9660,8594,8592,8593,8595,8596,12307,8810,8811,8730,8765,8733,8757,8747,8748,8712,8715,8838,8839,8834,8835,8746,8745,8743,8744,65506,51472,51474,51475,51476,51477,51478,51479,51481,51482,51483,51484,51485,51486,51487,51488,51489,51490,51491,51492,51493,51494,51495,51496,51497,51498,51499,0,0,0,0,0,0,51501,51502,51503,51504,51505,51506,51507,51509,51510,51511,51512,51513,51514,51515,51516,51517,51518,51519,51520,51521,51522,51523,51524,51525,51526,51527,0,0,0,0,0,0,51528,51529,51530,51531,51532,51533,51534,51535,51538,51539,51541,51542,51543,51545,51546,51547,51548,51549,51550,51551,51554,51556,51557,51558,51559,51560,51561,51562,51563,51565,51566,51567,8658,8660,8704,8707,180,65374,711,728,733,730,729,184,731,161,191,720,8750,8721,8719,164,8457,8240,9665,9664,9655,9654,9828,9824,9825,9829,9831,9827,8857,9672,9635,9680,9681,9618,9636,9637,9640,9639,9638,9641,9832,9743,9742,9756,9758,182,8224,8225,8597,8599,8601,8598,8600,9837,9833,9834,9836,12927,12828,8470,13255,8482,13250,13272,8481,8364,174,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51569,51570,51571,51573,51574,51575,51576,51577,51578,51579,51581,51582,51583,51584,51585,51586,51587,51588,51589,51590,51591,51594,51595,51597,51598,51599,0,0,0,0,0,0,51601,51602,51603,51604,51605,51606,51607,51610,51612,51614,51615,51616,51617,51618,51619,51620,51621,51622,51623,51624,51625,51626,51627,51628,51629,51630,0,0,0,0,0,0,51631,51632,51633,51634,51635,51636,51637,51638,51639,51640,51641,51642,51643,51644,51645,51646,51647,51650,51651,51653,51654,51657,51659,51660,51661,51662,51663,51666,51668,51671,51672,51675,65281,65282,65283,65284,65285,65286,65287,65288,65289,65290,65291,65292,65293,65294,65295,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,65306,65307,65308,65309,65310,65311,65312,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65339,65510,65341,65342,65343,65344,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,65371,65372,65373,65507,51678,51679,51681,51683,51685,51686,51688,51689,51690,51691,51694,51698,51699,51700,51701,51702,51703,51706,51707,51709,51710,51711,51713,51714,51715,51716,0,0,0,0,0,0,51717,51718,51719,51722,51726,51727,51728,51729,51730,51731,51733,51734,51735,51737,51738,51739,51740,51741,51742,51743,51744,51745,51746,51747,51748,51749,0,0,0,0,0,0,51750,51751,51752,51754,51755,51756,51757,51758,51759,51760,51761,51762,51763,51764,51765,51766,51767,51768,51769,51770,51771,51772,51773,51774,51775,51776,51777,51778,51779,51780,51781,51782,12593,12594,12595,12596,12597,12598,12599,12600,12601,12602,12603,12604,12605,12606,12607,12608,12609,12610,12611,12612,12613,12614,12615,12616,12617,12618,12619,12620,12621,12622,12623,12624,12625,12626,12627,12628,12629,12630,12631,12632,12633,12634,12635,12636,12637,12638,12639,12640,12641,12642,12643,12644,12645,12646,12647,12648,12649,12650,12651,12652,12653,12654,12655,12656,12657,12658,12659,12660,12661,12662,12663,12664,12665,12666,12667,12668,12669,12670,12671,12672,12673,12674,12675,12676,12677,12678,12679,12680,12681,12682,12683,12684,12685,12686,51783,51784,51785,51786,51787,51790,51791,51793,51794,51795,51797,51798,51799,51800,51801,51802,51803,51806,51810,51811,51812,51813,51814,51815,51817,51818,0,0,0,0,0,0,51819,51820,51821,51822,51823,51824,51825,51826,51827,51828,51829,51830,51831,51832,51833,51834,51835,51836,51838,51839,51840,51841,51842,51843,51845,51846,0,0,0,0,0,0,51847,51848,51849,51850,51851,51852,51853,51854,51855,51856,51857,51858,51859,51860,51861,51862,51863,51865,51866,51867,51868,51869,51870,51871,51872,51873,51874,51875,51876,51877,51878,51879,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,0,0,0,0,0,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,0,0,0,0,0,0,0,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,0,0,0,0,0,0,0,0,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,0,0,0,0,0,0,51880,51881,51882,51883,51884,51885,51886,51887,51888,51889,51890,51891,51892,51893,51894,51895,51896,51897,51898,51899,51902,51903,51905,51906,51907,51909,0,0,0,0,0,0,51910,51911,51912,51913,51914,51915,51918,51920,51922,51924,51925,51926,51927,51930,51931,51932,51933,51934,51935,51937,51938,51939,51940,51941,51942,51943,0,0,0,0,0,0,51944,51945,51946,51947,51949,51950,51951,51952,51953,51954,51955,51957,51958,51959,51960,51961,51962,51963,51964,51965,51966,51967,51968,51969,51970,51971,51972,51973,51974,51975,51977,51978,9472,9474,9484,9488,9496,9492,9500,9516,9508,9524,9532,9473,9475,9487,9491,9499,9495,9507,9523,9515,9531,9547,9504,9519,9512,9527,9535,9501,9520,9509,9528,9538,9490,9489,9498,9497,9494,9493,9486,9485,9502,9503,9505,9506,9510,9511,9513,9514,9517,9518,9521,9522,9525,9526,9529,9530,9533,9534,9536,9537,9539,9540,9541,9542,9543,9544,9545,9546,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51979,51980,51981,51982,51983,51985,51986,51987,51989,51990,51991,51993,51994,51995,51996,51997,51998,51999,52002,52003,52004,52005,52006,52007,52008,52009,0,0,0,0,0,0,52010,52011,52012,52013,52014,52015,52016,52017,52018,52019,52020,52021,52022,52023,52024,52025,52026,52027,52028,52029,52030,52031,52032,52034,52035,52036,0,0,0,0,0,0,52037,52038,52039,52042,52043,52045,52046,52047,52049,52050,52051,52052,52053,52054,52055,52058,52059,52060,52062,52063,52064,52065,52066,52067,52069,52070,52071,52072,52073,52074,52075,52076,13205,13206,13207,8467,13208,13252,13219,13220,13221,13222,13209,13210,13211,13212,13213,13214,13215,13216,13217,13218,13258,13197,13198,13199,13263,13192,13193,13256,13223,13224,13232,13233,13234,13235,13236,13237,13238,13239,13240,13241,13184,13185,13186,13187,13188,13242,13243,13244,13245,13246,13247,13200,13201,13202,13203,13204,8486,13248,13249,13194,13195,13196,13270,13253,13229,13230,13231,13275,13225,13226,13227,13228,13277,13264,13267,13251,13257,13276,13254,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,52077,52078,52079,52080,52081,52082,52083,52084,52085,52086,52087,52090,52091,52092,52093,52094,52095,52096,52097,52098,52099,52100,52101,52102,52103,52104,0,0,0,0,0,0,52105,52106,52107,52108,52109,52110,52111,52112,52113,52114,52115,52116,52117,52118,52119,52120,52121,52122,52123,52125,52126,52127,52128,52129,52130,52131,0,0,0,0,0,0,52132,52133,52134,52135,52136,52137,52138,52139,52140,52141,52142,52143,52144,52145,52146,52147,52148,52149,52150,52151,52153,52154,52155,52156,52157,52158,52159,52160,52161,52162,52163,52164,198,208,170,294,0,306,0,319,321,216,338,186,222,358,330,0,12896,12897,12898,12899,12900,12901,12902,12903,12904,12905,12906,12907,12908,12909,12910,12911,12912,12913,12914,12915,12916,12917,12918,12919,12920,12921,12922,12923,9424,9425,9426,9427,9428,9429,9430,9431,9432,9433,9434,9435,9436,9437,9438,9439,9440,9441,9442,9443,9444,9445,9446,9447,9448,9449,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9322,9323,9324,9325,9326,189,8531,8532,188,190,8539,8540,8541,8542,52165,52166,52167,52168,52169,52170,52171,52172,52173,52174,52175,52176,52177,52178,52179,52181,52182,52183,52184,52185,52186,52187,52188,52189,52190,52191,0,0,0,0,0,0,52192,52193,52194,52195,52197,52198,52200,52202,52203,52204,52205,52206,52207,52208,52209,52210,52211,52212,52213,52214,52215,52216,52217,52218,52219,52220,0,0,0,0,0,0,52221,52222,52223,52224,52225,52226,52227,52228,52229,52230,52231,52232,52233,52234,52235,52238,52239,52241,52242,52243,52245,52246,52247,52248,52249,52250,52251,52254,52255,52256,52259,52260,230,273,240,295,305,307,312,320,322,248,339,223,254,359,331,329,12800,12801,12802,12803,12804,12805,12806,12807,12808,12809,12810,12811,12812,12813,12814,12815,12816,12817,12818,12819,12820,12821,12822,12823,12824,12825,12826,12827,9372,9373,9374,9375,9376,9377,9378,9379,9380,9381,9382,9383,9384,9385,9386,9387,9388,9389,9390,9391,9392,9393,9394,9395,9396,9397,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,9342,9343,9344,9345,9346,185,178,179,8308,8319,8321,8322,8323,8324,52261,52262,52266,52267,52269,52271,52273,52274,52275,52276,52277,52278,52279,52282,52287,52288,52289,52290,52291,52294,52295,52297,52298,52299,52301,52302,0,0,0,0,0,0,52303,52304,52305,52306,52307,52310,52314,52315,52316,52317,52318,52319,52321,52322,52323,52325,52327,52329,52330,52331,52332,52333,52334,52335,52337,52338,0,0,0,0,0,0,52339,52340,52342,52343,52344,52345,52346,52347,52348,52349,52350,52351,52352,52353,52354,52355,52356,52357,52358,52359,52360,52361,52362,52363,52364,52365,52366,52367,52368,52369,52370,52371,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,0,0,0,0,0,0,0,0,0,0,0,52372,52373,52374,52375,52378,52379,52381,52382,52383,52385,52386,52387,52388,52389,52390,52391,52394,52398,52399,52400,52401,52402,52403,52406,52407,52409,0,0,0,0,0,0,52410,52411,52413,52414,52415,52416,52417,52418,52419,52422,52424,52426,52427,52428,52429,52430,52431,52433,52434,52435,52437,52438,52439,52440,52441,52442,0,0,0,0,0,0,52443,52444,52445,52446,52447,52448,52449,52450,52451,52453,52454,52455,52456,52457,52458,52459,52461,52462,52463,52465,52466,52467,52468,52469,52470,52471,52472,52473,52474,52475,52476,52477,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,0,0,0,0,0,0,0,0,52478,52479,52480,52482,52483,52484,52485,52486,52487,52490,52491,52493,52494,52495,52497,52498,52499,52500,52501,52502,52503,52506,52508,52510,52511,52512,0,0,0,0,0,0,52513,52514,52515,52517,52518,52519,52521,52522,52523,52525,52526,52527,52528,52529,52530,52531,52532,52533,52534,52535,52536,52538,52539,52540,52541,52542,0,0,0,0,0,0,52543,52544,52545,52546,52547,52548,52549,52550,52551,52552,52553,52554,52555,52556,52557,52558,52559,52560,52561,52562,52563,52564,52565,52566,52567,52568,52569,52570,52571,52573,52574,52575,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,0,0,0,0,0,0,0,0,0,0,0,0,0,52577,52578,52579,52581,52582,52583,52584,52585,52586,52587,52590,52592,52594,52595,52596,52597,52598,52599,52601,52602,52603,52604,52605,52606,52607,52608,0,0,0,0,0,0,52609,52610,52611,52612,52613,52614,52615,52617,52618,52619,52620,52621,52622,52623,52624,52625,52626,52627,52630,52631,52633,52634,52635,52637,52638,52639,0,0,0,0,0,0,52640,52641,52642,52643,52646,52648,52650,52651,52652,52653,52654,52655,52657,52658,52659,52660,52661,52662,52663,52664,52665,52666,52667,52668,52669,52670,52671,52672,52673,52674,52675,52677,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,52678,52679,52680,52681,52682,52683,52685,52686,52687,52689,52690,52691,52692,52693,52694,52695,52696,52697,52698,52699,52700,52701,52702,52703,52704,52705,0,0,0,0,0,0,52706,52707,52708,52709,52710,52711,52713,52714,52715,52717,52718,52719,52721,52722,52723,52724,52725,52726,52727,52730,52732,52734,52735,52736,52737,52738,0,0,0,0,0,0,52739,52741,52742,52743,52745,52746,52747,52749,52750,52751,52752,52753,52754,52755,52757,52758,52759,52760,52762,52763,52764,52765,52766,52767,52770,52771,52773,52774,52775,52777,52778,52779,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,52780,52781,52782,52783,52786,52788,52790,52791,52792,52793,52794,52795,52796,52797,52798,52799,52800,52801,52802,52803,52804,52805,52806,52807,52808,52809,0,0,0,0,0,0,52810,52811,52812,52813,52814,52815,52816,52817,52818,52819,52820,52821,52822,52823,52826,52827,52829,52830,52834,52835,52836,52837,52838,52839,52842,52844,0,0,0,0,0,0,52846,52847,52848,52849,52850,52851,52854,52855,52857,52858,52859,52861,52862,52863,52864,52865,52866,52867,52870,52872,52874,52875,52876,52877,52878,52879,52882,52883,52885,52886,52887,52889,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,52890,52891,52892,52893,52894,52895,52898,52902,52903,52904,52905,52906,52907,52910,52911,52912,52913,52914,52915,52916,52917,52918,52919,52920,52921,52922,0,0,0,0,0,0,52923,52924,52925,52926,52927,52928,52930,52931,52932,52933,52934,52935,52936,52937,52938,52939,52940,52941,52942,52943,52944,52945,52946,52947,52948,52949,0,0,0,0,0,0,52950,52951,52952,52953,52954,52955,52956,52957,52958,52959,52960,52961,52962,52963,52966,52967,52969,52970,52973,52974,52975,52976,52977,52978,52979,52982,52986,52987,52988,52989,52990,52991,44032,44033,44036,44039,44040,44041,44042,44048,44049,44050,44051,44052,44053,44054,44055,44057,44058,44059,44060,44061,44064,44068,44076,44077,44079,44080,44081,44088,44089,44092,44096,44107,44109,44116,44120,44124,44144,44145,44148,44151,44152,44154,44160,44161,44163,44164,44165,44166,44169,44170,44171,44172,44176,44180,44188,44189,44191,44192,44193,44200,44201,44202,44204,44207,44208,44216,44217,44219,44220,44221,44225,44228,44232,44236,44245,44247,44256,44257,44260,44263,44264,44266,44268,44271,44272,44273,44275,44277,44278,44284,44285,44288,44292,44294,52994,52995,52997,52998,52999,53001,53002,53003,53004,53005,53006,53007,53010,53012,53014,53015,53016,53017,53018,53019,53021,53022,53023,53025,53026,53027,0,0,0,0,0,0,53029,53030,53031,53032,53033,53034,53035,53038,53042,53043,53044,53045,53046,53047,53049,53050,53051,53052,53053,53054,53055,53056,53057,53058,53059,53060,0,0,0,0,0,0,53061,53062,53063,53064,53065,53066,53067,53068,53069,53070,53071,53072,53073,53074,53075,53078,53079,53081,53082,53083,53085,53086,53087,53088,53089,53090,53091,53094,53096,53098,53099,53100,44300,44301,44303,44305,44312,44316,44320,44329,44332,44333,44340,44341,44344,44348,44356,44357,44359,44361,44368,44372,44376,44385,44387,44396,44397,44400,44403,44404,44405,44406,44411,44412,44413,44415,44417,44418,44424,44425,44428,44432,44444,44445,44452,44471,44480,44481,44484,44488,44496,44497,44499,44508,44512,44516,44536,44537,44540,44543,44544,44545,44552,44553,44555,44557,44564,44592,44593,44596,44599,44600,44602,44608,44609,44611,44613,44614,44618,44620,44621,44622,44624,44628,44630,44636,44637,44639,44640,44641,44645,44648,44649,44652,44656,44664,53101,53102,53103,53106,53107,53109,53110,53111,53113,53114,53115,53116,53117,53118,53119,53121,53122,53123,53124,53126,53127,53128,53129,53130,53131,53133,0,0,0,0,0,0,53134,53135,53136,53137,53138,53139,53140,53141,53142,53143,53144,53145,53146,53147,53148,53149,53150,53151,53152,53154,53155,53156,53157,53158,53159,53161,0,0,0,0,0,0,53162,53163,53164,53165,53166,53167,53169,53170,53171,53172,53173,53174,53175,53176,53177,53178,53179,53180,53181,53182,53183,53184,53185,53186,53187,53189,53190,53191,53192,53193,53194,53195,44665,44667,44668,44669,44676,44677,44684,44732,44733,44734,44736,44740,44748,44749,44751,44752,44753,44760,44761,44764,44776,44779,44781,44788,44792,44796,44807,44808,44813,44816,44844,44845,44848,44850,44852,44860,44861,44863,44865,44866,44867,44872,44873,44880,44892,44893,44900,44901,44921,44928,44932,44936,44944,44945,44949,44956,44984,44985,44988,44992,44999,45e3,45001,45003,45005,45006,45012,45020,45032,45033,45040,45041,45044,45048,45056,45057,45060,45068,45072,45076,45084,45085,45096,45124,45125,45128,45130,45132,45134,45139,45140,45141,45143,45145,53196,53197,53198,53199,53200,53201,53202,53203,53204,53205,53206,53207,53208,53209,53210,53211,53212,53213,53214,53215,53218,53219,53221,53222,53223,53225,0,0,0,0,0,0,53226,53227,53228,53229,53230,53231,53234,53236,53238,53239,53240,53241,53242,53243,53245,53246,53247,53249,53250,53251,53253,53254,53255,53256,53257,53258,0,0,0,0,0,0,53259,53260,53261,53262,53263,53264,53266,53267,53268,53269,53270,53271,53273,53274,53275,53276,53277,53278,53279,53280,53281,53282,53283,53284,53285,53286,53287,53288,53289,53290,53291,53292,45149,45180,45181,45184,45188,45196,45197,45199,45201,45208,45209,45210,45212,45215,45216,45217,45218,45224,45225,45227,45228,45229,45230,45231,45233,45235,45236,45237,45240,45244,45252,45253,45255,45256,45257,45264,45265,45268,45272,45280,45285,45320,45321,45323,45324,45328,45330,45331,45336,45337,45339,45340,45341,45347,45348,45349,45352,45356,45364,45365,45367,45368,45369,45376,45377,45380,45384,45392,45393,45396,45397,45400,45404,45408,45432,45433,45436,45440,45442,45448,45449,45451,45453,45458,45459,45460,45464,45468,45480,45516,45520,45524,45532,45533,53294,53295,53296,53297,53298,53299,53302,53303,53305,53306,53307,53309,53310,53311,53312,53313,53314,53315,53318,53320,53322,53323,53324,53325,53326,53327,0,0,0,0,0,0,53329,53330,53331,53333,53334,53335,53337,53338,53339,53340,53341,53342,53343,53345,53346,53347,53348,53349,53350,53351,53352,53353,53354,53355,53358,53359,0,0,0,0,0,0,53361,53362,53363,53365,53366,53367,53368,53369,53370,53371,53374,53375,53376,53378,53379,53380,53381,53382,53383,53384,53385,53386,53387,53388,53389,53390,53391,53392,53393,53394,53395,53396,45535,45544,45545,45548,45552,45561,45563,45565,45572,45573,45576,45579,45580,45588,45589,45591,45593,45600,45620,45628,45656,45660,45664,45672,45673,45684,45685,45692,45700,45701,45705,45712,45713,45716,45720,45721,45722,45728,45729,45731,45733,45734,45738,45740,45744,45748,45768,45769,45772,45776,45778,45784,45785,45787,45789,45794,45796,45797,45798,45800,45803,45804,45805,45806,45807,45811,45812,45813,45815,45816,45817,45818,45819,45823,45824,45825,45828,45832,45840,45841,45843,45844,45845,45852,45908,45909,45910,45912,45915,45916,45918,45919,45924,45925,53397,53398,53399,53400,53401,53402,53403,53404,53405,53406,53407,53408,53409,53410,53411,53414,53415,53417,53418,53419,53421,53422,53423,53424,53425,53426,0,0,0,0,0,0,53427,53430,53432,53434,53435,53436,53437,53438,53439,53442,53443,53445,53446,53447,53450,53451,53452,53453,53454,53455,53458,53462,53463,53464,53465,53466,0,0,0,0,0,0,53467,53470,53471,53473,53474,53475,53477,53478,53479,53480,53481,53482,53483,53486,53490,53491,53492,53493,53494,53495,53497,53498,53499,53500,53501,53502,53503,53504,53505,53506,53507,53508,45927,45929,45931,45934,45936,45937,45940,45944,45952,45953,45955,45956,45957,45964,45968,45972,45984,45985,45992,45996,46020,46021,46024,46027,46028,46030,46032,46036,46037,46039,46041,46043,46045,46048,46052,46056,46076,46096,46104,46108,46112,46120,46121,46123,46132,46160,46161,46164,46168,46176,46177,46179,46181,46188,46208,46216,46237,46244,46248,46252,46261,46263,46265,46272,46276,46280,46288,46293,46300,46301,46304,46307,46308,46310,46316,46317,46319,46321,46328,46356,46357,46360,46363,46364,46372,46373,46375,46376,46377,46378,46384,46385,46388,46392,53509,53510,53511,53512,53513,53514,53515,53516,53518,53519,53520,53521,53522,53523,53524,53525,53526,53527,53528,53529,53530,53531,53532,53533,53534,53535,0,0,0,0,0,0,53536,53537,53538,53539,53540,53541,53542,53543,53544,53545,53546,53547,53548,53549,53550,53551,53554,53555,53557,53558,53559,53561,53563,53564,53565,53566,0,0,0,0,0,0,53567,53570,53574,53575,53576,53577,53578,53579,53582,53583,53585,53586,53587,53589,53590,53591,53592,53593,53594,53595,53598,53600,53602,53603,53604,53605,53606,53607,53609,53610,53611,53613,46400,46401,46403,46404,46405,46411,46412,46413,46416,46420,46428,46429,46431,46432,46433,46496,46497,46500,46504,46506,46507,46512,46513,46515,46516,46517,46523,46524,46525,46528,46532,46540,46541,46543,46544,46545,46552,46572,46608,46609,46612,46616,46629,46636,46644,46664,46692,46696,46748,46749,46752,46756,46763,46764,46769,46804,46832,46836,46840,46848,46849,46853,46888,46889,46892,46895,46896,46904,46905,46907,46916,46920,46924,46932,46933,46944,46948,46952,46960,46961,46963,46965,46972,46973,46976,46980,46988,46989,46991,46992,46993,46994,46998,46999,53614,53615,53616,53617,53618,53619,53620,53621,53622,53623,53624,53625,53626,53627,53629,53630,53631,53632,53633,53634,53635,53637,53638,53639,53641,53642,0,0,0,0,0,0,53643,53644,53645,53646,53647,53648,53649,53650,53651,53652,53653,53654,53655,53656,53657,53658,53659,53660,53661,53662,53663,53666,53667,53669,53670,53671,0,0,0,0,0,0,53673,53674,53675,53676,53677,53678,53679,53682,53684,53686,53687,53688,53689,53691,53693,53694,53695,53697,53698,53699,53700,53701,53702,53703,53704,53705,53706,53707,53708,53709,53710,53711,47e3,47001,47004,47008,47016,47017,47019,47020,47021,47028,47029,47032,47047,47049,47084,47085,47088,47092,47100,47101,47103,47104,47105,47111,47112,47113,47116,47120,47128,47129,47131,47133,47140,47141,47144,47148,47156,47157,47159,47160,47161,47168,47172,47185,47187,47196,47197,47200,47204,47212,47213,47215,47217,47224,47228,47245,47272,47280,47284,47288,47296,47297,47299,47301,47308,47312,47316,47325,47327,47329,47336,47337,47340,47344,47352,47353,47355,47357,47364,47384,47392,47420,47421,47424,47428,47436,47439,47441,47448,47449,47452,47456,47464,47465,53712,53713,53714,53715,53716,53717,53718,53719,53721,53722,53723,53724,53725,53726,53727,53728,53729,53730,53731,53732,53733,53734,53735,53736,53737,53738,0,0,0,0,0,0,53739,53740,53741,53742,53743,53744,53745,53746,53747,53749,53750,53751,53753,53754,53755,53756,53757,53758,53759,53760,53761,53762,53763,53764,53765,53766,0,0,0,0,0,0,53768,53770,53771,53772,53773,53774,53775,53777,53778,53779,53780,53781,53782,53783,53784,53785,53786,53787,53788,53789,53790,53791,53792,53793,53794,53795,53796,53797,53798,53799,53800,53801,47467,47469,47476,47477,47480,47484,47492,47493,47495,47497,47498,47501,47502,47532,47533,47536,47540,47548,47549,47551,47553,47560,47561,47564,47566,47567,47568,47569,47570,47576,47577,47579,47581,47582,47585,47587,47588,47589,47592,47596,47604,47605,47607,47608,47609,47610,47616,47617,47624,47637,47672,47673,47676,47680,47682,47688,47689,47691,47693,47694,47699,47700,47701,47704,47708,47716,47717,47719,47720,47721,47728,47729,47732,47736,47747,47748,47749,47751,47756,47784,47785,47787,47788,47792,47794,47800,47801,47803,47805,47812,47816,47832,47833,47868,53802,53803,53806,53807,53809,53810,53811,53813,53814,53815,53816,53817,53818,53819,53822,53824,53826,53827,53828,53829,53830,53831,53833,53834,53835,53836,0,0,0,0,0,0,53837,53838,53839,53840,53841,53842,53843,53844,53845,53846,53847,53848,53849,53850,53851,53853,53854,53855,53856,53857,53858,53859,53861,53862,53863,53864,0,0,0,0,0,0,53865,53866,53867,53868,53869,53870,53871,53872,53873,53874,53875,53876,53877,53878,53879,53880,53881,53882,53883,53884,53885,53886,53887,53890,53891,53893,53894,53895,53897,53898,53899,53900,47872,47876,47885,47887,47889,47896,47900,47904,47913,47915,47924,47925,47926,47928,47931,47932,47933,47934,47940,47941,47943,47945,47949,47951,47952,47956,47960,47969,47971,47980,48008,48012,48016,48036,48040,48044,48052,48055,48064,48068,48072,48080,48083,48120,48121,48124,48127,48128,48130,48136,48137,48139,48140,48141,48143,48145,48148,48149,48150,48151,48152,48155,48156,48157,48158,48159,48164,48165,48167,48169,48173,48176,48177,48180,48184,48192,48193,48195,48196,48197,48201,48204,48205,48208,48221,48260,48261,48264,48267,48268,48270,48276,48277,48279,53901,53902,53903,53906,53907,53908,53910,53911,53912,53913,53914,53915,53917,53918,53919,53921,53922,53923,53925,53926,53927,53928,53929,53930,53931,53933,0,0,0,0,0,0,53934,53935,53936,53938,53939,53940,53941,53942,53943,53946,53947,53949,53950,53953,53955,53956,53957,53958,53959,53962,53964,53965,53966,53967,53968,53969,0,0,0,0,0,0,53970,53971,53973,53974,53975,53977,53978,53979,53981,53982,53983,53984,53985,53986,53987,53990,53991,53992,53993,53994,53995,53996,53997,53998,53999,54002,54003,54005,54006,54007,54009,54010,48281,48282,48288,48289,48292,48295,48296,48304,48305,48307,48308,48309,48316,48317,48320,48324,48333,48335,48336,48337,48341,48344,48348,48372,48373,48374,48376,48380,48388,48389,48391,48393,48400,48404,48420,48428,48448,48456,48457,48460,48464,48472,48473,48484,48488,48512,48513,48516,48519,48520,48521,48522,48528,48529,48531,48533,48537,48538,48540,48548,48560,48568,48596,48597,48600,48604,48617,48624,48628,48632,48640,48643,48645,48652,48653,48656,48660,48668,48669,48671,48708,48709,48712,48716,48718,48724,48725,48727,48729,48730,48731,48736,48737,48740,54011,54012,54013,54014,54015,54018,54020,54022,54023,54024,54025,54026,54027,54031,54033,54034,54035,54037,54039,54040,54041,54042,54043,54046,54050,54051,0,0,0,0,0,0,54052,54054,54055,54058,54059,54061,54062,54063,54065,54066,54067,54068,54069,54070,54071,54074,54078,54079,54080,54081,54082,54083,54086,54087,54088,54089,0,0,0,0,0,0,54090,54091,54092,54093,54094,54095,54096,54097,54098,54099,54100,54101,54102,54103,54104,54105,54106,54107,54108,54109,54110,54111,54112,54113,54114,54115,54116,54117,54118,54119,54120,54121,48744,48746,48752,48753,48755,48756,48757,48763,48764,48765,48768,48772,48780,48781,48783,48784,48785,48792,48793,48808,48848,48849,48852,48855,48856,48864,48867,48868,48869,48876,48897,48904,48905,48920,48921,48923,48924,48925,48960,48961,48964,48968,48976,48977,48981,49044,49072,49093,49100,49101,49104,49108,49116,49119,49121,49212,49233,49240,49244,49248,49256,49257,49296,49297,49300,49304,49312,49313,49315,49317,49324,49325,49327,49328,49331,49332,49333,49334,49340,49341,49343,49344,49345,49349,49352,49353,49356,49360,49368,49369,49371,49372,49373,49380,54122,54123,54124,54125,54126,54127,54128,54129,54130,54131,54132,54133,54134,54135,54136,54137,54138,54139,54142,54143,54145,54146,54147,54149,54150,54151,0,0,0,0,0,0,54152,54153,54154,54155,54158,54162,54163,54164,54165,54166,54167,54170,54171,54173,54174,54175,54177,54178,54179,54180,54181,54182,54183,54186,54188,54190,0,0,0,0,0,0,54191,54192,54193,54194,54195,54197,54198,54199,54201,54202,54203,54205,54206,54207,54208,54209,54210,54211,54214,54215,54218,54219,54220,54221,54222,54223,54225,54226,54227,54228,54229,54230,49381,49384,49388,49396,49397,49399,49401,49408,49412,49416,49424,49429,49436,49437,49438,49439,49440,49443,49444,49446,49447,49452,49453,49455,49456,49457,49462,49464,49465,49468,49472,49480,49481,49483,49484,49485,49492,49493,49496,49500,49508,49509,49511,49512,49513,49520,49524,49528,49541,49548,49549,49550,49552,49556,49558,49564,49565,49567,49569,49573,49576,49577,49580,49584,49597,49604,49608,49612,49620,49623,49624,49632,49636,49640,49648,49649,49651,49660,49661,49664,49668,49676,49677,49679,49681,49688,49689,49692,49695,49696,49704,49705,49707,49709,54231,54233,54234,54235,54236,54237,54238,54239,54240,54242,54244,54245,54246,54247,54248,54249,54250,54251,54254,54255,54257,54258,54259,54261,54262,54263,0,0,0,0,0,0,54264,54265,54266,54267,54270,54272,54274,54275,54276,54277,54278,54279,54281,54282,54283,54284,54285,54286,54287,54288,54289,54290,54291,54292,54293,54294,0,0,0,0,0,0,54295,54296,54297,54298,54299,54300,54302,54303,54304,54305,54306,54307,54308,54309,54310,54311,54312,54313,54314,54315,54316,54317,54318,54319,54320,54321,54322,54323,54324,54325,54326,54327,49711,49713,49714,49716,49736,49744,49745,49748,49752,49760,49765,49772,49773,49776,49780,49788,49789,49791,49793,49800,49801,49808,49816,49819,49821,49828,49829,49832,49836,49837,49844,49845,49847,49849,49884,49885,49888,49891,49892,49899,49900,49901,49903,49905,49910,49912,49913,49915,49916,49920,49928,49929,49932,49933,49939,49940,49941,49944,49948,49956,49957,49960,49961,49989,50024,50025,50028,50032,50034,50040,50041,50044,50045,50052,50056,50060,50112,50136,50137,50140,50143,50144,50146,50152,50153,50157,50164,50165,50168,50184,50192,50212,50220,50224,54328,54329,54330,54331,54332,54333,54334,54335,54337,54338,54339,54341,54342,54343,54344,54345,54346,54347,54348,54349,54350,54351,54352,54353,54354,54355,0,0,0,0,0,0,54356,54357,54358,54359,54360,54361,54362,54363,54365,54366,54367,54369,54370,54371,54373,54374,54375,54376,54377,54378,54379,54380,54382,54384,54385,54386,0,0,0,0,0,0,54387,54388,54389,54390,54391,54394,54395,54397,54398,54401,54403,54404,54405,54406,54407,54410,54412,54414,54415,54416,54417,54418,54419,54421,54422,54423,54424,54425,54426,54427,54428,54429,50228,50236,50237,50248,50276,50277,50280,50284,50292,50293,50297,50304,50324,50332,50360,50364,50409,50416,50417,50420,50424,50426,50431,50432,50433,50444,50448,50452,50460,50472,50473,50476,50480,50488,50489,50491,50493,50500,50501,50504,50505,50506,50508,50509,50510,50515,50516,50517,50519,50520,50521,50525,50526,50528,50529,50532,50536,50544,50545,50547,50548,50549,50556,50557,50560,50564,50567,50572,50573,50575,50577,50581,50583,50584,50588,50592,50601,50612,50613,50616,50617,50619,50620,50621,50622,50628,50629,50630,50631,50632,50633,50634,50636,50638,54430,54431,54432,54433,54434,54435,54436,54437,54438,54439,54440,54442,54443,54444,54445,54446,54447,54448,54449,54450,54451,54452,54453,54454,54455,54456,0,0,0,0,0,0,54457,54458,54459,54460,54461,54462,54463,54464,54465,54466,54467,54468,54469,54470,54471,54472,54473,54474,54475,54477,54478,54479,54481,54482,54483,54485,0,0,0,0,0,0,54486,54487,54488,54489,54490,54491,54493,54494,54496,54497,54498,54499,54500,54501,54502,54503,54505,54506,54507,54509,54510,54511,54513,54514,54515,54516,54517,54518,54519,54521,54522,54524,50640,50641,50644,50648,50656,50657,50659,50661,50668,50669,50670,50672,50676,50678,50679,50684,50685,50686,50687,50688,50689,50693,50694,50695,50696,50700,50704,50712,50713,50715,50716,50724,50725,50728,50732,50733,50734,50736,50739,50740,50741,50743,50745,50747,50752,50753,50756,50760,50768,50769,50771,50772,50773,50780,50781,50784,50796,50799,50801,50808,50809,50812,50816,50824,50825,50827,50829,50836,50837,50840,50844,50852,50853,50855,50857,50864,50865,50868,50872,50873,50874,50880,50881,50883,50885,50892,50893,50896,50900,50908,50909,50912,50913,50920,54526,54527,54528,54529,54530,54531,54533,54534,54535,54537,54538,54539,54541,54542,54543,54544,54545,54546,54547,54550,54552,54553,54554,54555,54556,54557,0,0,0,0,0,0,54558,54559,54560,54561,54562,54563,54564,54565,54566,54567,54568,54569,54570,54571,54572,54573,54574,54575,54576,54577,54578,54579,54580,54581,54582,54583,0,0,0,0,0,0,54584,54585,54586,54587,54590,54591,54593,54594,54595,54597,54598,54599,54600,54601,54602,54603,54606,54608,54610,54611,54612,54613,54614,54615,54618,54619,54621,54622,54623,54625,54626,54627,50921,50924,50928,50936,50937,50941,50948,50949,50952,50956,50964,50965,50967,50969,50976,50977,50980,50984,50992,50993,50995,50997,50999,51004,51005,51008,51012,51018,51020,51021,51023,51025,51026,51027,51028,51029,51030,51031,51032,51036,51040,51048,51051,51060,51061,51064,51068,51069,51070,51075,51076,51077,51079,51080,51081,51082,51086,51088,51089,51092,51094,51095,51096,51098,51104,51105,51107,51108,51109,51110,51116,51117,51120,51124,51132,51133,51135,51136,51137,51144,51145,51148,51150,51152,51160,51165,51172,51176,51180,51200,51201,51204,51208,51210,54628,54630,54631,54634,54636,54638,54639,54640,54641,54642,54643,54646,54647,54649,54650,54651,54653,54654,54655,54656,54657,54658,54659,54662,54666,54667,0,0,0,0,0,0,54668,54669,54670,54671,54673,54674,54675,54676,54677,54678,54679,54680,54681,54682,54683,54684,54685,54686,54687,54688,54689,54690,54691,54692,54694,54695,0,0,0,0,0,0,54696,54697,54698,54699,54700,54701,54702,54703,54704,54705,54706,54707,54708,54709,54710,54711,54712,54713,54714,54715,54716,54717,54718,54719,54720,54721,54722,54723,54724,54725,54726,54727,51216,51217,51219,51221,51222,51228,51229,51232,51236,51244,51245,51247,51249,51256,51260,51264,51272,51273,51276,51277,51284,51312,51313,51316,51320,51322,51328,51329,51331,51333,51334,51335,51339,51340,51341,51348,51357,51359,51361,51368,51388,51389,51396,51400,51404,51412,51413,51415,51417,51424,51425,51428,51445,51452,51453,51456,51460,51461,51462,51468,51469,51471,51473,51480,51500,51508,51536,51537,51540,51544,51552,51553,51555,51564,51568,51572,51580,51592,51593,51596,51600,51608,51609,51611,51613,51648,51649,51652,51655,51656,51658,51664,51665,51667,54730,54731,54733,54734,54735,54737,54739,54740,54741,54742,54743,54746,54748,54750,54751,54752,54753,54754,54755,54758,54759,54761,54762,54763,54765,54766,0,0,0,0,0,0,54767,54768,54769,54770,54771,54774,54776,54778,54779,54780,54781,54782,54783,54786,54787,54789,54790,54791,54793,54794,54795,54796,54797,54798,54799,54802,0,0,0,0,0,0,54806,54807,54808,54809,54810,54811,54813,54814,54815,54817,54818,54819,54821,54822,54823,54824,54825,54826,54827,54828,54830,54831,54832,54833,54834,54835,54836,54837,54838,54839,54842,54843,51669,51670,51673,51674,51676,51677,51680,51682,51684,51687,51692,51693,51695,51696,51697,51704,51705,51708,51712,51720,51721,51723,51724,51725,51732,51736,51753,51788,51789,51792,51796,51804,51805,51807,51808,51809,51816,51837,51844,51864,51900,51901,51904,51908,51916,51917,51919,51921,51923,51928,51929,51936,51948,51956,51976,51984,51988,51992,52e3,52001,52033,52040,52041,52044,52048,52056,52057,52061,52068,52088,52089,52124,52152,52180,52196,52199,52201,52236,52237,52240,52244,52252,52253,52257,52258,52263,52264,52265,52268,52270,52272,52280,52281,52283,54845,54846,54847,54849,54850,54851,54852,54854,54855,54858,54860,54862,54863,54864,54866,54867,54870,54871,54873,54874,54875,54877,54878,54879,54880,54881,0,0,0,0,0,0,54882,54883,54884,54885,54886,54888,54890,54891,54892,54893,54894,54895,54898,54899,54901,54902,54903,54904,54905,54906,54907,54908,54909,54910,54911,54912,0,0,0,0,0,0,54913,54914,54916,54918,54919,54920,54921,54922,54923,54926,54927,54929,54930,54931,54933,54934,54935,54936,54937,54938,54939,54940,54942,54944,54946,54947,54948,54949,54950,54951,54953,54954,52284,52285,52286,52292,52293,52296,52300,52308,52309,52311,52312,52313,52320,52324,52326,52328,52336,52341,52376,52377,52380,52384,52392,52393,52395,52396,52397,52404,52405,52408,52412,52420,52421,52423,52425,52432,52436,52452,52460,52464,52481,52488,52489,52492,52496,52504,52505,52507,52509,52516,52520,52524,52537,52572,52576,52580,52588,52589,52591,52593,52600,52616,52628,52629,52632,52636,52644,52645,52647,52649,52656,52676,52684,52688,52712,52716,52720,52728,52729,52731,52733,52740,52744,52748,52756,52761,52768,52769,52772,52776,52784,52785,52787,52789,54955,54957,54958,54959,54961,54962,54963,54964,54965,54966,54967,54968,54970,54972,54973,54974,54975,54976,54977,54978,54979,54982,54983,54985,54986,54987,0,0,0,0,0,0,54989,54990,54991,54992,54994,54995,54997,54998,55e3,55002,55003,55004,55005,55006,55007,55009,55010,55011,55013,55014,55015,55017,55018,55019,55020,55021,0,0,0,0,0,0,55022,55023,55025,55026,55027,55028,55030,55031,55032,55033,55034,55035,55038,55039,55041,55042,55043,55045,55046,55047,55048,55049,55050,55051,55052,55053,55054,55055,55056,55058,55059,55060,52824,52825,52828,52831,52832,52833,52840,52841,52843,52845,52852,52853,52856,52860,52868,52869,52871,52873,52880,52881,52884,52888,52896,52897,52899,52900,52901,52908,52909,52929,52964,52965,52968,52971,52972,52980,52981,52983,52984,52985,52992,52993,52996,53e3,53008,53009,53011,53013,53020,53024,53028,53036,53037,53039,53040,53041,53048,53076,53077,53080,53084,53092,53093,53095,53097,53104,53105,53108,53112,53120,53125,53132,53153,53160,53168,53188,53216,53217,53220,53224,53232,53233,53235,53237,53244,53248,53252,53265,53272,53293,53300,53301,53304,53308,55061,55062,55063,55066,55067,55069,55070,55071,55073,55074,55075,55076,55077,55078,55079,55082,55084,55086,55087,55088,55089,55090,55091,55094,55095,55097,0,0,0,0,0,0,55098,55099,55101,55102,55103,55104,55105,55106,55107,55109,55110,55112,55114,55115,55116,55117,55118,55119,55122,55123,55125,55130,55131,55132,55133,55134,0,0,0,0,0,0,55135,55138,55140,55142,55143,55144,55146,55147,55149,55150,55151,55153,55154,55155,55157,55158,55159,55160,55161,55162,55163,55166,55167,55168,55170,55171,55172,55173,55174,55175,55178,55179,53316,53317,53319,53321,53328,53332,53336,53344,53356,53357,53360,53364,53372,53373,53377,53412,53413,53416,53420,53428,53429,53431,53433,53440,53441,53444,53448,53449,53456,53457,53459,53460,53461,53468,53469,53472,53476,53484,53485,53487,53488,53489,53496,53517,53552,53553,53556,53560,53562,53568,53569,53571,53572,53573,53580,53581,53584,53588,53596,53597,53599,53601,53608,53612,53628,53636,53640,53664,53665,53668,53672,53680,53681,53683,53685,53690,53692,53696,53720,53748,53752,53767,53769,53776,53804,53805,53808,53812,53820,53821,53823,53825,53832,53852,55181,55182,55183,55185,55186,55187,55188,55189,55190,55191,55194,55196,55198,55199,55200,55201,55202,55203,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,53860,53888,53889,53892,53896,53904,53905,53909,53916,53920,53924,53932,53937,53944,53945,53948,53951,53952,53954,53960,53961,53963,53972,53976,53980,53988,53989,54e3,54001,54004,54008,54016,54017,54019,54021,54028,54029,54030,54032,54036,54038,54044,54045,54047,54048,54049,54053,54056,54057,54060,54064,54072,54073,54075,54076,54077,54084,54085,54140,54141,54144,54148,54156,54157,54159,54160,54161,54168,54169,54172,54176,54184,54185,54187,54189,54196,54200,54204,54212,54213,54216,54217,54224,54232,54241,54243,54252,54253,54256,54260,54268,54269,54271,54273,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54280,54301,54336,54340,54364,54368,54372,54381,54383,54392,54393,54396,54399,54400,54402,54408,54409,54411,54413,54420,54441,54476,54480,54484,54492,54495,54504,54508,54512,54520,54523,54525,54532,54536,54540,54548,54549,54551,54588,54589,54592,54596,54604,54605,54607,54609,54616,54617,54620,54624,54629,54632,54633,54635,54637,54644,54645,54648,54652,54660,54661,54663,54664,54665,54672,54693,54728,54729,54732,54736,54738,54744,54745,54747,54749,54756,54757,54760,54764,54772,54773,54775,54777,54784,54785,54788,54792,54800,54801,54803,54804,54805,54812,54816,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54820,54829,54840,54841,54844,54848,54853,54856,54857,54859,54861,54865,54868,54869,54872,54876,54887,54889,54896,54897,54900,54915,54917,54924,54925,54928,54932,54941,54943,54945,54952,54956,54960,54969,54971,54980,54981,54984,54988,54993,54996,54999,55001,55008,55012,55016,55024,55029,55036,55037,55040,55044,55057,55064,55065,55068,55072,55080,55081,55083,55085,55092,55093,55096,55100,55108,55111,55113,55120,55121,55124,55126,55127,55128,55129,55136,55137,55139,55141,55145,55148,55152,55156,55164,55165,55169,55176,55177,55180,55184,55192,55193,55195,55197,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20285,20339,20551,20729,21152,21487,21621,21733,22025,23233,23478,26247,26550,26551,26607,27468,29634,30146,31292,33499,33540,34903,34952,35382,36040,36303,36603,36838,39381,21051,21364,21508,24682,24932,27580,29647,33050,35258,35282,38307,20355,21002,22718,22904,23014,24178,24185,25031,25536,26438,26604,26751,28567,30286,30475,30965,31240,31487,31777,32925,33390,33393,35563,38291,20075,21917,26359,28212,30883,31469,33883,35088,34638,38824,21208,22350,22570,23884,24863,25022,25121,25954,26577,27204,28187,29976,30131,30435,30640,32058,37039,37969,37970,40853,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21283,23724,30002,32987,37440,38296,21083,22536,23004,23713,23831,24247,24378,24394,24951,27743,30074,30086,31968,32115,32177,32652,33108,33313,34193,35137,35611,37628,38477,40007,20171,20215,20491,20977,22607,24887,24894,24936,25913,27114,28433,30117,30342,30422,31623,33445,33995,63744,37799,38283,21888,23458,22353,63745,31923,32697,37301,20520,21435,23621,24040,25298,25454,25818,25831,28192,28844,31067,36317,36382,63746,36989,37445,37624,20094,20214,20581,24062,24314,24838,26967,33137,34388,36423,37749,39467,20062,20625,26480,26688,20745,21133,21138,27298,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30652,37392,40660,21163,24623,36850,20552,25001,25581,25802,26684,27268,28608,33160,35233,38548,22533,29309,29356,29956,32121,32365,32937,35211,35700,36963,40273,25225,27770,28500,32080,32570,35363,20860,24906,31645,35609,37463,37772,20140,20435,20510,20670,20742,21185,21197,21375,22384,22659,24218,24465,24950,25004,25806,25964,26223,26299,26356,26775,28039,28805,28913,29855,29861,29898,30169,30828,30956,31455,31478,32069,32147,32789,32831,33051,33686,35686,36629,36885,37857,38915,38968,39514,39912,20418,21843,22586,22865,23395,23622,24760,25106,26690,26800,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26856,28330,30028,30328,30926,31293,31995,32363,32380,35336,35489,35903,38542,40388,21476,21481,21578,21617,22266,22993,23396,23611,24235,25335,25911,25925,25970,26272,26543,27073,27837,30204,30352,30590,31295,32660,32771,32929,33167,33510,33533,33776,34241,34865,34996,35493,63747,36764,37678,38599,39015,39640,40723,21741,26011,26354,26767,31296,35895,40288,22256,22372,23825,26118,26801,26829,28414,29736,34974,39908,27752,63748,39592,20379,20844,20849,21151,23380,24037,24656,24685,25329,25511,25915,29657,31354,34467,36002,38799,20018,23521,25096,26524,29916,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31185,33747,35463,35506,36328,36942,37707,38982,24275,27112,34303,37101,63749,20896,23448,23532,24931,26874,27454,28748,29743,29912,31649,32592,33733,35264,36011,38364,39208,21038,24669,25324,36866,20362,20809,21281,22745,24291,26336,27960,28826,29378,29654,31568,33009,37979,21350,25499,32619,20054,20608,22602,22750,24618,24871,25296,27088,39745,23439,32024,32945,36703,20132,20689,21676,21932,23308,23968,24039,25898,25934,26657,27211,29409,30350,30703,32094,32761,33184,34126,34527,36611,36686,37066,39171,39509,39851,19992,20037,20061,20167,20465,20855,21246,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21312,21475,21477,21646,22036,22389,22434,23495,23943,24272,25084,25304,25937,26552,26601,27083,27472,27590,27628,27714,28317,28792,29399,29590,29699,30655,30697,31350,32127,32777,33276,33285,33290,33503,34914,35635,36092,36544,36881,37041,37476,37558,39378,39493,40169,40407,40860,22283,23616,33738,38816,38827,40628,21531,31384,32676,35033,36557,37089,22528,23624,25496,31391,23470,24339,31353,31406,33422,36524,20518,21048,21240,21367,22280,25331,25458,27402,28099,30519,21413,29527,34152,36470,38357,26426,27331,28528,35437,36556,39243,63750,26231,27512,36020,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39740,63751,21483,22317,22862,25542,27131,29674,30789,31418,31429,31998,33909,35215,36211,36917,38312,21243,22343,30023,31584,33740,37406,63752,27224,20811,21067,21127,25119,26840,26997,38553,20677,21156,21220,25027,26020,26681,27135,29822,31563,33465,33771,35250,35641,36817,39241,63753,20170,22935,25810,26129,27278,29748,31105,31165,33449,34942,34943,35167,63754,37670,20235,21450,24613,25201,27762,32026,32102,20120,20834,30684,32943,20225,20238,20854,20864,21980,22120,22331,22522,22524,22804,22855,22931,23492,23696,23822,24049,24190,24524,25216,26071,26083,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26398,26399,26462,26827,26820,27231,27450,27683,27773,27778,28103,29592,29734,29738,29826,29859,30072,30079,30849,30959,31041,31047,31048,31098,31637,32e3,32186,32648,32774,32813,32908,35352,35663,35912,36215,37665,37668,39138,39249,39438,39439,39525,40594,32202,20342,21513,25326,26708,37329,21931,20794,63755,63756,23068,25062,63757,25295,25343,63758,63759,63760,63761,63762,63763,37027,63764,63765,63766,63767,63768,35582,63769,63770,63771,63772,26262,63773,29014,63774,63775,38627,63776,25423,25466,21335,63777,26511,26976,28275,63778,30007,63779,63780,63781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32013,63782,63783,34930,22218,23064,63784,63785,63786,63787,63788,20035,63789,20839,22856,26608,32784,63790,22899,24180,25754,31178,24565,24684,25288,25467,23527,23511,21162,63791,22900,24361,24594,63792,63793,63794,29785,63795,63796,63797,63798,63799,63800,39377,63801,63802,63803,63804,63805,63806,63807,63808,63809,63810,63811,28611,63812,63813,33215,36786,24817,63814,63815,33126,63816,63817,23615,63818,63819,63820,63821,63822,63823,63824,63825,23273,35365,26491,32016,63826,63827,63828,63829,63830,63831,33021,63832,63833,23612,27877,21311,28346,22810,33590,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20025,20150,20294,21934,22296,22727,24406,26039,26086,27264,27573,28237,30701,31471,31774,32222,34507,34962,37170,37723,25787,28606,29562,30136,36948,21846,22349,25018,25812,26311,28129,28251,28525,28601,30192,32835,33213,34113,35203,35527,35674,37663,27795,30035,31572,36367,36957,21776,22530,22616,24162,25095,25758,26848,30070,31958,34739,40680,20195,22408,22382,22823,23565,23729,24118,24453,25140,25825,29619,33274,34955,36024,38538,40667,23429,24503,24755,20498,20992,21040,22294,22581,22615,23566,23648,23798,23947,24230,24466,24764,25361,25481,25623,26691,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26873,27330,28120,28193,28372,28644,29182,30428,30585,31153,31291,33796,35241,36077,36339,36424,36867,36884,36947,37117,37709,38518,38876,27602,28678,29272,29346,29544,30563,31167,31716,32411,35712,22697,24775,25958,26109,26302,27788,28958,29129,35930,38931,20077,31361,20189,20908,20941,21205,21516,24999,26481,26704,26847,27934,28540,30140,30643,31461,33012,33891,37509,20828,26007,26460,26515,30168,31431,33651,63834,35910,36887,38957,23663,33216,33434,36929,36975,37389,24471,23965,27225,29128,30331,31561,34276,35588,37159,39472,21895,25078,63835,30313,32645,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34367,34746,35064,37007,63836,27931,28889,29662,32097,33853,63837,37226,39409,63838,20098,21365,27396,27410,28734,29211,34349,40478,21068,36771,23888,25829,25900,27414,28651,31811,32412,34253,35172,35261,25289,33240,34847,24266,26391,28010,29436,29701,29807,34690,37086,20358,23821,24480,33802,20919,25504,30053,20142,20486,20841,20937,26753,27153,31918,31921,31975,33391,35538,36635,37327,20406,20791,21237,21570,24300,24942,25150,26053,27354,28670,31018,34268,34851,38317,39522,39530,40599,40654,21147,26310,27511,28701,31019,36706,38722,24976,25088,25891,28451,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,29001,29833,32244,32879,34030,36646,36899,37706,20925,21015,21155,27916,28872,35010,24265,25986,27566,28610,31806,29557,20196,20278,22265,63839,23738,23994,24604,29618,31533,32666,32718,32838,36894,37428,38646,38728,38936,40801,20363,28583,31150,37300,38583,21214,63840,25736,25796,27347,28510,28696,29200,30439,32769,34310,34396,36335,36613,38706,39791,40442,40565,30860,31103,32160,33737,37636,40575,40595,35542,22751,24324,26407,28711,29903,31840,32894,20769,28712,29282,30922,36034,36058,36084,38647,20102,20698,23534,24278,26009,29134,30274,30637,32842,34044,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36988,39719,40845,22744,23105,23650,27155,28122,28431,30267,32047,32311,34078,35128,37860,38475,21129,26066,26611,27060,27969,28316,28687,29705,29792,30041,30244,30827,35628,39006,20845,25134,38520,20374,20523,23833,28138,32184,36650,24459,24900,26647,63841,38534,21202,32907,20956,20940,26974,31260,32190,33777,38517,20442,21033,21400,21519,21774,23653,24743,26446,26792,28012,29313,29432,29702,29827,63842,30178,31852,32633,32696,33673,35023,35041,37324,37328,38626,39881,21533,28542,29136,29848,34298,36522,38563,40023,40607,26519,28107,29747,33256,38678,30764,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31435,31520,31890,25705,29802,30194,30908,30952,39340,39764,40635,23518,24149,28448,33180,33707,37e3,19975,21325,23081,24018,24398,24930,25405,26217,26364,28415,28459,28771,30622,33836,34067,34875,36627,39237,39995,21788,25273,26411,27819,33545,35178,38778,20129,22916,24536,24537,26395,32178,32596,33426,33579,33725,36638,37017,22475,22969,23186,23504,26151,26522,26757,27599,29028,32629,36023,36067,36993,39749,33032,35978,38476,39488,40613,23391,27667,29467,30450,30431,33804,20906,35219,20813,20885,21193,26825,27796,30468,30496,32191,32236,38754,40629,28357,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34065,20901,21517,21629,26126,26269,26919,28319,30399,30609,33559,33986,34719,37225,37528,40180,34946,20398,20882,21215,22982,24125,24917,25720,25721,26286,26576,27169,27597,27611,29279,29281,29761,30520,30683,32791,33468,33541,35584,35624,35980,26408,27792,29287,30446,30566,31302,40361,27519,27794,22818,26406,33945,21359,22675,22937,24287,25551,26164,26483,28218,29483,31447,33495,37672,21209,24043,25006,25035,25098,25287,25771,26080,26969,27494,27595,28961,29687,30045,32326,33310,33538,34154,35491,36031,38695,40289,22696,40664,20497,21006,21563,21839,25991,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27766,32010,32011,32862,34442,38272,38639,21247,27797,29289,21619,23194,23614,23883,24396,24494,26410,26806,26979,28220,28228,30473,31859,32654,34183,35598,36855,38753,40692,23735,24758,24845,25003,25935,26107,26108,27665,27887,29599,29641,32225,38292,23494,34588,35600,21085,21338,25293,25615,25778,26420,27192,27850,29632,29854,31636,31893,32283,33162,33334,34180,36843,38649,39361,20276,21322,21453,21467,25292,25644,25856,26001,27075,27886,28504,29677,30036,30242,30436,30460,30928,30971,31020,32070,33324,34784,36820,38930,39151,21187,25300,25765,28196,28497,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30332,36299,37297,37474,39662,39747,20515,20621,22346,22952,23592,24135,24439,25151,25918,26041,26049,26121,26507,27036,28354,30917,32033,32938,33152,33323,33459,33953,34444,35370,35607,37030,38450,40848,20493,20467,63843,22521,24472,25308,25490,26479,28227,28953,30403,32972,32986,35060,35061,35097,36064,36649,37197,38506,20271,20336,24091,26575,26658,30333,30334,39748,24161,27146,29033,29140,30058,63844,32321,34115,34281,39132,20240,31567,32624,38309,20961,24070,26805,27710,27726,27867,29359,31684,33539,27861,29754,20731,21128,22721,25816,27287,29863,30294,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30887,34327,38370,38713,63845,21342,24321,35722,36776,36783,37002,21029,30629,40009,40712,19993,20482,20853,23643,24183,26142,26170,26564,26821,28851,29953,30149,31177,31453,36647,39200,39432,20445,22561,22577,23542,26222,27493,27921,28282,28541,29668,29995,33769,35036,35091,35676,36628,20239,20693,21264,21340,23443,24489,26381,31119,33145,33583,34068,35079,35206,36665,36667,39333,39954,26412,20086,20472,22857,23553,23791,23792,25447,26834,28925,29090,29739,32299,34028,34562,36898,37586,40179,19981,20184,20463,20613,21078,21103,21542,21648,22496,22827,23142,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23386,23413,23500,24220,63846,25206,25975,26023,28014,28325,29238,31526,31807,32566,33104,33105,33178,33344,33433,33705,35331,36e3,36070,36091,36212,36282,37096,37340,38428,38468,39385,40167,21271,20998,21545,22132,22707,22868,22894,24575,24996,25198,26128,27774,28954,30406,31881,31966,32027,33452,36033,38640,63847,20315,24343,24447,25282,23849,26379,26842,30844,32323,40300,19989,20633,21269,21290,21329,22915,23138,24199,24754,24970,25161,25209,26e3,26503,27047,27604,27606,27607,27608,27832,63848,29749,30202,30738,30865,31189,31192,31875,32203,32737,32933,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33086,33218,33778,34586,35048,35513,35692,36027,37145,38750,39131,40763,22188,23338,24428,25996,27315,27567,27996,28657,28693,29277,29613,36007,36051,38971,24977,27703,32856,39425,20045,20107,20123,20181,20282,20284,20351,20447,20735,21490,21496,21766,21987,22235,22763,22882,23057,23531,23546,23556,24051,24107,24473,24605,25448,26012,26031,26614,26619,26797,27515,27801,27863,28195,28681,29509,30722,31038,31040,31072,31169,31721,32023,32114,32902,33293,33678,34001,34503,35039,35408,35422,35613,36060,36198,36781,37034,39164,39391,40605,21066,63849,26388,63850,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20632,21034,23665,25955,27733,29642,29987,30109,31639,33948,37240,38704,20087,25746,27578,29022,34217,19977,63851,26441,26862,28183,33439,34072,34923,25591,28545,37394,39087,19978,20663,20687,20767,21830,21930,22039,23360,23577,23776,24120,24202,24224,24258,24819,26705,27233,28248,29245,29248,29376,30456,31077,31665,32724,35059,35316,35443,35937,36062,38684,22622,29885,36093,21959,63852,31329,32034,33394,29298,29983,29989,63853,31513,22661,22779,23996,24207,24246,24464,24661,25234,25471,25933,26257,26329,26360,26646,26866,29312,29790,31598,32110,32214,32626,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32997,33298,34223,35199,35475,36893,37604,40653,40736,22805,22893,24109,24796,26132,26227,26512,27728,28101,28511,30707,30889,33990,37323,37675,20185,20682,20808,21892,23307,23459,25159,25982,26059,28210,29053,29697,29764,29831,29887,30316,31146,32218,32341,32680,33146,33203,33337,34330,34796,35445,36323,36984,37521,37925,39245,39854,21352,23633,26964,27844,27945,28203,33292,34203,35131,35373,35498,38634,40807,21089,26297,27570,32406,34814,36109,38275,38493,25885,28041,29166,63854,22478,22995,23468,24615,24826,25104,26143,26207,29481,29689,30427,30465,31596,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32854,32882,33125,35488,37266,19990,21218,27506,27927,31237,31545,32048,63855,36016,21484,22063,22609,23477,23567,23569,24034,25152,25475,25620,26157,26803,27836,28040,28335,28703,28836,29138,29990,30095,30094,30233,31505,31712,31787,32032,32057,34092,34157,34311,35380,36877,36961,37045,37559,38902,39479,20439,23660,26463,28049,31903,32396,35606,36118,36895,23403,24061,25613,33984,36956,39137,29575,23435,24730,26494,28126,35359,35494,36865,38924,21047,63856,28753,30862,37782,34928,37335,20462,21463,22013,22234,22402,22781,23234,23432,23723,23744,24101,24833,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25101,25163,25480,25628,25910,25976,27193,27530,27700,27929,28465,29159,29417,29560,29703,29874,30246,30561,31168,31319,31466,31929,32143,32172,32353,32670,33065,33585,33936,34010,34282,34966,35504,35728,36664,36930,36995,37228,37526,37561,38539,38567,38568,38614,38656,38920,39318,39635,39706,21460,22654,22809,23408,23487,28113,28506,29087,29729,29881,32901,33789,24033,24455,24490,24642,26092,26642,26991,27219,27529,27957,28147,29667,30462,30636,31565,32020,33059,33308,33600,34036,34147,35426,35524,37255,37662,38918,39348,25100,34899,36848,37477,23815,23847,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23913,29791,33181,34664,28629,25342,32722,35126,35186,19998,20056,20711,21213,21319,25215,26119,32361,34821,38494,20365,21273,22070,22987,23204,23608,23630,23629,24066,24337,24643,26045,26159,26178,26558,26612,29468,30690,31034,32709,33940,33997,35222,35430,35433,35553,35925,35962,22516,23508,24335,24687,25325,26893,27542,28252,29060,31698,34645,35672,36606,39135,39166,20280,20353,20449,21627,23072,23480,24892,26032,26216,29180,30003,31070,32051,33102,33251,33688,34218,34254,34563,35338,36523,36763,63857,36805,22833,23460,23526,24713,23529,23563,24515,27777,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,63858,28145,28683,29978,33455,35574,20160,21313,63859,38617,27663,20126,20420,20818,21854,23077,23784,25105,29273,33469,33706,34558,34905,35357,38463,38597,39187,40201,40285,22538,23731,23997,24132,24801,24853,25569,27138,28197,37122,37716,38990,39952,40823,23433,23736,25353,26191,26696,30524,38593,38797,38996,39839,26017,35585,36555,38332,21813,23721,24022,24245,26263,30284,33780,38343,22739,25276,29390,40232,20208,22830,24591,26171,27523,31207,40230,21395,21696,22467,23830,24859,26326,28079,30861,33406,38552,38724,21380,25212,25494,28082,32266,33099,38989,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27387,32588,40367,40474,20063,20539,20918,22812,24825,25590,26928,29242,32822,63860,37326,24369,63861,63862,32004,33509,33903,33979,34277,36493,63863,20335,63864,63865,22756,23363,24665,25562,25880,25965,26264,63866,26954,27171,27915,28673,29036,30162,30221,31155,31344,63867,32650,63868,35140,63869,35731,37312,38525,63870,39178,22276,24481,26044,28417,30208,31142,35486,39341,39770,40812,20740,25014,25233,27277,33222,20547,22576,24422,28937,35328,35578,23420,34326,20474,20796,22196,22852,25513,28153,23978,26989,20870,20104,20313,63871,63872,63873,22914,63874,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,63875,27487,27741,63876,29877,30998,63877,33287,33349,33593,36671,36701,63878,39192,63879,63880,63881,20134,63882,22495,24441,26131,63883,63884,30123,32377,35695,63885,36870,39515,22181,22567,23032,23071,23476,63886,24310,63887,63888,25424,25403,63889,26941,27783,27839,28046,28051,28149,28436,63890,28895,28982,29017,63891,29123,29141,63892,30799,30831,63893,31605,32227,63894,32303,63895,34893,36575,63896,63897,63898,37467,63899,40182,63900,63901,63902,24709,28037,63903,29105,63904,63905,38321,21421,63906,63907,63908,26579,63909,28814,28976,29744,33398,33490,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,63910,38331,39653,40573,26308,63911,29121,33865,63912,63913,22603,63914,63915,23992,24433,63916,26144,26254,27001,27054,27704,27891,28214,28481,28634,28699,28719,29008,29151,29552,63917,29787,63918,29908,30408,31310,32403,63919,63920,33521,35424,36814,63921,37704,63922,38681,63923,63924,20034,20522,63925,21e3,21473,26355,27757,28618,29450,30591,31330,33454,34269,34306,63926,35028,35427,35709,35947,63927,37555,63928,38675,38928,20116,20237,20425,20658,21320,21566,21555,21978,22626,22714,22887,23067,23524,24735,63929,25034,25942,26111,26212,26791,27738,28595,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28879,29100,29522,31613,34568,35492,39986,40711,23627,27779,29508,29577,37434,28331,29797,30239,31337,32277,34314,20800,22725,25793,29934,29973,30320,32705,37013,38605,39252,28198,29926,31401,31402,33253,34521,34680,35355,23113,23436,23451,26785,26880,28003,29609,29715,29740,30871,32233,32747,33048,33109,33694,35916,38446,38929,26352,24448,26106,26505,27754,29579,20525,23043,27498,30702,22806,23916,24013,29477,30031,63930,63931,20709,20985,22575,22829,22934,23002,23525,63932,63933,23970,25303,25622,25747,25854,63934,26332,63935,27208,63936,29183,29796,63937,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31368,31407,32327,32350,32768,33136,63938,34799,35201,35616,36953,63939,36992,39250,24958,27442,28020,32287,35109,36785,20433,20653,20887,21191,22471,22665,23481,24248,24898,27029,28044,28263,28342,29076,29794,29992,29996,32883,33592,33993,36362,37780,37854,63940,20110,20305,20598,20778,21448,21451,21491,23431,23507,23588,24858,24962,26100,29275,29591,29760,30402,31056,31121,31161,32006,32701,33419,34261,34398,36802,36935,37109,37354,38533,38632,38633,21206,24423,26093,26161,26671,29020,31286,37057,38922,20113,63941,27218,27550,28560,29065,32792,33464,34131,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36939,38549,38642,38907,34074,39729,20112,29066,38596,20803,21407,21729,22291,22290,22435,23195,23236,23491,24616,24895,25588,27781,27961,28274,28304,29232,29503,29783,33489,34945,36677,36960,63942,38498,39e3,40219,26376,36234,37470,20301,20553,20702,21361,22285,22996,23041,23561,24944,26256,28205,29234,29771,32239,32963,33806,33894,34111,34655,34907,35096,35586,36949,38859,39759,20083,20369,20754,20842,63943,21807,21929,23418,23461,24188,24189,24254,24736,24799,24840,24841,25540,25912,26377,63944,26580,26586,63945,26977,26978,27833,27943,63946,28216,63947,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28641,29494,29495,63948,29788,30001,63949,30290,63950,63951,32173,33278,33848,35029,35480,35547,35565,36400,36418,36938,36926,36986,37193,37321,37742,63952,63953,22537,63954,27603,32905,32946,63955,63956,20801,22891,23609,63957,63958,28516,29607,32996,36103,63959,37399,38287,63960,63961,63962,63963,32895,25102,28700,32104,34701,63964,22432,24681,24903,27575,35518,37504,38577,20057,21535,28139,34093,38512,38899,39150,25558,27875,37009,20957,25033,33210,40441,20381,20506,20736,23452,24847,25087,25836,26885,27589,30097,30691,32681,33380,34191,34811,34915,35516,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35696,37291,20108,20197,20234,63965,63966,22839,23016,63967,24050,24347,24411,24609,63968,63969,63970,63971,29246,29669,63972,30064,30157,63973,31227,63974,32780,32819,32900,33505,33617,63975,63976,36029,36019,36999,63977,63978,39156,39180,63979,63980,28727,30410,32714,32716,32764,35610,20154,20161,20995,21360,63981,21693,22240,23035,23493,24341,24525,28270,63982,63983,32106,33589,63984,34451,35469,63985,38765,38775,63986,63987,19968,20314,20350,22777,26085,28322,36920,37808,39353,20219,22764,22922,23001,24641,63988,63989,31252,63990,33615,36035,20837,21316,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,63991,63992,63993,20173,21097,23381,33471,20180,21050,21672,22985,23039,23376,23383,23388,24675,24904,28363,28825,29038,29574,29943,30133,30913,32043,32773,33258,33576,34071,34249,35566,36039,38604,20316,21242,22204,26027,26152,28796,28856,29237,32189,33421,37196,38592,40306,23409,26855,27544,28538,30430,23697,26283,28507,31668,31786,34870,38620,19976,20183,21280,22580,22715,22767,22892,23559,24115,24196,24373,25484,26290,26454,27167,27299,27404,28479,29254,63994,29520,29835,31456,31911,33144,33247,33255,33674,33900,34083,34196,34255,35037,36115,37292,38263,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38556,20877,21705,22312,23472,25165,26448,26685,26771,28221,28371,28797,32289,35009,36001,36617,40779,40782,29229,31631,35533,37658,20295,20302,20786,21632,22992,24213,25269,26485,26990,27159,27822,28186,29401,29482,30141,31672,32053,33511,33785,33879,34295,35419,36015,36487,36889,37048,38606,40799,21219,21514,23265,23490,25688,25973,28404,29380,63995,30340,31309,31515,31821,32318,32735,33659,35627,36042,36196,36321,36447,36842,36857,36969,37841,20291,20346,20659,20840,20856,21069,21098,22625,22652,22880,23560,23637,24283,24731,25136,26643,27583,27656,28593,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,29006,29728,3e4,30008,30033,30322,31564,31627,31661,31686,32399,35438,36670,36681,37439,37523,37666,37931,38651,39002,39019,39198,20999,25130,25240,27993,30308,31434,31680,32118,21344,23742,24215,28472,28857,31896,38673,39822,40670,25509,25722,34678,19969,20117,20141,20572,20597,21576,22979,23450,24128,24237,24311,24449,24773,25402,25919,25972,26060,26230,26232,26622,26984,27273,27491,27712,28096,28136,28191,28254,28702,28833,29582,29693,30010,30555,30855,31118,31243,31357,31934,32142,33351,35330,35562,35998,37165,37194,37336,37478,37580,37664,38662,38742,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38748,38914,40718,21046,21137,21884,22564,24093,24351,24716,25552,26799,28639,31085,31532,33229,34234,35069,35576,36420,37261,38500,38555,38717,38988,40778,20430,20806,20939,21161,22066,24340,24427,25514,25805,26089,26177,26362,26361,26397,26781,26839,27133,28437,28526,29031,29157,29226,29866,30522,31062,31066,31199,31264,31381,31895,31967,32068,32368,32903,34299,34468,35412,35519,36249,36481,36896,36973,37347,38459,38613,40165,26063,31751,36275,37827,23384,23562,21330,25305,29469,20519,23447,24478,24752,24939,26837,28121,29742,31278,32066,32156,32305,33131,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36394,36405,37758,37912,20304,22352,24038,24231,25387,32618,20027,20303,20367,20570,23005,32964,21610,21608,22014,22863,23449,24030,24282,26205,26417,26609,26666,27880,27954,28234,28557,28855,29664,30087,31820,32002,32044,32162,33311,34523,35387,35461,36208,36490,36659,36913,37198,37202,37956,39376,31481,31909,20426,20737,20934,22472,23535,23803,26201,27197,27994,28310,28652,28940,30063,31459,34850,36897,36981,38603,39423,33537,20013,20210,34886,37325,21373,27355,26987,27713,33914,22686,24974,26366,25327,28893,29969,30151,32338,33976,35657,36104,20043,21482,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21675,22320,22336,24535,25345,25351,25711,25903,26088,26234,26525,26547,27490,27744,27802,28460,30693,30757,31049,31063,32025,32930,33026,33267,33437,33463,34584,35468,63996,36100,36286,36978,30452,31257,31287,32340,32887,21767,21972,22645,25391,25634,26185,26187,26733,27035,27524,27941,28337,29645,29800,29857,30043,30137,30433,30494,30603,31206,32265,32285,33275,34095,34967,35386,36049,36587,36784,36914,37805,38499,38515,38663,20356,21489,23018,23241,24089,26702,29894,30142,31209,31378,33187,34541,36074,36300,36845,26015,26389,63997,22519,28503,32221,36655,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37878,38598,24501,25074,28548,19988,20376,20511,21449,21983,23919,24046,27425,27492,30923,31642,63998,36425,36554,36974,25417,25662,30528,31364,37679,38015,40810,25776,28591,29158,29864,29914,31428,31762,32386,31922,32408,35738,36106,38013,39184,39244,21049,23519,25830,26413,32046,20717,21443,22649,24920,24921,25082,26028,31449,35730,35734,20489,20513,21109,21809,23100,24288,24432,24884,25950,26124,26166,26274,27085,28356,28466,29462,30241,31379,33081,33369,33750,33980,20661,22512,23488,23528,24425,25505,30758,32181,33756,34081,37319,37365,20874,26613,31574,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36012,20932,22971,24765,34389,20508,63999,21076,23610,24957,25114,25299,25842,26021,28364,30240,33034,36448,38495,38587,20191,21315,21912,22825,24029,25797,27849,28154,29588,31359,33307,34214,36068,36368,36983,37351,38369,38433,38854,20984,21746,21894,24505,25764,28552,32180,36639,36685,37941,20681,23574,27838,28155,29979,30651,31805,31844,35449,35522,22558,22974,24086,25463,29266,30090,30571,35548,36028,36626,24307,26228,28152,32893,33729,35531,38737,39894,64e3,21059,26367,28053,28399,32224,35558,36910,36958,39636,21021,21119,21736,24980,25220,25307,26786,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26898,26970,27189,28818,28966,30813,30977,30990,31186,31245,32918,33400,33493,33609,34121,35970,36229,37218,37259,37294,20419,22225,29165,30679,34560,35320,23544,24534,26449,37032,21474,22618,23541,24740,24961,25696,32317,32880,34085,37507,25774,20652,23828,26368,22684,25277,25512,26894,27e3,27166,28267,30394,31179,33467,33833,35535,36264,36861,37138,37195,37276,37648,37656,37786,38619,39478,39949,19985,30044,31069,31482,31569,31689,32302,33988,36441,36468,36600,36880,26149,26943,29763,20986,26414,40668,20805,24544,27798,34802,34909,34935,24756,33205,33795,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36101,21462,21561,22068,23094,23601,28810,32736,32858,33030,33261,36259,37257,39519,40434,20596,20164,21408,24827,28204,23652,20360,20516,21988,23769,24159,24677,26772,27835,28100,29118,30164,30196,30305,31258,31305,32199,32251,32622,33268,34473,36636,38601,39347,40786,21063,21189,39149,35242,19971,26578,28422,20405,23522,26517,27784,28024,29723,30759,37341,37756,34756,31204,31281,24555,20182,21668,21822,22702,22949,24816,25171,25302,26422,26965,33333,38464,39345,39389,20524,21331,21828,22396,64001,25176,64002,25826,26219,26589,28609,28655,29730,29752,35351,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37944,21585,22022,22374,24392,24986,27470,28760,28845,32187,35477,22890,33067,25506,30472,32829,36010,22612,25645,27067,23445,24081,28271,64003,34153,20812,21488,22826,24608,24907,27526,27760,27888,31518,32974,33492,36294,37040,39089,64004,25799,28580,25745,25860,20814,21520,22303,35342,24927,26742,64005,30171,31570,32113,36890,22534,27084,33151,35114,36864,38969,20600,22871,22956,25237,36879,39722,24925,29305,38358,22369,23110,24052,25226,25773,25850,26487,27874,27966,29228,29750,30772,32631,33453,36315,38935,21028,22338,26495,29256,29923,36009,36774,37393,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38442,20843,21485,25420,20329,21764,24726,25943,27803,28031,29260,29437,31255,35207,35997,24429,28558,28921,33192,24846,20415,20559,25153,29255,31687,32232,32745,36941,38829,39449,36022,22378,24179,26544,33805,35413,21536,23318,24163,24290,24330,25987,32954,34109,38281,38491,20296,21253,21261,21263,21638,21754,22275,24067,24598,25243,25265,25429,64006,27873,28006,30129,30770,32990,33071,33502,33889,33970,34957,35090,36875,37610,39165,39825,24133,26292,26333,28689,29190,64007,20469,21117,24426,24915,26451,27161,28418,29922,31080,34920,35961,39111,39108,39491,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21697,31263,26963,35575,35914,39080,39342,24444,25259,30130,30382,34987,36991,38466,21305,24380,24517,27852,29644,30050,30091,31558,33534,39325,20047,36924,19979,20309,21414,22799,24264,26160,27827,29781,33655,34662,36032,36944,38686,39957,22737,23416,34384,35604,40372,23506,24680,24717,26097,27735,28450,28579,28698,32597,32752,38289,38290,38480,38867,21106,36676,20989,21547,21688,21859,21898,27323,28085,32216,33382,37532,38519,40569,21512,21704,30418,34532,38308,38356,38492,20130,20233,23022,23270,24055,24658,25239,26477,26689,27782,28207,32568,32923,33322,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64008,64009,38917,20133,20565,21683,22419,22874,23401,23475,25032,26999,28023,28707,34809,35299,35442,35559,36994,39405,39608,21182,26680,20502,24184,26447,33607,34892,20139,21521,22190,29670,37141,38911,39177,39255,39321,22099,22687,34395,35377,25010,27382,29563,36562,27463,38570,39511,22869,29184,36203,38761,20436,23796,24358,25080,26203,27883,28843,29572,29625,29694,30505,30541,32067,32098,32291,33335,34898,64010,36066,37449,39023,23377,31348,34880,38913,23244,20448,21332,22846,23805,25406,28025,29433,33029,33031,33698,37583,38960,20136,20804,21009,22411,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24418,27842,28366,28677,28752,28847,29074,29673,29801,33610,34722,34913,36872,37026,37795,39336,20846,24407,24800,24935,26291,34137,36426,37295,38795,20046,20114,21628,22741,22778,22909,23733,24359,25142,25160,26122,26215,27627,28009,28111,28246,28408,28564,28640,28649,28765,29392,29733,29786,29920,30355,31068,31946,32286,32993,33446,33899,33983,34382,34399,34676,35703,35946,37804,38912,39013,24785,25110,37239,23130,26127,28151,28222,29759,39746,24573,24794,31503,21700,24344,27742,27859,27946,28888,32005,34425,35340,40251,21270,21644,23301,27194,28779,30069,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31117,31166,33457,33775,35441,35649,36008,38772,64011,25844,25899,30906,30907,31339,20024,21914,22864,23462,24187,24739,25563,27489,26213,26707,28185,29029,29872,32008,36996,39529,39973,27963,28369,29502,35905,38346,20976,24140,24488,24653,24822,24880,24908,26179,26180,27045,27841,28255,28361,28514,29004,29852,30343,31681,31783,33618,34647,36945,38541,40643,21295,22238,24315,24458,24674,24724,25079,26214,26371,27292,28142,28590,28784,29546,32362,33214,33588,34516,35496,36036,21123,29554,23446,27243,37892,21742,22150,23389,25928,25989,26313,26783,28045,28102,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,29243,32948,37237,39501,20399,20505,21402,21518,21564,21897,21957,24127,24460,26429,29030,29661,36869,21211,21235,22628,22734,28932,29071,29179,34224,35347,26248,34216,21927,26244,29002,33841,21321,21913,27585,24409,24509,25582,26249,28999,35569,36637,40638,20241,25658,28875,30054,34407,24676,35662,40440,20807,20982,21256,27958,33016,40657,26133,27427,28824,30165,21507,23673,32007,35350,27424,27453,27462,21560,24688,27965,32725,33288,20694,20958,21916,22123,22221,23020,23305,24076,24985,24984,25137,26206,26342,29081,29113,29114,29351,31143,31232,32690,35440,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];Object.defineProperty(j7,"__esModule",{value:!0});j7.EUCKRDecoder=void 0;var Fy=s3,Ry=fc,ky=_0,ko=x3(),Py=w3(),f9=J2,Oy=function(e){Fy.__extends(t,e);function t(){var r=e!==null&&e.apply(this,arguments)||this;return r.lead=0,r}return t.prototype.decode=function(r){var n,i=r.read();if(i===ko.END_OF_BUFFER&&this.lead!==0)return this.lead=0,this.fail();if(i===ko.END_OF_BUFFER&&this.lead===0)return Py.FINISHED;if(this.lead!==0){var o=this.lead,s=null;this.lead=0,(0,f9.inRange)(i,65,254)&&(s=(o-129)*190+(i-65));var a=s==null?null:(n=Ry[s])!==null&&n!==void 0?n:null;return s==null&&(0,f9.isASCII)(i)&&r.write(i),a??this.fail()}return(0,f9.isASCII)(i)?i:(0,f9.inRange)(i,129,254)?(this.lead=i,null):this.fail()},t}(ky.AbstractDecoder);j7.EUCKRDecoder=Oy;var H7={};Object.defineProperty(H7,"__esModule",{value:!0});H7.EUCKREncoder=void 0;var Dy=s3,Uy=fc,Ny=E0,$y=x3(),Ly=w3(),Po=J2,My=function(e){Dy.__extends(t,e);function t(){return e!==null&&e.apply(this,arguments)||this}return t.prototype.encode=function(r){var n=r.read();if(n===$y.END_OF_BUFFER)return Ly.FINISHED;if((0,Po.isASCII)(n))return n;var i=(0,Po.indexOf)(Uy,n);if(i==null)return this.fail(n);var o=Math.floor(i/190)+129,s=i%190+65;return[o,s]},t}(Ny.AbstractEncoder);H7.EUCKREncoder=My;var zy=j7,jy=H7,Hy=g2;(0,Hy.registerEncoding)("euc-kr",["cseuckr","csksc56011987","euc-kr","iso-ir-149","korean","ks_c_5601-1987","ks_c_5601-1989","ksc5601","ksc_5601","windows-949"],zy.EUCKRDecoder,jy.EUCKREncoder);var M8={};const dc=[19970,19972,19973,19974,19983,19986,19991,19999,2e4,20001,20003,20006,20009,20014,20015,20017,20019,20021,20023,20028,20032,20033,20034,20036,20038,20042,20049,20053,20055,20058,20059,20066,20067,20068,20069,20071,20072,20074,20075,20076,20077,20078,20079,20082,20084,20085,20086,20087,20088,20089,20090,20091,20092,20093,20095,20096,20097,20098,20099,20100,20101,20103,20106,20112,20118,20119,20121,20124,20125,20126,20131,20138,20143,20144,20145,20148,20150,20151,20152,20153,20156,20157,20158,20168,20172,20175,20176,20178,20186,20187,20188,20192,20194,20198,20199,20201,20205,20206,20207,20209,20212,20216,20217,20218,20220,20222,20224,20226,20227,20228,20229,20230,20231,20232,20235,20236,20242,20243,20244,20245,20246,20252,20253,20257,20259,20264,20265,20268,20269,20270,20273,20275,20277,20279,20281,20283,20286,20287,20288,20289,20290,20292,20293,20295,20296,20297,20298,20299,20300,20306,20308,20310,20321,20322,20326,20328,20330,20331,20333,20334,20337,20338,20341,20343,20344,20345,20346,20349,20352,20353,20354,20357,20358,20359,20362,20364,20366,20368,20370,20371,20373,20374,20376,20377,20378,20380,20382,20383,20385,20386,20388,20395,20397,20400,20401,20402,20403,20404,20406,20407,20408,20409,20410,20411,20412,20413,20414,20416,20417,20418,20422,20423,20424,20425,20427,20428,20429,20434,20435,20436,20437,20438,20441,20443,20448,20450,20452,20453,20455,20459,20460,20464,20466,20468,20469,20470,20471,20473,20475,20476,20477,20479,20480,20481,20482,20483,20484,20485,20486,20487,20488,20489,20490,20491,20494,20496,20497,20499,20501,20502,20503,20507,20509,20510,20512,20514,20515,20516,20519,20523,20527,20528,20529,20530,20531,20532,20533,20534,20535,20536,20537,20539,20541,20543,20544,20545,20546,20548,20549,20550,20553,20554,20555,20557,20560,20561,20562,20563,20564,20566,20567,20568,20569,20571,20573,20574,20575,20576,20577,20578,20579,20580,20582,20583,20584,20585,20586,20587,20589,20590,20591,20592,20593,20594,20595,20596,20597,20600,20601,20602,20604,20605,20609,20610,20611,20612,20614,20615,20617,20618,20619,20620,20622,20623,20624,20625,20626,20627,20628,20629,20630,20631,20632,20633,20634,20635,20636,20637,20638,20639,20640,20641,20642,20644,20646,20650,20651,20653,20654,20655,20656,20657,20659,20660,20661,20662,20663,20664,20665,20668,20669,20670,20671,20672,20673,20674,20675,20676,20677,20678,20679,20680,20681,20682,20683,20684,20685,20686,20688,20689,20690,20691,20692,20693,20695,20696,20697,20699,20700,20701,20702,20703,20704,20705,20706,20707,20708,20709,20712,20713,20714,20715,20719,20720,20721,20722,20724,20726,20727,20728,20729,20730,20732,20733,20734,20735,20736,20737,20738,20739,20740,20741,20744,20745,20746,20748,20749,20750,20751,20752,20753,20755,20756,20757,20758,20759,20760,20761,20762,20763,20764,20765,20766,20767,20768,20770,20771,20772,20773,20774,20775,20776,20777,20778,20779,20780,20781,20782,20783,20784,20785,20786,20787,20788,20789,20790,20791,20792,20793,20794,20795,20796,20797,20798,20802,20807,20810,20812,20814,20815,20816,20818,20819,20823,20824,20825,20827,20829,20830,20831,20832,20833,20835,20836,20838,20839,20841,20842,20847,20850,20858,20862,20863,20867,20868,20870,20871,20874,20875,20878,20879,20880,20881,20883,20884,20888,20890,20893,20894,20895,20897,20899,20902,20903,20904,20905,20906,20909,20910,20916,20920,20921,20922,20926,20927,20929,20930,20931,20933,20936,20938,20941,20942,20944,20946,20947,20948,20949,20950,20951,20952,20953,20954,20956,20958,20959,20962,20963,20965,20966,20967,20968,20969,20970,20972,20974,20977,20978,20980,20983,20990,20996,20997,21001,21003,21004,21007,21008,21011,21012,21013,21020,21022,21023,21025,21026,21027,21029,21030,21031,21034,21036,21039,21041,21042,21044,21045,21052,21054,21060,21061,21062,21063,21064,21065,21067,21070,21071,21074,21075,21077,21079,21080,21081,21082,21083,21085,21087,21088,21090,21091,21092,21094,21096,21099,21100,21101,21102,21104,21105,21107,21108,21109,21110,21111,21112,21113,21114,21115,21116,21118,21120,21123,21124,21125,21126,21127,21129,21130,21131,21132,21133,21134,21135,21137,21138,21140,21141,21142,21143,21144,21145,21146,21148,21156,21157,21158,21159,21166,21167,21168,21172,21173,21174,21175,21176,21177,21178,21179,21180,21181,21184,21185,21186,21188,21189,21190,21192,21194,21196,21197,21198,21199,21201,21203,21204,21205,21207,21209,21210,21211,21212,21213,21214,21216,21217,21218,21219,21221,21222,21223,21224,21225,21226,21227,21228,21229,21230,21231,21233,21234,21235,21236,21237,21238,21239,21240,21243,21244,21245,21249,21250,21251,21252,21255,21257,21258,21259,21260,21262,21265,21266,21267,21268,21272,21275,21276,21278,21279,21282,21284,21285,21287,21288,21289,21291,21292,21293,21295,21296,21297,21298,21299,21300,21301,21302,21303,21304,21308,21309,21312,21314,21316,21318,21323,21324,21325,21328,21332,21336,21337,21339,21341,21349,21352,21354,21356,21357,21362,21366,21369,21371,21372,21373,21374,21376,21377,21379,21383,21384,21386,21390,21391,21392,21393,21394,21395,21396,21398,21399,21401,21403,21404,21406,21408,21409,21412,21415,21418,21419,21420,21421,21423,21424,21425,21426,21427,21428,21429,21431,21432,21433,21434,21436,21437,21438,21440,21443,21444,21445,21446,21447,21454,21455,21456,21458,21459,21461,21466,21468,21469,21470,21473,21474,21479,21492,21498,21502,21503,21504,21506,21509,21511,21515,21524,21528,21529,21530,21532,21538,21540,21541,21546,21552,21555,21558,21559,21562,21565,21567,21569,21570,21572,21573,21575,21577,21580,21581,21582,21583,21585,21594,21597,21598,21599,21600,21601,21603,21605,21607,21609,21610,21611,21612,21613,21614,21615,21616,21620,21625,21626,21630,21631,21633,21635,21637,21639,21640,21641,21642,21645,21649,21651,21655,21656,21660,21662,21663,21664,21665,21666,21669,21678,21680,21682,21685,21686,21687,21689,21690,21692,21694,21699,21701,21706,21707,21718,21720,21723,21728,21729,21730,21731,21732,21739,21740,21743,21744,21745,21748,21749,21750,21751,21752,21753,21755,21758,21760,21762,21763,21764,21765,21768,21770,21771,21772,21773,21774,21778,21779,21781,21782,21783,21784,21785,21786,21788,21789,21790,21791,21793,21797,21798,21800,21801,21803,21805,21810,21812,21813,21814,21816,21817,21818,21819,21821,21824,21826,21829,21831,21832,21835,21836,21837,21838,21839,21841,21842,21843,21844,21847,21848,21849,21850,21851,21853,21854,21855,21856,21858,21859,21864,21865,21867,21871,21872,21873,21874,21875,21876,21881,21882,21885,21887,21893,21894,21900,21901,21902,21904,21906,21907,21909,21910,21911,21914,21915,21918,21920,21921,21922,21923,21924,21925,21926,21928,21929,21930,21931,21932,21933,21934,21935,21936,21938,21940,21942,21944,21946,21948,21951,21952,21953,21954,21955,21958,21959,21960,21962,21963,21966,21967,21968,21973,21975,21976,21977,21978,21979,21982,21984,21986,21991,21993,21997,21998,22e3,22001,22004,22006,22008,22009,22010,22011,22012,22015,22018,22019,22020,22021,22022,22023,22026,22027,22029,22032,22033,22034,22035,22036,22037,22038,22039,22041,22042,22044,22045,22048,22049,22050,22053,22054,22056,22057,22058,22059,22062,22063,22064,22067,22069,22071,22072,22074,22076,22077,22078,22080,22081,22082,22083,22084,22085,22086,22087,22088,22089,22090,22091,22095,22096,22097,22098,22099,22101,22102,22106,22107,22109,22110,22111,22112,22113,22115,22117,22118,22119,22125,22126,22127,22128,22130,22131,22132,22133,22135,22136,22137,22138,22141,22142,22143,22144,22145,22146,22147,22148,22151,22152,22153,22154,22155,22156,22157,22160,22161,22162,22164,22165,22166,22167,22168,22169,22170,22171,22172,22173,22174,22175,22176,22177,22178,22180,22181,22182,22183,22184,22185,22186,22187,22188,22189,22190,22192,22193,22194,22195,22196,22197,22198,22200,22201,22202,22203,22205,22206,22207,22208,22209,22210,22211,22212,22213,22214,22215,22216,22217,22219,22220,22221,22222,22223,22224,22225,22226,22227,22229,22230,22232,22233,22236,22243,22245,22246,22247,22248,22249,22250,22252,22254,22255,22258,22259,22262,22263,22264,22267,22268,22272,22273,22274,22277,22279,22283,22284,22285,22286,22287,22288,22289,22290,22291,22292,22293,22294,22295,22296,22297,22298,22299,22301,22302,22304,22305,22306,22308,22309,22310,22311,22315,22321,22322,22324,22325,22326,22327,22328,22332,22333,22335,22337,22339,22340,22341,22342,22344,22345,22347,22354,22355,22356,22357,22358,22360,22361,22370,22371,22373,22375,22380,22382,22384,22385,22386,22388,22389,22392,22393,22394,22397,22398,22399,22400,22401,22407,22408,22409,22410,22413,22414,22415,22416,22417,22420,22421,22422,22423,22424,22425,22426,22428,22429,22430,22431,22437,22440,22442,22444,22447,22448,22449,22451,22453,22454,22455,22457,22458,22459,22460,22461,22462,22463,22464,22465,22468,22469,22470,22471,22472,22473,22474,22476,22477,22480,22481,22483,22486,22487,22491,22492,22494,22497,22498,22499,22501,22502,22503,22504,22505,22506,22507,22508,22510,22512,22513,22514,22515,22517,22518,22519,22523,22524,22526,22527,22529,22531,22532,22533,22536,22537,22538,22540,22542,22543,22544,22546,22547,22548,22550,22551,22552,22554,22555,22556,22557,22559,22562,22563,22565,22566,22567,22568,22569,22571,22572,22573,22574,22575,22577,22578,22579,22580,22582,22583,22584,22585,22586,22587,22588,22589,22590,22591,22592,22593,22594,22595,22597,22598,22599,22600,22601,22602,22603,22606,22607,22608,22610,22611,22613,22614,22615,22617,22618,22619,22620,22621,22623,22624,22625,22626,22627,22628,22630,22631,22632,22633,22634,22637,22638,22639,22640,22641,22642,22643,22644,22645,22646,22647,22648,22649,22650,22651,22652,22653,22655,22658,22660,22662,22663,22664,22666,22667,22668,22669,22670,22671,22672,22673,22676,22677,22678,22679,22680,22683,22684,22685,22688,22689,22690,22691,22692,22693,22694,22695,22698,22699,22700,22701,22702,22703,22704,22705,22706,22707,22708,22709,22710,22711,22712,22713,22714,22715,22717,22718,22719,22720,22722,22723,22724,22726,22727,22728,22729,22730,22731,22732,22733,22734,22735,22736,22738,22739,22740,22742,22743,22744,22745,22746,22747,22748,22749,22750,22751,22752,22753,22754,22755,22757,22758,22759,22760,22761,22762,22765,22767,22769,22770,22772,22773,22775,22776,22778,22779,22780,22781,22782,22783,22784,22785,22787,22789,22790,22792,22793,22794,22795,22796,22798,22800,22801,22802,22803,22807,22808,22811,22813,22814,22816,22817,22818,22819,22822,22824,22828,22832,22834,22835,22837,22838,22843,22845,22846,22847,22848,22851,22853,22854,22858,22860,22861,22864,22866,22867,22873,22875,22876,22877,22878,22879,22881,22883,22884,22886,22887,22888,22889,22890,22891,22892,22893,22894,22895,22896,22897,22898,22901,22903,22906,22907,22908,22910,22911,22912,22917,22921,22923,22924,22926,22927,22928,22929,22932,22933,22936,22938,22939,22940,22941,22943,22944,22945,22946,22950,22951,22956,22957,22960,22961,22963,22964,22965,22966,22967,22968,22970,22972,22973,22975,22976,22977,22978,22979,22980,22981,22983,22984,22985,22988,22989,22990,22991,22997,22998,23001,23003,23006,23007,23008,23009,23010,23012,23014,23015,23017,23018,23019,23021,23022,23023,23024,23025,23026,23027,23028,23029,23030,23031,23032,23034,23036,23037,23038,23040,23042,23050,23051,23053,23054,23055,23056,23058,23060,23061,23062,23063,23065,23066,23067,23069,23070,23073,23074,23076,23078,23079,23080,23082,23083,23084,23085,23086,23087,23088,23091,23093,23095,23096,23097,23098,23099,23101,23102,23103,23105,23106,23107,23108,23109,23111,23112,23115,23116,23117,23118,23119,23120,23121,23122,23123,23124,23126,23127,23128,23129,23131,23132,23133,23134,23135,23136,23137,23139,23140,23141,23142,23144,23145,23147,23148,23149,23150,23151,23152,23153,23154,23155,23160,23161,23163,23164,23165,23166,23168,23169,23170,23171,23172,23173,23174,23175,23176,23177,23178,23179,23180,23181,23182,23183,23184,23185,23187,23188,23189,23190,23191,23192,23193,23196,23197,23198,23199,23200,23201,23202,23203,23204,23205,23206,23207,23208,23209,23211,23212,23213,23214,23215,23216,23217,23220,23222,23223,23225,23226,23227,23228,23229,23231,23232,23235,23236,23237,23238,23239,23240,23242,23243,23245,23246,23247,23248,23249,23251,23253,23255,23257,23258,23259,23261,23262,23263,23266,23268,23269,23271,23272,23274,23276,23277,23278,23279,23280,23282,23283,23284,23285,23286,23287,23288,23289,23290,23291,23292,23293,23294,23295,23296,23297,23298,23299,23300,23301,23302,23303,23304,23306,23307,23308,23309,23310,23311,23312,23313,23314,23315,23316,23317,23320,23321,23322,23323,23324,23325,23326,23327,23328,23329,23330,23331,23332,23333,23334,23335,23336,23337,23338,23339,23340,23341,23342,23343,23344,23345,23347,23349,23350,23352,23353,23354,23355,23356,23357,23358,23359,23361,23362,23363,23364,23365,23366,23367,23368,23369,23370,23371,23372,23373,23374,23375,23378,23382,23390,23392,23393,23399,23400,23403,23405,23406,23407,23410,23412,23414,23415,23416,23417,23419,23420,23422,23423,23426,23430,23434,23437,23438,23440,23441,23442,23444,23446,23455,23463,23464,23465,23468,23469,23470,23471,23473,23474,23479,23482,23483,23484,23488,23489,23491,23496,23497,23498,23499,23501,23502,23503,23505,23508,23509,23510,23511,23512,23513,23514,23515,23516,23520,23522,23523,23526,23527,23529,23530,23531,23532,23533,23535,23537,23538,23539,23540,23541,23542,23543,23549,23550,23552,23554,23555,23557,23559,23560,23563,23564,23565,23566,23568,23570,23571,23575,23577,23579,23582,23583,23584,23585,23587,23590,23592,23593,23594,23595,23597,23598,23599,23600,23602,23603,23605,23606,23607,23619,23620,23622,23623,23628,23629,23634,23635,23636,23638,23639,23640,23642,23643,23644,23645,23647,23650,23652,23655,23656,23657,23658,23659,23660,23661,23664,23666,23667,23668,23669,23670,23671,23672,23675,23676,23677,23678,23680,23683,23684,23685,23686,23687,23689,23690,23691,23694,23695,23698,23699,23701,23709,23710,23711,23712,23713,23716,23717,23718,23719,23720,23722,23726,23727,23728,23730,23732,23734,23737,23738,23739,23740,23742,23744,23746,23747,23749,23750,23751,23752,23753,23754,23756,23757,23758,23759,23760,23761,23763,23764,23765,23766,23767,23768,23770,23771,23772,23773,23774,23775,23776,23778,23779,23783,23785,23787,23788,23790,23791,23793,23794,23795,23796,23797,23798,23799,23800,23801,23802,23804,23805,23806,23807,23808,23809,23812,23813,23816,23817,23818,23819,23820,23821,23823,23824,23825,23826,23827,23829,23831,23832,23833,23834,23836,23837,23839,23840,23841,23842,23843,23845,23848,23850,23851,23852,23855,23856,23857,23858,23859,23861,23862,23863,23864,23865,23866,23867,23868,23871,23872,23873,23874,23875,23876,23877,23878,23880,23881,23885,23886,23887,23888,23889,23890,23891,23892,23893,23894,23895,23897,23898,23900,23902,23903,23904,23905,23906,23907,23908,23909,23910,23911,23912,23914,23917,23918,23920,23921,23922,23923,23925,23926,23927,23928,23929,23930,23931,23932,23933,23934,23935,23936,23937,23939,23940,23941,23942,23943,23944,23945,23946,23947,23948,23949,23950,23951,23952,23953,23954,23955,23956,23957,23958,23959,23960,23962,23963,23964,23966,23967,23968,23969,23970,23971,23972,23973,23974,23975,23976,23977,23978,23979,23980,23981,23982,23983,23984,23985,23986,23987,23988,23989,23990,23992,23993,23994,23995,23996,23997,23998,23999,24e3,24001,24002,24003,24004,24006,24007,24008,24009,24010,24011,24012,24014,24015,24016,24017,24018,24019,24020,24021,24022,24023,24024,24025,24026,24028,24031,24032,24035,24036,24042,24044,24045,24048,24053,24054,24056,24057,24058,24059,24060,24063,24064,24068,24071,24073,24074,24075,24077,24078,24082,24083,24087,24094,24095,24096,24097,24098,24099,24100,24101,24104,24105,24106,24107,24108,24111,24112,24114,24115,24116,24117,24118,24121,24122,24126,24127,24128,24129,24131,24134,24135,24136,24137,24138,24139,24141,24142,24143,24144,24145,24146,24147,24150,24151,24152,24153,24154,24156,24157,24159,24160,24163,24164,24165,24166,24167,24168,24169,24170,24171,24172,24173,24174,24175,24176,24177,24181,24183,24185,24190,24193,24194,24195,24197,24200,24201,24204,24205,24206,24210,24216,24219,24221,24225,24226,24227,24228,24232,24233,24234,24235,24236,24238,24239,24240,24241,24242,24244,24250,24251,24252,24253,24255,24256,24257,24258,24259,24260,24261,24262,24263,24264,24267,24268,24269,24270,24271,24272,24276,24277,24279,24280,24281,24282,24284,24285,24286,24287,24288,24289,24290,24291,24292,24293,24294,24295,24297,24299,24300,24301,24302,24303,24304,24305,24306,24307,24309,24312,24313,24315,24316,24317,24325,24326,24327,24329,24332,24333,24334,24336,24338,24340,24342,24345,24346,24348,24349,24350,24353,24354,24355,24356,24360,24363,24364,24366,24368,24370,24371,24372,24373,24374,24375,24376,24379,24381,24382,24383,24385,24386,24387,24388,24389,24390,24391,24392,24393,24394,24395,24396,24397,24398,24399,24401,24404,24409,24410,24411,24412,24414,24415,24416,24419,24421,24423,24424,24427,24430,24431,24434,24436,24437,24438,24440,24442,24445,24446,24447,24451,24454,24461,24462,24463,24465,24467,24468,24470,24474,24475,24477,24478,24479,24480,24482,24483,24484,24485,24486,24487,24489,24491,24492,24495,24496,24497,24498,24499,24500,24502,24504,24505,24506,24507,24510,24511,24512,24513,24514,24519,24520,24522,24523,24526,24531,24532,24533,24538,24539,24540,24542,24543,24546,24547,24549,24550,24552,24553,24556,24559,24560,24562,24563,24564,24566,24567,24569,24570,24572,24583,24584,24585,24587,24588,24592,24593,24595,24599,24600,24602,24606,24607,24610,24611,24612,24620,24621,24622,24624,24625,24626,24627,24628,24630,24631,24632,24633,24634,24637,24638,24640,24644,24645,24646,24647,24648,24649,24650,24652,24654,24655,24657,24659,24660,24662,24663,24664,24667,24668,24670,24671,24672,24673,24677,24678,24686,24689,24690,24692,24693,24695,24702,24704,24705,24706,24709,24710,24711,24712,24714,24715,24718,24719,24720,24721,24723,24725,24727,24728,24729,24732,24734,24737,24738,24740,24741,24743,24745,24746,24750,24752,24755,24757,24758,24759,24761,24762,24765,24766,24767,24768,24769,24770,24771,24772,24775,24776,24777,24780,24781,24782,24783,24784,24786,24787,24788,24790,24791,24793,24795,24798,24801,24802,24803,24804,24805,24810,24817,24818,24821,24823,24824,24827,24828,24829,24830,24831,24834,24835,24836,24837,24839,24842,24843,24844,24848,24849,24850,24851,24852,24854,24855,24856,24857,24859,24860,24861,24862,24865,24866,24869,24872,24873,24874,24876,24877,24878,24879,24880,24881,24882,24883,24884,24885,24886,24887,24888,24889,24890,24891,24892,24893,24894,24896,24897,24898,24899,24900,24901,24902,24903,24905,24907,24909,24911,24912,24914,24915,24916,24918,24919,24920,24921,24922,24923,24924,24926,24927,24928,24929,24931,24932,24933,24934,24937,24938,24939,24940,24941,24942,24943,24945,24946,24947,24948,24950,24952,24953,24954,24955,24956,24957,24958,24959,24960,24961,24962,24963,24964,24965,24966,24967,24968,24969,24970,24972,24973,24975,24976,24977,24978,24979,24981,24982,24983,24984,24985,24986,24987,24988,24990,24991,24992,24993,24994,24995,24996,24997,24998,25002,25003,25005,25006,25007,25008,25009,25010,25011,25012,25013,25014,25016,25017,25018,25019,25020,25021,25023,25024,25025,25027,25028,25029,25030,25031,25033,25036,25037,25038,25039,25040,25043,25045,25046,25047,25048,25049,25050,25051,25052,25053,25054,25055,25056,25057,25058,25059,25060,25061,25063,25064,25065,25066,25067,25068,25069,25070,25071,25072,25073,25074,25075,25076,25078,25079,25080,25081,25082,25083,25084,25085,25086,25088,25089,25090,25091,25092,25093,25095,25097,25107,25108,25113,25116,25117,25118,25120,25123,25126,25127,25128,25129,25131,25133,25135,25136,25137,25138,25141,25142,25144,25145,25146,25147,25148,25154,25156,25157,25158,25162,25167,25168,25173,25174,25175,25177,25178,25180,25181,25182,25183,25184,25185,25186,25188,25189,25192,25201,25202,25204,25205,25207,25208,25210,25211,25213,25217,25218,25219,25221,25222,25223,25224,25227,25228,25229,25230,25231,25232,25236,25241,25244,25245,25246,25251,25254,25255,25257,25258,25261,25262,25263,25264,25266,25267,25268,25270,25271,25272,25274,25278,25280,25281,25283,25291,25295,25297,25301,25309,25310,25312,25313,25316,25322,25323,25328,25330,25333,25336,25337,25338,25339,25344,25347,25348,25349,25350,25354,25355,25356,25357,25359,25360,25362,25363,25364,25365,25367,25368,25369,25372,25382,25383,25385,25388,25389,25390,25392,25393,25395,25396,25397,25398,25399,25400,25403,25404,25406,25407,25408,25409,25412,25415,25416,25418,25425,25426,25427,25428,25430,25431,25432,25433,25434,25435,25436,25437,25440,25444,25445,25446,25448,25450,25451,25452,25455,25456,25458,25459,25460,25461,25464,25465,25468,25469,25470,25471,25473,25475,25476,25477,25478,25483,25485,25489,25491,25492,25493,25495,25497,25498,25499,25500,25501,25502,25503,25505,25508,25510,25515,25519,25521,25522,25525,25526,25529,25531,25533,25535,25536,25537,25538,25539,25541,25543,25544,25546,25547,25548,25553,25555,25556,25557,25559,25560,25561,25562,25563,25564,25565,25567,25570,25572,25573,25574,25575,25576,25579,25580,25582,25583,25584,25585,25587,25589,25591,25593,25594,25595,25596,25598,25603,25604,25606,25607,25608,25609,25610,25613,25614,25617,25618,25621,25622,25623,25624,25625,25626,25629,25631,25634,25635,25636,25637,25639,25640,25641,25643,25646,25647,25648,25649,25650,25651,25653,25654,25655,25656,25657,25659,25660,25662,25664,25666,25667,25673,25675,25676,25677,25678,25679,25680,25681,25683,25685,25686,25687,25689,25690,25691,25692,25693,25695,25696,25697,25698,25699,25700,25701,25702,25704,25706,25707,25708,25710,25711,25712,25713,25714,25715,25716,25717,25718,25719,25723,25724,25725,25726,25727,25728,25729,25731,25734,25736,25737,25738,25739,25740,25741,25742,25743,25744,25747,25748,25751,25752,25754,25755,25756,25757,25759,25760,25761,25762,25763,25765,25766,25767,25768,25770,25771,25775,25777,25778,25779,25780,25782,25785,25787,25789,25790,25791,25793,25795,25796,25798,25799,25800,25801,25802,25803,25804,25807,25809,25811,25812,25813,25814,25817,25818,25819,25820,25821,25823,25824,25825,25827,25829,25831,25832,25833,25834,25835,25836,25837,25838,25839,25840,25841,25842,25843,25844,25845,25846,25847,25848,25849,25850,25851,25852,25853,25854,25855,25857,25858,25859,25860,25861,25862,25863,25864,25866,25867,25868,25869,25870,25871,25872,25873,25875,25876,25877,25878,25879,25881,25882,25883,25884,25885,25886,25887,25888,25889,25890,25891,25892,25894,25895,25896,25897,25898,25900,25901,25904,25905,25906,25907,25911,25914,25916,25917,25920,25921,25922,25923,25924,25926,25927,25930,25931,25933,25934,25936,25938,25939,25940,25943,25944,25946,25948,25951,25952,25953,25956,25957,25959,25960,25961,25962,25965,25966,25967,25969,25971,25973,25974,25976,25977,25978,25979,25980,25981,25982,25983,25984,25985,25986,25987,25988,25989,25990,25992,25993,25994,25997,25998,25999,26002,26004,26005,26006,26008,26010,26013,26014,26016,26018,26019,26022,26024,26026,26028,26030,26033,26034,26035,26036,26037,26038,26039,26040,26042,26043,26046,26047,26048,26050,26055,26056,26057,26058,26061,26064,26065,26067,26068,26069,26072,26073,26074,26075,26076,26077,26078,26079,26081,26083,26084,26090,26091,26098,26099,26100,26101,26104,26105,26107,26108,26109,26110,26111,26113,26116,26117,26119,26120,26121,26123,26125,26128,26129,26130,26134,26135,26136,26138,26139,26140,26142,26145,26146,26147,26148,26150,26153,26154,26155,26156,26158,26160,26162,26163,26167,26168,26169,26170,26171,26173,26175,26176,26178,26180,26181,26182,26183,26184,26185,26186,26189,26190,26192,26193,26200,26201,26203,26204,26205,26206,26208,26210,26211,26213,26215,26217,26218,26219,26220,26221,26225,26226,26227,26229,26232,26233,26235,26236,26237,26239,26240,26241,26243,26245,26246,26248,26249,26250,26251,26253,26254,26255,26256,26258,26259,26260,26261,26264,26265,26266,26267,26268,26270,26271,26272,26273,26274,26275,26276,26277,26278,26281,26282,26283,26284,26285,26287,26288,26289,26290,26291,26293,26294,26295,26296,26298,26299,26300,26301,26303,26304,26305,26306,26307,26308,26309,26310,26311,26312,26313,26314,26315,26316,26317,26318,26319,26320,26321,26322,26323,26324,26325,26326,26327,26328,26330,26334,26335,26336,26337,26338,26339,26340,26341,26343,26344,26346,26347,26348,26349,26350,26351,26353,26357,26358,26360,26362,26363,26365,26369,26370,26371,26372,26373,26374,26375,26380,26382,26383,26385,26386,26387,26390,26392,26393,26394,26396,26398,26400,26401,26402,26403,26404,26405,26407,26409,26414,26416,26418,26419,26422,26423,26424,26425,26427,26428,26430,26431,26433,26436,26437,26439,26442,26443,26445,26450,26452,26453,26455,26456,26457,26458,26459,26461,26466,26467,26468,26470,26471,26475,26476,26478,26481,26484,26486,26488,26489,26490,26491,26493,26496,26498,26499,26501,26502,26504,26506,26508,26509,26510,26511,26513,26514,26515,26516,26518,26521,26523,26527,26528,26529,26532,26534,26537,26540,26542,26545,26546,26548,26553,26554,26555,26556,26557,26558,26559,26560,26562,26565,26566,26567,26568,26569,26570,26571,26572,26573,26574,26581,26582,26583,26587,26591,26593,26595,26596,26598,26599,26600,26602,26603,26605,26606,26610,26613,26614,26615,26616,26617,26618,26619,26620,26622,26625,26626,26627,26628,26630,26637,26640,26642,26644,26645,26648,26649,26650,26651,26652,26654,26655,26656,26658,26659,26660,26661,26662,26663,26664,26667,26668,26669,26670,26671,26672,26673,26676,26677,26678,26682,26683,26687,26695,26699,26701,26703,26706,26710,26711,26712,26713,26714,26715,26716,26717,26718,26719,26730,26732,26733,26734,26735,26736,26737,26738,26739,26741,26744,26745,26746,26747,26748,26749,26750,26751,26752,26754,26756,26759,26760,26761,26762,26763,26764,26765,26766,26768,26769,26770,26772,26773,26774,26776,26777,26778,26779,26780,26781,26782,26783,26784,26785,26787,26788,26789,26793,26794,26795,26796,26798,26801,26802,26804,26806,26807,26808,26809,26810,26811,26812,26813,26814,26815,26817,26819,26820,26821,26822,26823,26824,26826,26828,26830,26831,26832,26833,26835,26836,26838,26839,26841,26843,26844,26845,26846,26847,26849,26850,26852,26853,26854,26855,26856,26857,26858,26859,26860,26861,26863,26866,26867,26868,26870,26871,26872,26875,26877,26878,26879,26880,26882,26883,26884,26886,26887,26888,26889,26890,26892,26895,26897,26899,26900,26901,26902,26903,26904,26905,26906,26907,26908,26909,26910,26913,26914,26915,26917,26918,26919,26920,26921,26922,26923,26924,26926,26927,26929,26930,26931,26933,26934,26935,26936,26938,26939,26940,26942,26944,26945,26947,26948,26949,26950,26951,26952,26953,26954,26955,26956,26957,26958,26959,26960,26961,26962,26963,26965,26966,26968,26969,26971,26972,26975,26977,26978,26980,26981,26983,26984,26985,26986,26988,26989,26991,26992,26994,26995,26996,26997,26998,27002,27003,27005,27006,27007,27009,27011,27013,27018,27019,27020,27022,27023,27024,27025,27026,27027,27030,27031,27033,27034,27037,27038,27039,27040,27041,27042,27043,27044,27045,27046,27049,27050,27052,27054,27055,27056,27058,27059,27061,27062,27064,27065,27066,27068,27069,27070,27071,27072,27074,27075,27076,27077,27078,27079,27080,27081,27083,27085,27087,27089,27090,27091,27093,27094,27095,27096,27097,27098,27100,27101,27102,27105,27106,27107,27108,27109,27110,27111,27112,27113,27114,27115,27116,27118,27119,27120,27121,27123,27124,27125,27126,27127,27128,27129,27130,27131,27132,27134,27136,27137,27138,27139,27140,27141,27142,27143,27144,27145,27147,27148,27149,27150,27151,27152,27153,27154,27155,27156,27157,27158,27161,27162,27163,27164,27165,27166,27168,27170,27171,27172,27173,27174,27175,27177,27179,27180,27181,27182,27184,27186,27187,27188,27190,27191,27192,27193,27194,27195,27196,27199,27200,27201,27202,27203,27205,27206,27208,27209,27210,27211,27212,27213,27214,27215,27217,27218,27219,27220,27221,27222,27223,27226,27228,27229,27230,27231,27232,27234,27235,27236,27238,27239,27240,27241,27242,27243,27244,27245,27246,27247,27248,27250,27251,27252,27253,27254,27255,27256,27258,27259,27261,27262,27263,27265,27266,27267,27269,27270,27271,27272,27273,27274,27275,27276,27277,27279,27282,27283,27284,27285,27286,27288,27289,27290,27291,27292,27293,27294,27295,27297,27298,27299,27300,27301,27302,27303,27304,27306,27309,27310,27311,27312,27313,27314,27315,27316,27317,27318,27319,27320,27321,27322,27323,27324,27325,27326,27327,27328,27329,27330,27331,27332,27333,27334,27335,27336,27337,27338,27339,27340,27341,27342,27343,27344,27345,27346,27347,27348,27349,27350,27351,27352,27353,27354,27355,27356,27357,27358,27359,27360,27361,27362,27363,27364,27365,27366,27367,27368,27369,27370,27371,27372,27373,27374,27375,27376,27377,27378,27379,27380,27381,27382,27383,27384,27385,27386,27387,27388,27389,27390,27391,27392,27393,27394,27395,27396,27397,27398,27399,27400,27401,27402,27403,27404,27405,27406,27407,27408,27409,27410,27411,27412,27413,27414,27415,27416,27417,27418,27419,27420,27421,27422,27423,27429,27430,27432,27433,27434,27435,27436,27437,27438,27439,27440,27441,27443,27444,27445,27446,27448,27451,27452,27453,27455,27456,27457,27458,27460,27461,27464,27466,27467,27469,27470,27471,27472,27473,27474,27475,27476,27477,27478,27479,27480,27482,27483,27484,27485,27486,27487,27488,27489,27496,27497,27499,27500,27501,27502,27503,27504,27505,27506,27507,27508,27509,27510,27511,27512,27514,27517,27518,27519,27520,27525,27528,27532,27534,27535,27536,27537,27540,27541,27543,27544,27545,27548,27549,27550,27551,27552,27554,27555,27556,27557,27558,27559,27560,27561,27563,27564,27565,27566,27567,27568,27569,27570,27574,27576,27577,27578,27579,27580,27581,27582,27584,27587,27588,27590,27591,27592,27593,27594,27596,27598,27600,27601,27608,27610,27612,27613,27614,27615,27616,27618,27619,27620,27621,27622,27623,27624,27625,27628,27629,27630,27632,27633,27634,27636,27638,27639,27640,27642,27643,27644,27646,27647,27648,27649,27650,27651,27652,27656,27657,27658,27659,27660,27662,27666,27671,27676,27677,27678,27680,27683,27685,27691,27692,27693,27697,27699,27702,27703,27705,27706,27707,27708,27710,27711,27715,27716,27717,27720,27723,27724,27725,27726,27727,27729,27730,27731,27734,27736,27737,27738,27746,27747,27749,27750,27751,27755,27756,27757,27758,27759,27761,27763,27765,27767,27768,27770,27771,27772,27775,27776,27780,27783,27786,27787,27789,27790,27793,27794,27797,27798,27799,27800,27802,27804,27805,27806,27808,27810,27816,27820,27823,27824,27828,27829,27830,27831,27834,27840,27841,27842,27843,27846,27847,27848,27851,27853,27854,27855,27857,27858,27864,27865,27866,27868,27869,27871,27876,27878,27879,27881,27884,27885,27890,27892,27897,27903,27904,27906,27907,27909,27910,27912,27913,27914,27917,27919,27920,27921,27923,27924,27925,27926,27928,27932,27933,27935,27936,27937,27938,27939,27940,27942,27944,27945,27948,27949,27951,27952,27956,27958,27959,27960,27962,27967,27968,27970,27972,27977,27980,27984,27989,27990,27991,27992,27995,27997,27999,28001,28002,28004,28005,28007,28008,28011,28012,28013,28016,28017,28018,28019,28021,28022,28025,28026,28027,28029,28030,28031,28032,28033,28035,28036,28038,28039,28042,28043,28045,28047,28048,28050,28054,28055,28056,28057,28058,28060,28066,28069,28076,28077,28080,28081,28083,28084,28086,28087,28089,28090,28091,28092,28093,28094,28097,28098,28099,28104,28105,28106,28109,28110,28111,28112,28114,28115,28116,28117,28119,28122,28123,28124,28127,28130,28131,28133,28135,28136,28137,28138,28141,28143,28144,28146,28148,28149,28150,28152,28154,28157,28158,28159,28160,28161,28162,28163,28164,28166,28167,28168,28169,28171,28175,28178,28179,28181,28184,28185,28187,28188,28190,28191,28194,28198,28199,28200,28202,28204,28206,28208,28209,28211,28213,28214,28215,28217,28219,28220,28221,28222,28223,28224,28225,28226,28229,28230,28231,28232,28233,28234,28235,28236,28239,28240,28241,28242,28245,28247,28249,28250,28252,28253,28254,28256,28257,28258,28259,28260,28261,28262,28263,28264,28265,28266,28268,28269,28271,28272,28273,28274,28275,28276,28277,28278,28279,28280,28281,28282,28283,28284,28285,28288,28289,28290,28292,28295,28296,28298,28299,28300,28301,28302,28305,28306,28307,28308,28309,28310,28311,28313,28314,28315,28317,28318,28320,28321,28323,28324,28326,28328,28329,28331,28332,28333,28334,28336,28339,28341,28344,28345,28348,28350,28351,28352,28355,28356,28357,28358,28360,28361,28362,28364,28365,28366,28368,28370,28374,28376,28377,28379,28380,28381,28387,28391,28394,28395,28396,28397,28398,28399,28400,28401,28402,28403,28405,28406,28407,28408,28410,28411,28412,28413,28414,28415,28416,28417,28419,28420,28421,28423,28424,28426,28427,28428,28429,28430,28432,28433,28434,28438,28439,28440,28441,28442,28443,28444,28445,28446,28447,28449,28450,28451,28453,28454,28455,28456,28460,28462,28464,28466,28468,28469,28471,28472,28473,28474,28475,28476,28477,28479,28480,28481,28482,28483,28484,28485,28488,28489,28490,28492,28494,28495,28496,28497,28498,28499,28500,28501,28502,28503,28505,28506,28507,28509,28511,28512,28513,28515,28516,28517,28519,28520,28521,28522,28523,28524,28527,28528,28529,28531,28533,28534,28535,28537,28539,28541,28542,28543,28544,28545,28546,28547,28549,28550,28551,28554,28555,28559,28560,28561,28562,28563,28564,28565,28566,28567,28568,28569,28570,28571,28573,28574,28575,28576,28578,28579,28580,28581,28582,28584,28585,28586,28587,28588,28589,28590,28591,28592,28593,28594,28596,28597,28599,28600,28602,28603,28604,28605,28606,28607,28609,28611,28612,28613,28614,28615,28616,28618,28619,28620,28621,28622,28623,28624,28627,28628,28629,28630,28631,28632,28633,28634,28635,28636,28637,28639,28642,28643,28644,28645,28646,28647,28648,28649,28650,28651,28652,28653,28656,28657,28658,28659,28660,28661,28662,28663,28664,28665,28666,28667,28668,28669,28670,28671,28672,28673,28674,28675,28676,28677,28678,28679,28680,28681,28682,28683,28684,28685,28686,28687,28688,28690,28691,28692,28693,28694,28695,28696,28697,28700,28701,28702,28703,28704,28705,28706,28708,28709,28710,28711,28712,28713,28714,28715,28716,28717,28718,28719,28720,28721,28722,28723,28724,28726,28727,28728,28730,28731,28732,28733,28734,28735,28736,28737,28738,28739,28740,28741,28742,28743,28744,28745,28746,28747,28749,28750,28752,28753,28754,28755,28756,28757,28758,28759,28760,28761,28762,28763,28764,28765,28767,28768,28769,28770,28771,28772,28773,28774,28775,28776,28777,28778,28782,28785,28786,28787,28788,28791,28793,28794,28795,28797,28801,28802,28803,28804,28806,28807,28808,28811,28812,28813,28815,28816,28817,28819,28823,28824,28826,28827,28830,28831,28832,28833,28834,28835,28836,28837,28838,28839,28840,28841,28842,28848,28850,28852,28853,28854,28858,28862,28863,28868,28869,28870,28871,28873,28875,28876,28877,28878,28879,28880,28881,28882,28883,28884,28885,28886,28887,28890,28892,28893,28894,28896,28897,28898,28899,28901,28906,28910,28912,28913,28914,28915,28916,28917,28918,28920,28922,28923,28924,28926,28927,28928,28929,28930,28931,28932,28933,28934,28935,28936,28939,28940,28941,28942,28943,28945,28946,28948,28951,28955,28956,28957,28958,28959,28960,28961,28962,28963,28964,28965,28967,28968,28969,28970,28971,28972,28973,28974,28978,28979,28980,28981,28983,28984,28985,28986,28987,28988,28989,28990,28991,28992,28993,28994,28995,28996,28998,28999,29e3,29001,29003,29005,29007,29008,29009,29010,29011,29012,29013,29014,29015,29016,29017,29018,29019,29021,29023,29024,29025,29026,29027,29029,29033,29034,29035,29036,29037,29039,29040,29041,29044,29045,29046,29047,29049,29051,29052,29054,29055,29056,29057,29058,29059,29061,29062,29063,29064,29065,29067,29068,29069,29070,29072,29073,29074,29075,29077,29078,29079,29082,29083,29084,29085,29086,29089,29090,29091,29092,29093,29094,29095,29097,29098,29099,29101,29102,29103,29104,29105,29106,29108,29110,29111,29112,29114,29115,29116,29117,29118,29119,29120,29121,29122,29124,29125,29126,29127,29128,29129,29130,29131,29132,29133,29135,29136,29137,29138,29139,29142,29143,29144,29145,29146,29147,29148,29149,29150,29151,29153,29154,29155,29156,29158,29160,29161,29162,29163,29164,29165,29167,29168,29169,29170,29171,29172,29173,29174,29175,29176,29178,29179,29180,29181,29182,29183,29184,29185,29186,29187,29188,29189,29191,29192,29193,29194,29195,29196,29197,29198,29199,29200,29201,29202,29203,29204,29205,29206,29207,29208,29209,29210,29211,29212,29214,29215,29216,29217,29218,29219,29220,29221,29222,29223,29225,29227,29229,29230,29231,29234,29235,29236,29242,29244,29246,29248,29249,29250,29251,29252,29253,29254,29257,29258,29259,29262,29263,29264,29265,29267,29268,29269,29271,29272,29274,29276,29278,29280,29283,29284,29285,29288,29290,29291,29292,29293,29296,29297,29299,29300,29302,29303,29304,29307,29308,29309,29314,29315,29317,29318,29319,29320,29321,29324,29326,29328,29329,29331,29332,29333,29334,29335,29336,29337,29338,29339,29340,29341,29342,29344,29345,29346,29347,29348,29349,29350,29351,29352,29353,29354,29355,29358,29361,29362,29363,29365,29370,29371,29372,29373,29374,29375,29376,29381,29382,29383,29385,29386,29387,29388,29391,29393,29395,29396,29397,29398,29400,29402,29403,58566,58567,58568,58569,58570,58571,58572,58573,58574,58575,58576,58577,58578,58579,58580,58581,58582,58583,58584,58585,58586,58587,58588,58589,58590,58591,58592,58593,58594,58595,58596,58597,58598,58599,58600,58601,58602,58603,58604,58605,58606,58607,58608,58609,58610,58611,58612,58613,58614,58615,58616,58617,58618,58619,58620,58621,58622,58623,58624,58625,58626,58627,58628,58629,58630,58631,58632,58633,58634,58635,58636,58637,58638,58639,58640,58641,58642,58643,58644,58645,58646,58647,58648,58649,58650,58651,58652,58653,58654,58655,58656,58657,58658,58659,58660,58661,12288,12289,12290,183,713,711,168,12291,12293,8212,65374,8214,8230,8216,8217,8220,8221,12308,12309,12296,12297,12298,12299,12300,12301,12302,12303,12310,12311,12304,12305,177,215,247,8758,8743,8744,8721,8719,8746,8745,8712,8759,8730,8869,8741,8736,8978,8857,8747,8750,8801,8780,8776,8765,8733,8800,8814,8815,8804,8805,8734,8757,8756,9794,9792,176,8242,8243,8451,65284,164,65504,65505,8240,167,8470,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,8251,8594,8592,8593,8595,12307,58662,58663,58664,58665,58666,58667,58668,58669,58670,58671,58672,58673,58674,58675,58676,58677,58678,58679,58680,58681,58682,58683,58684,58685,58686,58687,58688,58689,58690,58691,58692,58693,58694,58695,58696,58697,58698,58699,58700,58701,58702,58703,58704,58705,58706,58707,58708,58709,58710,58711,58712,58713,58714,58715,58716,58717,58718,58719,58720,58721,58722,58723,58724,58725,58726,58727,58728,58729,58730,58731,58732,58733,58734,58735,58736,58737,58738,58739,58740,58741,58742,58743,58744,58745,58746,58747,58748,58749,58750,58751,58752,58753,58754,58755,58756,58757,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,59238,59239,59240,59241,59242,59243,9352,9353,9354,9355,9356,9357,9358,9359,9360,9361,9362,9363,9364,9365,9366,9367,9368,9369,9370,9371,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,9342,9343,9344,9345,9346,9347,9348,9349,9350,9351,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,8364,59245,12832,12833,12834,12835,12836,12837,12838,12839,12840,12841,59246,59247,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,8554,8555,59248,59249,58758,58759,58760,58761,58762,58763,58764,58765,58766,58767,58768,58769,58770,58771,58772,58773,58774,58775,58776,58777,58778,58779,58780,58781,58782,58783,58784,58785,58786,58787,58788,58789,58790,58791,58792,58793,58794,58795,58796,58797,58798,58799,58800,58801,58802,58803,58804,58805,58806,58807,58808,58809,58810,58811,58812,58813,58814,58815,58816,58817,58818,58819,58820,58821,58822,58823,58824,58825,58826,58827,58828,58829,58830,58831,58832,58833,58834,58835,58836,58837,58838,58839,58840,58841,58842,58843,58844,58845,58846,58847,58848,58849,58850,58851,58852,12288,65281,65282,65283,65509,65285,65286,65287,65288,65289,65290,65291,65292,65293,65294,65295,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,65306,65307,65308,65309,65310,65311,65312,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65339,65340,65341,65342,65343,65344,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,65371,65372,65373,65507,58854,58855,58856,58857,58858,58859,58860,58861,58862,58863,58864,58865,58866,58867,58868,58869,58870,58871,58872,58873,58874,58875,58876,58877,58878,58879,58880,58881,58882,58883,58884,58885,58886,58887,58888,58889,58890,58891,58892,58893,58894,58895,58896,58897,58898,58899,58900,58901,58902,58903,58904,58905,58906,58907,58908,58909,58910,58911,58912,58913,58914,58915,58916,58917,58918,58919,58920,58921,58922,58923,58924,58925,58926,58927,58928,58929,58930,58931,58932,58933,58934,58935,58936,58937,58938,58939,58940,58941,58942,58943,58944,58945,58946,58947,58948,58949,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,59250,59251,59252,59253,59254,59255,59256,59257,59258,59259,59260,58950,58951,58952,58953,58954,58955,58956,58957,58958,58959,58960,58961,58962,58963,58964,58965,58966,58967,58968,58969,58970,58971,58972,58973,58974,58975,58976,58977,58978,58979,58980,58981,58982,58983,58984,58985,58986,58987,58988,58989,58990,58991,58992,58993,58994,58995,58996,58997,58998,58999,59e3,59001,59002,59003,59004,59005,59006,59007,59008,59009,59010,59011,59012,59013,59014,59015,59016,59017,59018,59019,59020,59021,59022,59023,59024,59025,59026,59027,59028,59029,59030,59031,59032,59033,59034,59035,59036,59037,59038,59039,59040,59041,59042,59043,59044,59045,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,59261,59262,59263,59264,59265,59266,59267,59268,59046,59047,59048,59049,59050,59051,59052,59053,59054,59055,59056,59057,59058,59059,59060,59061,59062,59063,59064,59065,59066,59067,59068,59069,59070,59071,59072,59073,59074,59075,59076,59077,59078,59079,59080,59081,59082,59083,59084,59085,59086,59087,59088,59089,59090,59091,59092,59093,59094,59095,59096,59097,59098,59099,59100,59101,59102,59103,59104,59105,59106,59107,59108,59109,59110,59111,59112,59113,59114,59115,59116,59117,59118,59119,59120,59121,59122,59123,59124,59125,59126,59127,59128,59129,59130,59131,59132,59133,59134,59135,59136,59137,59138,59139,59140,59141,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,59269,59270,59271,59272,59273,59274,59275,59276,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,59277,59278,59279,59280,59281,59282,59283,65077,65078,65081,65082,65087,65088,65085,65086,65089,65090,65091,65092,59284,59285,65083,65084,65079,65080,65073,59286,65075,65076,59287,59288,59289,59290,59291,59292,59293,59294,59295,59142,59143,59144,59145,59146,59147,59148,59149,59150,59151,59152,59153,59154,59155,59156,59157,59158,59159,59160,59161,59162,59163,59164,59165,59166,59167,59168,59169,59170,59171,59172,59173,59174,59175,59176,59177,59178,59179,59180,59181,59182,59183,59184,59185,59186,59187,59188,59189,59190,59191,59192,59193,59194,59195,59196,59197,59198,59199,59200,59201,59202,59203,59204,59205,59206,59207,59208,59209,59210,59211,59212,59213,59214,59215,59216,59217,59218,59219,59220,59221,59222,59223,59224,59225,59226,59227,59228,59229,59230,59231,59232,59233,59234,59235,59236,59237,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,59296,59297,59298,59299,59300,59301,59302,59303,59304,59305,59306,59307,59308,59309,59310,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,59311,59312,59313,59314,59315,59316,59317,59318,59319,59320,59321,59322,59323,714,715,729,8211,8213,8229,8245,8453,8457,8598,8599,8600,8601,8725,8735,8739,8786,8806,8807,8895,9552,9553,9554,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568,9569,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,9581,9582,9583,9584,9585,9586,9587,9601,9602,9603,9604,9605,9606,9607,9608,9609,9610,9611,9612,9613,9614,9615,9619,9620,9621,9660,9661,9698,9699,9700,9701,9737,8853,12306,12317,12318,59324,59325,59326,59327,59328,59329,59330,59331,59332,59333,59334,257,225,462,224,275,233,283,232,299,237,464,236,333,243,466,242,363,250,468,249,470,472,474,476,252,234,593,7743,324,328,505,609,59337,59338,59339,59340,12549,12550,12551,12552,12553,12554,12555,12556,12557,12558,12559,12560,12561,12562,12563,12564,12565,12566,12567,12568,12569,12570,12571,12572,12573,12574,12575,12576,12577,12578,12579,12580,12581,12582,12583,12584,12585,59341,59342,59343,59344,59345,59346,59347,59348,59349,59350,59351,59352,59353,59354,59355,59356,59357,59358,59359,59360,59361,12321,12322,12323,12324,12325,12326,12327,12328,12329,12963,13198,13199,13212,13213,13214,13217,13252,13262,13265,13266,13269,65072,65506,65508,59362,8481,12849,59363,8208,59364,59365,59366,12540,12443,12444,12541,12542,12294,12445,12446,65097,65098,65099,65100,65101,65102,65103,65104,65105,65106,65108,65109,65110,65111,65113,65114,65115,65116,65117,65118,65119,65120,65121,65122,65123,65124,65125,65126,65128,65129,65130,65131,12350,12272,12273,12274,12275,12276,12277,12278,12279,12280,12281,12282,12283,12295,59380,59381,59382,59383,59384,59385,59386,59387,59388,59389,59390,59391,59392,9472,9473,9474,9475,9476,9477,9478,9479,9480,9481,9482,9483,9484,9485,9486,9487,9488,9489,9490,9491,9492,9493,9494,9495,9496,9497,9498,9499,9500,9501,9502,9503,9504,9505,9506,9507,9508,9509,9510,9511,9512,9513,9514,9515,9516,9517,9518,9519,9520,9521,9522,9523,9524,9525,9526,9527,9528,9529,9530,9531,9532,9533,9534,9535,9536,9537,9538,9539,9540,9541,9542,9543,9544,9545,9546,9547,59393,59394,59395,59396,59397,59398,59399,59400,59401,59402,59403,59404,59405,59406,59407,29404,29405,29407,29410,29411,29412,29413,29414,29415,29418,29419,29429,29430,29433,29437,29438,29439,29440,29442,29444,29445,29446,29447,29448,29449,29451,29452,29453,29455,29456,29457,29458,29460,29464,29465,29466,29471,29472,29475,29476,29478,29479,29480,29485,29487,29488,29490,29491,29493,29494,29498,29499,29500,29501,29504,29505,29506,29507,29508,29509,29510,29511,29512,29513,29514,29515,29516,29518,29519,29521,29523,29524,29525,29526,29528,29529,29530,29531,29532,29533,29534,29535,29537,29538,29539,29540,29541,29542,29543,29544,29545,29546,29547,29550,29552,29553,57344,57345,57346,57347,57348,57349,57350,57351,57352,57353,57354,57355,57356,57357,57358,57359,57360,57361,57362,57363,57364,57365,57366,57367,57368,57369,57370,57371,57372,57373,57374,57375,57376,57377,57378,57379,57380,57381,57382,57383,57384,57385,57386,57387,57388,57389,57390,57391,57392,57393,57394,57395,57396,57397,57398,57399,57400,57401,57402,57403,57404,57405,57406,57407,57408,57409,57410,57411,57412,57413,57414,57415,57416,57417,57418,57419,57420,57421,57422,57423,57424,57425,57426,57427,57428,57429,57430,57431,57432,57433,57434,57435,57436,57437,29554,29555,29556,29557,29558,29559,29560,29561,29562,29563,29564,29565,29567,29568,29569,29570,29571,29573,29574,29576,29578,29580,29581,29583,29584,29586,29587,29588,29589,29591,29592,29593,29594,29596,29597,29598,29600,29601,29603,29604,29605,29606,29607,29608,29610,29612,29613,29617,29620,29621,29622,29624,29625,29628,29629,29630,29631,29633,29635,29636,29637,29638,29639,29643,29644,29646,29650,29651,29652,29653,29654,29655,29656,29658,29659,29660,29661,29663,29665,29666,29667,29668,29670,29672,29674,29675,29676,29678,29679,29680,29681,29683,29684,29685,29686,29687,57438,57439,57440,57441,57442,57443,57444,57445,57446,57447,57448,57449,57450,57451,57452,57453,57454,57455,57456,57457,57458,57459,57460,57461,57462,57463,57464,57465,57466,57467,57468,57469,57470,57471,57472,57473,57474,57475,57476,57477,57478,57479,57480,57481,57482,57483,57484,57485,57486,57487,57488,57489,57490,57491,57492,57493,57494,57495,57496,57497,57498,57499,57500,57501,57502,57503,57504,57505,57506,57507,57508,57509,57510,57511,57512,57513,57514,57515,57516,57517,57518,57519,57520,57521,57522,57523,57524,57525,57526,57527,57528,57529,57530,57531,29688,29689,29690,29691,29692,29693,29694,29695,29696,29697,29698,29700,29703,29704,29707,29708,29709,29710,29713,29714,29715,29716,29717,29718,29719,29720,29721,29724,29725,29726,29727,29728,29729,29731,29732,29735,29737,29739,29741,29743,29745,29746,29751,29752,29753,29754,29755,29757,29758,29759,29760,29762,29763,29764,29765,29766,29767,29768,29769,29770,29771,29772,29773,29774,29775,29776,29777,29778,29779,29780,29782,29784,29789,29792,29793,29794,29795,29796,29797,29798,29799,29800,29801,29802,29803,29804,29806,29807,29809,29810,29811,29812,29813,29816,29817,29818,57532,57533,57534,57535,57536,57537,57538,57539,57540,57541,57542,57543,57544,57545,57546,57547,57548,57549,57550,57551,57552,57553,57554,57555,57556,57557,57558,57559,57560,57561,57562,57563,57564,57565,57566,57567,57568,57569,57570,57571,57572,57573,57574,57575,57576,57577,57578,57579,57580,57581,57582,57583,57584,57585,57586,57587,57588,57589,57590,57591,57592,57593,57594,57595,57596,57597,57598,57599,57600,57601,57602,57603,57604,57605,57606,57607,57608,57609,57610,57611,57612,57613,57614,57615,57616,57617,57618,57619,57620,57621,57622,57623,57624,57625,29819,29820,29821,29823,29826,29828,29829,29830,29832,29833,29834,29836,29837,29839,29841,29842,29843,29844,29845,29846,29847,29848,29849,29850,29851,29853,29855,29856,29857,29858,29859,29860,29861,29862,29866,29867,29868,29869,29870,29871,29872,29873,29874,29875,29876,29877,29878,29879,29880,29881,29883,29884,29885,29886,29887,29888,29889,29890,29891,29892,29893,29894,29895,29896,29897,29898,29899,29900,29901,29902,29903,29904,29905,29907,29908,29909,29910,29911,29912,29913,29914,29915,29917,29919,29921,29925,29927,29928,29929,29930,29931,29932,29933,29936,29937,29938,57626,57627,57628,57629,57630,57631,57632,57633,57634,57635,57636,57637,57638,57639,57640,57641,57642,57643,57644,57645,57646,57647,57648,57649,57650,57651,57652,57653,57654,57655,57656,57657,57658,57659,57660,57661,57662,57663,57664,57665,57666,57667,57668,57669,57670,57671,57672,57673,57674,57675,57676,57677,57678,57679,57680,57681,57682,57683,57684,57685,57686,57687,57688,57689,57690,57691,57692,57693,57694,57695,57696,57697,57698,57699,57700,57701,57702,57703,57704,57705,57706,57707,57708,57709,57710,57711,57712,57713,57714,57715,57716,57717,57718,57719,29939,29941,29944,29945,29946,29947,29948,29949,29950,29952,29953,29954,29955,29957,29958,29959,29960,29961,29962,29963,29964,29966,29968,29970,29972,29973,29974,29975,29979,29981,29982,29984,29985,29986,29987,29988,29990,29991,29994,29998,30004,30006,30009,30012,30013,30015,30017,30018,30019,30020,30022,30023,30025,30026,30029,30032,30033,30034,30035,30037,30038,30039,30040,30045,30046,30047,30048,30049,30050,30051,30052,30055,30056,30057,30059,30060,30061,30062,30063,30064,30065,30067,30069,30070,30071,30074,30075,30076,30077,30078,30080,30081,30082,30084,30085,30087,57720,57721,57722,57723,57724,57725,57726,57727,57728,57729,57730,57731,57732,57733,57734,57735,57736,57737,57738,57739,57740,57741,57742,57743,57744,57745,57746,57747,57748,57749,57750,57751,57752,57753,57754,57755,57756,57757,57758,57759,57760,57761,57762,57763,57764,57765,57766,57767,57768,57769,57770,57771,57772,57773,57774,57775,57776,57777,57778,57779,57780,57781,57782,57783,57784,57785,57786,57787,57788,57789,57790,57791,57792,57793,57794,57795,57796,57797,57798,57799,57800,57801,57802,57803,57804,57805,57806,57807,57808,57809,57810,57811,57812,57813,30088,30089,30090,30092,30093,30094,30096,30099,30101,30104,30107,30108,30110,30114,30118,30119,30120,30121,30122,30125,30134,30135,30138,30139,30143,30144,30145,30150,30155,30156,30158,30159,30160,30161,30163,30167,30169,30170,30172,30173,30175,30176,30177,30181,30185,30188,30189,30190,30191,30194,30195,30197,30198,30199,30200,30202,30203,30205,30206,30210,30212,30214,30215,30216,30217,30219,30221,30222,30223,30225,30226,30227,30228,30230,30234,30236,30237,30238,30241,30243,30247,30248,30252,30254,30255,30257,30258,30262,30263,30265,30266,30267,30269,30273,30274,30276,57814,57815,57816,57817,57818,57819,57820,57821,57822,57823,57824,57825,57826,57827,57828,57829,57830,57831,57832,57833,57834,57835,57836,57837,57838,57839,57840,57841,57842,57843,57844,57845,57846,57847,57848,57849,57850,57851,57852,57853,57854,57855,57856,57857,57858,57859,57860,57861,57862,57863,57864,57865,57866,57867,57868,57869,57870,57871,57872,57873,57874,57875,57876,57877,57878,57879,57880,57881,57882,57883,57884,57885,57886,57887,57888,57889,57890,57891,57892,57893,57894,57895,57896,57897,57898,57899,57900,57901,57902,57903,57904,57905,57906,57907,30277,30278,30279,30280,30281,30282,30283,30286,30287,30288,30289,30290,30291,30293,30295,30296,30297,30298,30299,30301,30303,30304,30305,30306,30308,30309,30310,30311,30312,30313,30314,30316,30317,30318,30320,30321,30322,30323,30324,30325,30326,30327,30329,30330,30332,30335,30336,30337,30339,30341,30345,30346,30348,30349,30351,30352,30354,30356,30357,30359,30360,30362,30363,30364,30365,30366,30367,30368,30369,30370,30371,30373,30374,30375,30376,30377,30378,30379,30380,30381,30383,30384,30387,30389,30390,30391,30392,30393,30394,30395,30396,30397,30398,30400,30401,30403,21834,38463,22467,25384,21710,21769,21696,30353,30284,34108,30702,33406,30861,29233,38552,38797,27688,23433,20474,25353,26263,23736,33018,26696,32942,26114,30414,20985,25942,29100,32753,34948,20658,22885,25034,28595,33453,25420,25170,21485,21543,31494,20843,30116,24052,25300,36299,38774,25226,32793,22365,38712,32610,29240,30333,26575,30334,25670,20336,36133,25308,31255,26001,29677,25644,25203,33324,39041,26495,29256,25198,25292,20276,29923,21322,21150,32458,37030,24110,26758,27036,33152,32465,26834,30917,34444,38225,20621,35876,33502,32990,21253,35090,21093,30404,30407,30409,30411,30412,30419,30421,30425,30426,30428,30429,30430,30432,30433,30434,30435,30436,30438,30439,30440,30441,30442,30443,30444,30445,30448,30451,30453,30454,30455,30458,30459,30461,30463,30464,30466,30467,30469,30470,30474,30476,30478,30479,30480,30481,30482,30483,30484,30485,30486,30487,30488,30491,30492,30493,30494,30497,30499,30500,30501,30503,30506,30507,30508,30510,30512,30513,30514,30515,30516,30521,30523,30525,30526,30527,30530,30532,30533,30534,30536,30537,30538,30539,30540,30541,30542,30543,30546,30547,30548,30549,30550,30551,30552,30553,30556,34180,38649,20445,22561,39281,23453,25265,25253,26292,35961,40077,29190,26479,30865,24754,21329,21271,36744,32972,36125,38049,20493,29384,22791,24811,28953,34987,22868,33519,26412,31528,23849,32503,29997,27893,36454,36856,36924,40763,27604,37145,31508,24444,30887,34006,34109,27605,27609,27606,24065,24199,30201,38381,25949,24330,24517,36767,22721,33218,36991,38491,38829,36793,32534,36140,25153,20415,21464,21342,36776,36777,36779,36941,26631,24426,33176,34920,40150,24971,21035,30250,24428,25996,28626,28392,23486,25672,20853,20912,26564,19993,31177,39292,28851,30557,30558,30559,30560,30564,30567,30569,30570,30573,30574,30575,30576,30577,30578,30579,30580,30581,30582,30583,30584,30586,30587,30588,30593,30594,30595,30598,30599,30600,30601,30602,30603,30607,30608,30611,30612,30613,30614,30615,30616,30617,30618,30619,30620,30621,30622,30625,30627,30628,30630,30632,30635,30637,30638,30639,30641,30642,30644,30646,30647,30648,30649,30650,30652,30654,30656,30657,30658,30659,30660,30661,30662,30663,30664,30665,30666,30667,30668,30670,30671,30672,30673,30674,30675,30676,30677,30678,30680,30681,30682,30685,30686,30687,30688,30689,30692,30149,24182,29627,33760,25773,25320,38069,27874,21338,21187,25615,38082,31636,20271,24091,33334,33046,33162,28196,27850,39539,25429,21340,21754,34917,22496,19981,24067,27493,31807,37096,24598,25830,29468,35009,26448,25165,36130,30572,36393,37319,24425,33756,34081,39184,21442,34453,27531,24813,24808,28799,33485,33329,20179,27815,34255,25805,31961,27133,26361,33609,21397,31574,20391,20876,27979,23618,36461,25554,21449,33580,33590,26597,30900,25661,23519,23700,24046,35815,25286,26612,35962,25600,25530,34633,39307,35863,32544,38130,20135,38416,39076,26124,29462,30694,30696,30698,30703,30704,30705,30706,30708,30709,30711,30713,30714,30715,30716,30723,30724,30725,30726,30727,30728,30730,30731,30734,30735,30736,30739,30741,30745,30747,30750,30752,30753,30754,30756,30760,30762,30763,30766,30767,30769,30770,30771,30773,30774,30781,30783,30785,30786,30787,30788,30790,30792,30793,30794,30795,30797,30799,30801,30803,30804,30808,30809,30810,30811,30812,30814,30815,30816,30817,30818,30819,30820,30821,30822,30823,30824,30825,30831,30832,30833,30834,30835,30836,30837,30838,30840,30841,30842,30843,30845,30846,30847,30848,30849,30850,30851,22330,23581,24120,38271,20607,32928,21378,25950,30021,21809,20513,36229,25220,38046,26397,22066,28526,24034,21557,28818,36710,25199,25764,25507,24443,28552,37108,33251,36784,23576,26216,24561,27785,38472,36225,34924,25745,31216,22478,27225,25104,21576,20056,31243,24809,28548,35802,25215,36894,39563,31204,21507,30196,25345,21273,27744,36831,24347,39536,32827,40831,20360,23610,36196,32709,26021,28861,20805,20914,34411,23815,23456,25277,37228,30068,36364,31264,24833,31609,20167,32504,30597,19985,33261,21021,20986,27249,21416,36487,38148,38607,28353,38500,26970,30852,30853,30854,30856,30858,30859,30863,30864,30866,30868,30869,30870,30873,30877,30878,30880,30882,30884,30886,30888,30889,30890,30891,30892,30893,30894,30895,30901,30902,30903,30904,30906,30907,30908,30909,30911,30912,30914,30915,30916,30918,30919,30920,30924,30925,30926,30927,30929,30930,30931,30934,30935,30936,30938,30939,30940,30941,30942,30943,30944,30945,30946,30947,30948,30949,30950,30951,30953,30954,30955,30957,30958,30959,30960,30961,30963,30965,30966,30968,30969,30971,30972,30973,30974,30975,30976,30978,30979,30980,30982,30983,30984,30985,30986,30987,30988,30784,20648,30679,25616,35302,22788,25571,24029,31359,26941,20256,33337,21912,20018,30126,31383,24162,24202,38383,21019,21561,28810,25462,38180,22402,26149,26943,37255,21767,28147,32431,34850,25139,32496,30133,33576,30913,38604,36766,24904,29943,35789,27492,21050,36176,27425,32874,33905,22257,21254,20174,19995,20945,31895,37259,31751,20419,36479,31713,31388,25703,23828,20652,33030,30209,31929,28140,32736,26449,23384,23544,30923,25774,25619,25514,25387,38169,25645,36798,31572,30249,25171,22823,21574,27513,20643,25140,24102,27526,20195,36151,34955,24453,36910,30989,30990,30991,30992,30993,30994,30996,30997,30998,30999,31e3,31001,31002,31003,31004,31005,31007,31008,31009,31010,31011,31013,31014,31015,31016,31017,31018,31019,31020,31021,31022,31023,31024,31025,31026,31027,31029,31030,31031,31032,31033,31037,31039,31042,31043,31044,31045,31047,31050,31051,31052,31053,31054,31055,31056,31057,31058,31060,31061,31064,31065,31073,31075,31076,31078,31081,31082,31083,31084,31086,31088,31089,31090,31091,31092,31093,31094,31097,31099,31100,31101,31102,31103,31106,31107,31110,31111,31112,31113,31115,31116,31117,31118,31120,31121,31122,24608,32829,25285,20025,21333,37112,25528,32966,26086,27694,20294,24814,28129,35806,24377,34507,24403,25377,20826,33633,26723,20992,25443,36424,20498,23707,31095,23548,21040,31291,24764,36947,30423,24503,24471,30340,36460,28783,30331,31561,30634,20979,37011,22564,20302,28404,36842,25932,31515,29380,28068,32735,23265,25269,24213,22320,33922,31532,24093,24351,36882,32532,39072,25474,28359,30872,28857,20856,38747,22443,30005,20291,30008,24215,24806,22880,28096,27583,30857,21500,38613,20939,20993,25481,21514,38035,35843,36300,29241,30879,34678,36845,35853,21472,31123,31124,31125,31126,31127,31128,31129,31131,31132,31133,31134,31135,31136,31137,31138,31139,31140,31141,31142,31144,31145,31146,31147,31148,31149,31150,31151,31152,31153,31154,31156,31157,31158,31159,31160,31164,31167,31170,31172,31173,31175,31176,31178,31180,31182,31183,31184,31187,31188,31190,31191,31193,31194,31195,31196,31197,31198,31200,31201,31202,31205,31208,31210,31212,31214,31217,31218,31219,31220,31221,31222,31223,31225,31226,31228,31230,31231,31233,31236,31237,31239,31240,31241,31242,31244,31247,31248,31249,31250,31251,31253,31254,31256,31257,31259,31260,19969,30447,21486,38025,39030,40718,38189,23450,35746,20002,19996,20908,33891,25026,21160,26635,20375,24683,20923,27934,20828,25238,26007,38497,35910,36887,30168,37117,30563,27602,29322,29420,35835,22581,30585,36172,26460,38208,32922,24230,28193,22930,31471,30701,38203,27573,26029,32526,22534,20817,38431,23545,22697,21544,36466,25958,39039,22244,38045,30462,36929,25479,21702,22810,22842,22427,36530,26421,36346,33333,21057,24816,22549,34558,23784,40517,20420,39069,35769,23077,24694,21380,25212,36943,37122,39295,24681,32780,20799,32819,23572,39285,27953,20108,31261,31263,31265,31266,31268,31269,31270,31271,31272,31273,31274,31275,31276,31277,31278,31279,31280,31281,31282,31284,31285,31286,31288,31290,31294,31296,31297,31298,31299,31300,31301,31303,31304,31305,31306,31307,31308,31309,31310,31311,31312,31314,31315,31316,31317,31318,31320,31321,31322,31323,31324,31325,31326,31327,31328,31329,31330,31331,31332,31333,31334,31335,31336,31337,31338,31339,31340,31341,31342,31343,31345,31346,31347,31349,31355,31356,31357,31358,31362,31365,31367,31369,31370,31371,31372,31374,31375,31376,31379,31380,31385,31386,31387,31390,31393,31394,36144,21457,32602,31567,20240,20047,38400,27861,29648,34281,24070,30058,32763,27146,30718,38034,32321,20961,28902,21453,36820,33539,36137,29359,39277,27867,22346,33459,26041,32938,25151,38450,22952,20223,35775,32442,25918,33778,38750,21857,39134,32933,21290,35837,21536,32954,24223,27832,36153,33452,37210,21545,27675,20998,32439,22367,28954,27774,31881,22859,20221,24575,24868,31914,20016,23553,26539,34562,23792,38155,39118,30127,28925,36898,20911,32541,35773,22857,20964,20315,21542,22827,25975,32932,23413,25206,25282,36752,24133,27679,31526,20239,20440,26381,31395,31396,31399,31401,31402,31403,31406,31407,31408,31409,31410,31412,31413,31414,31415,31416,31417,31418,31419,31420,31421,31422,31424,31425,31426,31427,31428,31429,31430,31431,31432,31433,31434,31436,31437,31438,31439,31440,31441,31442,31443,31444,31445,31447,31448,31450,31451,31452,31453,31457,31458,31460,31463,31464,31465,31466,31467,31468,31470,31472,31473,31474,31475,31476,31477,31478,31479,31480,31483,31484,31486,31488,31489,31490,31493,31495,31497,31500,31501,31502,31504,31506,31507,31510,31511,31512,31514,31516,31517,31519,31521,31522,31523,31527,31529,31533,28014,28074,31119,34993,24343,29995,25242,36741,20463,37340,26023,33071,33105,24220,33104,36212,21103,35206,36171,22797,20613,20184,38428,29238,33145,36127,23500,35747,38468,22919,32538,21648,22134,22030,35813,25913,27010,38041,30422,28297,24178,29976,26438,26577,31487,32925,36214,24863,31174,25954,36195,20872,21018,38050,32568,32923,32434,23703,28207,26464,31705,30347,39640,33167,32660,31957,25630,38224,31295,21578,21733,27468,25601,25096,40509,33011,30105,21106,38761,33883,26684,34532,38401,38548,38124,20010,21508,32473,26681,36319,32789,26356,24218,32697,31535,31536,31538,31540,31541,31542,31543,31545,31547,31549,31551,31552,31553,31554,31555,31556,31558,31560,31562,31565,31566,31571,31573,31575,31577,31580,31582,31583,31585,31587,31588,31589,31590,31591,31592,31593,31594,31595,31596,31597,31599,31600,31603,31604,31606,31608,31610,31612,31613,31615,31617,31618,31619,31620,31622,31623,31624,31625,31626,31627,31628,31630,31631,31633,31634,31635,31638,31640,31641,31642,31643,31646,31647,31648,31651,31652,31653,31662,31663,31664,31666,31667,31669,31670,31671,31673,31674,31675,31676,31677,31678,31679,31680,31682,31683,31684,22466,32831,26775,24037,25915,21151,24685,40858,20379,36524,20844,23467,24339,24041,27742,25329,36129,20849,38057,21246,27807,33503,29399,22434,26500,36141,22815,36764,33735,21653,31629,20272,27837,23396,22993,40723,21476,34506,39592,35895,32929,25925,39038,22266,38599,21038,29916,21072,23521,25346,35074,20054,25296,24618,26874,20851,23448,20896,35266,31649,39302,32592,24815,28748,36143,20809,24191,36891,29808,35268,22317,30789,24402,40863,38394,36712,39740,35809,30328,26690,26588,36330,36149,21053,36746,28378,26829,38149,37101,22269,26524,35065,36807,21704,31685,31688,31689,31690,31691,31693,31694,31695,31696,31698,31700,31701,31702,31703,31704,31707,31708,31710,31711,31712,31714,31715,31716,31719,31720,31721,31723,31724,31725,31727,31728,31730,31731,31732,31733,31734,31736,31737,31738,31739,31741,31743,31744,31745,31746,31747,31748,31749,31750,31752,31753,31754,31757,31758,31760,31761,31762,31763,31764,31765,31767,31768,31769,31770,31771,31772,31773,31774,31776,31777,31778,31779,31780,31781,31784,31785,31787,31788,31789,31790,31791,31792,31793,31794,31795,31796,31797,31798,31799,31801,31802,31803,31804,31805,31806,31810,39608,23401,28023,27686,20133,23475,39559,37219,25e3,37039,38889,21547,28085,23506,20989,21898,32597,32752,25788,25421,26097,25022,24717,28938,27735,27721,22831,26477,33322,22741,22158,35946,27627,37085,22909,32791,21495,28009,21621,21917,33655,33743,26680,31166,21644,20309,21512,30418,35977,38402,27827,28088,36203,35088,40548,36154,22079,40657,30165,24456,29408,24680,21756,20136,27178,34913,24658,36720,21700,28888,34425,40511,27946,23439,24344,32418,21897,20399,29492,21564,21402,20505,21518,21628,20046,24573,29786,22774,33899,32993,34676,29392,31946,28246,31811,31812,31813,31814,31815,31816,31817,31818,31819,31820,31822,31823,31824,31825,31826,31827,31828,31829,31830,31831,31832,31833,31834,31835,31836,31837,31838,31839,31840,31841,31842,31843,31844,31845,31846,31847,31848,31849,31850,31851,31852,31853,31854,31855,31856,31857,31858,31861,31862,31863,31864,31865,31866,31870,31871,31872,31873,31874,31875,31876,31877,31878,31879,31880,31882,31883,31884,31885,31886,31887,31888,31891,31892,31894,31897,31898,31899,31904,31905,31907,31910,31911,31912,31913,31915,31916,31917,31919,31920,31924,31925,31926,31927,31928,31930,31931,24359,34382,21804,25252,20114,27818,25143,33457,21719,21326,29502,28369,30011,21010,21270,35805,27088,24458,24576,28142,22351,27426,29615,26707,36824,32531,25442,24739,21796,30186,35938,28949,28067,23462,24187,33618,24908,40644,30970,34647,31783,30343,20976,24822,29004,26179,24140,24653,35854,28784,25381,36745,24509,24674,34516,22238,27585,24724,24935,21321,24800,26214,36159,31229,20250,28905,27719,35763,35826,32472,33636,26127,23130,39746,27985,28151,35905,27963,20249,28779,33719,25110,24785,38669,36135,31096,20987,22334,22522,26426,30072,31293,31215,31637,31935,31936,31938,31939,31940,31942,31945,31947,31950,31951,31952,31953,31954,31955,31956,31960,31962,31963,31965,31966,31969,31970,31971,31972,31973,31974,31975,31977,31978,31979,31980,31981,31982,31984,31985,31986,31987,31988,31989,31990,31991,31993,31994,31996,31997,31998,31999,32e3,32001,32002,32003,32004,32005,32006,32007,32008,32009,32011,32012,32013,32014,32015,32016,32017,32018,32019,32020,32021,32022,32023,32024,32025,32026,32027,32028,32029,32030,32031,32033,32035,32036,32037,32038,32040,32041,32042,32044,32045,32046,32048,32049,32050,32051,32052,32053,32054,32908,39269,36857,28608,35749,40481,23020,32489,32521,21513,26497,26840,36753,31821,38598,21450,24613,30142,27762,21363,23241,32423,25380,20960,33034,24049,34015,25216,20864,23395,20238,31085,21058,24760,27982,23492,23490,35745,35760,26082,24524,38469,22931,32487,32426,22025,26551,22841,20339,23478,21152,33626,39050,36158,30002,38078,20551,31292,20215,26550,39550,23233,27516,30417,22362,23574,31546,38388,29006,20860,32937,33392,22904,32516,33575,26816,26604,30897,30839,25315,25441,31616,20461,21098,20943,33616,27099,37492,36341,36145,35265,38190,31661,20214,32055,32056,32057,32058,32059,32060,32061,32062,32063,32064,32065,32066,32067,32068,32069,32070,32071,32072,32073,32074,32075,32076,32077,32078,32079,32080,32081,32082,32083,32084,32085,32086,32087,32088,32089,32090,32091,32092,32093,32094,32095,32096,32097,32098,32099,32100,32101,32102,32103,32104,32105,32106,32107,32108,32109,32111,32112,32113,32114,32115,32116,32117,32118,32120,32121,32122,32123,32124,32125,32126,32127,32128,32129,32130,32131,32132,32133,32134,32135,32136,32137,32138,32139,32140,32141,32142,32143,32144,32145,32146,32147,32148,32149,32150,32151,32152,20581,33328,21073,39279,28176,28293,28071,24314,20725,23004,23558,27974,27743,30086,33931,26728,22870,35762,21280,37233,38477,34121,26898,30977,28966,33014,20132,37066,27975,39556,23047,22204,25605,38128,30699,20389,33050,29409,35282,39290,32564,32478,21119,25945,37237,36735,36739,21483,31382,25581,25509,30342,31224,34903,38454,25130,21163,33410,26708,26480,25463,30571,31469,27905,32467,35299,22992,25106,34249,33445,30028,20511,20171,30117,35819,23626,24062,31563,26020,37329,20170,27941,35167,32039,38182,20165,35880,36827,38771,26187,31105,36817,28908,28024,32153,32154,32155,32156,32157,32158,32159,32160,32161,32162,32163,32164,32165,32167,32168,32169,32170,32171,32172,32173,32175,32176,32177,32178,32179,32180,32181,32182,32183,32184,32185,32186,32187,32188,32189,32190,32191,32192,32193,32194,32195,32196,32197,32198,32199,32200,32201,32202,32203,32204,32205,32206,32207,32208,32209,32210,32211,32212,32213,32214,32215,32216,32217,32218,32219,32220,32221,32222,32223,32224,32225,32226,32227,32228,32229,32230,32231,32232,32233,32234,32235,32236,32237,32238,32239,32240,32241,32242,32243,32244,32245,32246,32247,32248,32249,32250,23613,21170,33606,20834,33550,30555,26230,40120,20140,24778,31934,31923,32463,20117,35686,26223,39048,38745,22659,25964,38236,24452,30153,38742,31455,31454,20928,28847,31384,25578,31350,32416,29590,38893,20037,28792,20061,37202,21417,25937,26087,33276,33285,21646,23601,30106,38816,25304,29401,30141,23621,39545,33738,23616,21632,30697,20030,27822,32858,25298,25454,24040,20855,36317,36382,38191,20465,21477,24807,28844,21095,25424,40515,23071,20518,30519,21367,32482,25733,25899,25225,25496,20500,29237,35273,20915,35776,32477,22343,33740,38055,20891,21531,23803,32251,32252,32253,32254,32255,32256,32257,32258,32259,32260,32261,32262,32263,32264,32265,32266,32267,32268,32269,32270,32271,32272,32273,32274,32275,32276,32277,32278,32279,32280,32281,32282,32283,32284,32285,32286,32287,32288,32289,32290,32291,32292,32293,32294,32295,32296,32297,32298,32299,32300,32301,32302,32303,32304,32305,32306,32307,32308,32309,32310,32311,32312,32313,32314,32316,32317,32318,32319,32320,32322,32323,32324,32325,32326,32328,32329,32330,32331,32332,32333,32334,32335,32336,32337,32338,32339,32340,32341,32342,32343,32344,32345,32346,32347,32348,32349,20426,31459,27994,37089,39567,21888,21654,21345,21679,24320,25577,26999,20975,24936,21002,22570,21208,22350,30733,30475,24247,24951,31968,25179,25239,20130,28821,32771,25335,28900,38752,22391,33499,26607,26869,30933,39063,31185,22771,21683,21487,28212,20811,21051,23458,35838,32943,21827,22438,24691,22353,21549,31354,24656,23380,25511,25248,21475,25187,23495,26543,21741,31391,33510,37239,24211,35044,22840,22446,25358,36328,33007,22359,31607,20393,24555,23485,27454,21281,31568,29378,26694,30719,30518,26103,20917,20111,30420,23743,31397,33909,22862,39745,20608,32350,32351,32352,32353,32354,32355,32356,32357,32358,32359,32360,32361,32362,32363,32364,32365,32366,32367,32368,32369,32370,32371,32372,32373,32374,32375,32376,32377,32378,32379,32380,32381,32382,32383,32384,32385,32387,32388,32389,32390,32391,32392,32393,32394,32395,32396,32397,32398,32399,32400,32401,32402,32403,32404,32405,32406,32407,32408,32409,32410,32412,32413,32414,32430,32436,32443,32444,32470,32484,32492,32505,32522,32528,32542,32567,32569,32571,32572,32573,32574,32575,32576,32577,32579,32582,32583,32584,32585,32586,32587,32588,32589,32590,32591,32594,32595,39304,24871,28291,22372,26118,25414,22256,25324,25193,24275,38420,22403,25289,21895,34593,33098,36771,21862,33713,26469,36182,34013,23146,26639,25318,31726,38417,20848,28572,35888,25597,35272,25042,32518,28866,28389,29701,27028,29436,24266,37070,26391,28010,25438,21171,29282,32769,20332,23013,37226,28889,28061,21202,20048,38647,38253,34174,30922,32047,20769,22418,25794,32907,31867,27882,26865,26974,20919,21400,26792,29313,40654,31729,29432,31163,28435,29702,26446,37324,40100,31036,33673,33620,21519,26647,20029,21385,21169,30782,21382,21033,20616,20363,20432,32598,32601,32603,32604,32605,32606,32608,32611,32612,32613,32614,32615,32619,32620,32621,32623,32624,32627,32629,32630,32631,32632,32634,32635,32636,32637,32639,32640,32642,32643,32644,32645,32646,32647,32648,32649,32651,32653,32655,32656,32657,32658,32659,32661,32662,32663,32664,32665,32667,32668,32672,32674,32675,32677,32678,32680,32681,32682,32683,32684,32685,32686,32689,32691,32692,32693,32694,32695,32698,32699,32702,32704,32706,32707,32708,32710,32711,32712,32713,32715,32717,32719,32720,32721,32722,32723,32726,32727,32729,32730,32731,32732,32733,32734,32738,32739,30178,31435,31890,27813,38582,21147,29827,21737,20457,32852,33714,36830,38256,24265,24604,28063,24088,25947,33080,38142,24651,28860,32451,31918,20937,26753,31921,33391,20004,36742,37327,26238,20142,35845,25769,32842,20698,30103,29134,23525,36797,28518,20102,25730,38243,24278,26009,21015,35010,28872,21155,29454,29747,26519,30967,38678,20020,37051,40158,28107,20955,36161,21533,25294,29618,33777,38646,40836,38083,20278,32666,20940,28789,38517,23725,39046,21478,20196,28316,29705,27060,30827,39311,30041,21016,30244,27969,26611,20845,40857,32843,21657,31548,31423,32740,32743,32744,32746,32747,32748,32749,32751,32754,32756,32757,32758,32759,32760,32761,32762,32765,32766,32767,32770,32775,32776,32777,32778,32782,32783,32785,32787,32794,32795,32797,32798,32799,32801,32803,32804,32811,32812,32813,32814,32815,32816,32818,32820,32825,32826,32828,32830,32832,32833,32836,32837,32839,32840,32841,32846,32847,32848,32849,32851,32853,32854,32855,32857,32859,32860,32861,32862,32863,32864,32865,32866,32867,32868,32869,32870,32871,32872,32875,32876,32877,32878,32879,32880,32882,32883,32884,32885,32886,32887,32888,32889,32890,32891,32892,32893,38534,22404,25314,38471,27004,23044,25602,31699,28431,38475,33446,21346,39045,24208,28809,25523,21348,34383,40065,40595,30860,38706,36335,36162,40575,28510,31108,24405,38470,25134,39540,21525,38109,20387,26053,23653,23649,32533,34385,27695,24459,29575,28388,32511,23782,25371,23402,28390,21365,20081,25504,30053,25249,36718,20262,20177,27814,32438,35770,33821,34746,32599,36923,38179,31657,39585,35064,33853,27931,39558,32476,22920,40635,29595,30721,34434,39532,39554,22043,21527,22475,20080,40614,21334,36808,33033,30610,39314,34542,28385,34067,26364,24930,28459,32894,32897,32898,32901,32904,32906,32909,32910,32911,32912,32913,32914,32916,32917,32919,32921,32926,32931,32934,32935,32936,32940,32944,32947,32949,32950,32952,32953,32955,32965,32967,32968,32969,32970,32971,32975,32976,32977,32978,32979,32980,32981,32984,32991,32992,32994,32995,32998,33006,33013,33015,33017,33019,33022,33023,33024,33025,33027,33028,33029,33031,33032,33035,33036,33045,33047,33049,33051,33052,33053,33055,33056,33057,33058,33059,33060,33061,33062,33063,33064,33065,33066,33067,33069,33070,33072,33075,33076,33077,33079,33081,33082,33083,33084,33085,33087,35881,33426,33579,30450,27667,24537,33725,29483,33541,38170,27611,30683,38086,21359,33538,20882,24125,35980,36152,20040,29611,26522,26757,37238,38665,29028,27809,30473,23186,38209,27599,32654,26151,23504,22969,23194,38376,38391,20204,33804,33945,27308,30431,38192,29467,26790,23391,30511,37274,38753,31964,36855,35868,24357,31859,31192,35269,27852,34588,23494,24130,26825,30496,32501,20885,20813,21193,23081,32517,38754,33495,25551,30596,34256,31186,28218,24217,22937,34065,28781,27665,25279,30399,25935,24751,38397,26126,34719,40483,38125,21517,21629,35884,25720,33088,33089,33090,33091,33092,33093,33095,33097,33101,33102,33103,33106,33110,33111,33112,33115,33116,33117,33118,33119,33121,33122,33123,33124,33126,33128,33130,33131,33132,33135,33138,33139,33141,33142,33143,33144,33153,33155,33156,33157,33158,33159,33161,33163,33164,33165,33166,33168,33170,33171,33172,33173,33174,33175,33177,33178,33182,33183,33184,33185,33186,33188,33189,33191,33193,33195,33196,33197,33198,33199,33200,33201,33202,33204,33205,33206,33207,33208,33209,33212,33213,33214,33215,33220,33221,33223,33224,33225,33227,33229,33230,33231,33232,33233,33234,33235,25721,34321,27169,33180,30952,25705,39764,25273,26411,33707,22696,40664,27819,28448,23518,38476,35851,29279,26576,25287,29281,20137,22982,27597,22675,26286,24149,21215,24917,26408,30446,30566,29287,31302,25343,21738,21584,38048,37027,23068,32435,27670,20035,22902,32784,22856,21335,30007,38590,22218,25376,33041,24700,38393,28118,21602,39297,20869,23273,33021,22958,38675,20522,27877,23612,25311,20320,21311,33147,36870,28346,34091,25288,24180,30910,25781,25467,24565,23064,37247,40479,23615,25423,32834,23421,21870,38218,38221,28037,24744,26592,29406,20957,23425,33236,33237,33238,33239,33240,33241,33242,33243,33244,33245,33246,33247,33248,33249,33250,33252,33253,33254,33256,33257,33259,33262,33263,33264,33265,33266,33269,33270,33271,33272,33273,33274,33277,33279,33283,33287,33288,33289,33290,33291,33294,33295,33297,33299,33301,33302,33303,33304,33305,33306,33309,33312,33316,33317,33318,33319,33321,33326,33330,33338,33340,33341,33343,33344,33345,33346,33347,33349,33350,33352,33354,33356,33357,33358,33360,33361,33362,33363,33364,33365,33366,33367,33369,33371,33372,33373,33374,33376,33377,33378,33379,33380,33381,33382,33383,33385,25319,27870,29275,25197,38062,32445,33043,27987,20892,24324,22900,21162,24594,22899,26262,34384,30111,25386,25062,31983,35834,21734,27431,40485,27572,34261,21589,20598,27812,21866,36276,29228,24085,24597,29750,25293,25490,29260,24472,28227,27966,25856,28504,30424,30928,30460,30036,21028,21467,20051,24222,26049,32810,32982,25243,21638,21032,28846,34957,36305,27873,21624,32986,22521,35060,36180,38506,37197,20329,27803,21943,30406,30768,25256,28921,28558,24429,34028,26842,30844,31735,33192,26379,40527,25447,30896,22383,30738,38713,25209,25259,21128,29749,27607,33386,33387,33388,33389,33393,33397,33398,33399,33400,33403,33404,33408,33409,33411,33413,33414,33415,33417,33420,33424,33427,33428,33429,33430,33434,33435,33438,33440,33442,33443,33447,33458,33461,33462,33466,33467,33468,33471,33472,33474,33475,33477,33478,33481,33488,33494,33497,33498,33501,33506,33511,33512,33513,33514,33516,33517,33518,33520,33522,33523,33525,33526,33528,33530,33532,33533,33534,33535,33536,33546,33547,33549,33552,33554,33555,33558,33560,33561,33565,33566,33567,33568,33569,33570,33571,33572,33573,33574,33577,33578,33582,33584,33586,33591,33595,33597,21860,33086,30130,30382,21305,30174,20731,23617,35692,31687,20559,29255,39575,39128,28418,29922,31080,25735,30629,25340,39057,36139,21697,32856,20050,22378,33529,33805,24179,20973,29942,35780,23631,22369,27900,39047,23110,30772,39748,36843,31893,21078,25169,38138,20166,33670,33889,33769,33970,22484,26420,22275,26222,28006,35889,26333,28689,26399,27450,26646,25114,22971,19971,20932,28422,26578,27791,20854,26827,22855,27495,30054,23822,33040,40784,26071,31048,31041,39569,36215,23682,20062,20225,21551,22865,30732,22120,27668,36804,24323,27773,27875,35755,25488,33598,33599,33601,33602,33604,33605,33608,33610,33611,33612,33613,33614,33619,33621,33622,33623,33624,33625,33629,33634,33648,33649,33650,33651,33652,33653,33654,33657,33658,33662,33663,33664,33665,33666,33667,33668,33671,33672,33674,33675,33676,33677,33679,33680,33681,33684,33685,33686,33687,33689,33690,33693,33695,33697,33698,33699,33700,33701,33702,33703,33708,33709,33710,33711,33717,33723,33726,33727,33730,33731,33732,33734,33736,33737,33739,33741,33742,33744,33745,33746,33747,33749,33751,33753,33754,33755,33758,33762,33763,33764,33766,33767,33768,33771,33772,33773,24688,27965,29301,25190,38030,38085,21315,36801,31614,20191,35878,20094,40660,38065,38067,21069,28508,36963,27973,35892,22545,23884,27424,27465,26538,21595,33108,32652,22681,34103,24378,25250,27207,38201,25970,24708,26725,30631,20052,20392,24039,38808,25772,32728,23789,20431,31373,20999,33540,19988,24623,31363,38054,20405,20146,31206,29748,21220,33465,25810,31165,23517,27777,38738,36731,27682,20542,21375,28165,25806,26228,27696,24773,39031,35831,24198,29756,31351,31179,19992,37041,29699,27714,22234,37195,27845,36235,21306,34502,26354,36527,23624,39537,28192,33774,33775,33779,33780,33781,33782,33783,33786,33787,33788,33790,33791,33792,33794,33797,33799,33800,33801,33802,33808,33810,33811,33812,33813,33814,33815,33817,33818,33819,33822,33823,33824,33825,33826,33827,33833,33834,33835,33836,33837,33838,33839,33840,33842,33843,33844,33845,33846,33847,33849,33850,33851,33854,33855,33856,33857,33858,33859,33860,33861,33863,33864,33865,33866,33867,33868,33869,33870,33871,33872,33874,33875,33876,33877,33878,33880,33885,33886,33887,33888,33890,33892,33893,33894,33895,33896,33898,33902,33903,33904,33906,33908,33911,33913,33915,33916,21462,23094,40843,36259,21435,22280,39079,26435,37275,27849,20840,30154,25331,29356,21048,21149,32570,28820,30264,21364,40522,27063,30830,38592,35033,32676,28982,29123,20873,26579,29924,22756,25880,22199,35753,39286,25200,32469,24825,28909,22764,20161,20154,24525,38887,20219,35748,20995,22922,32427,25172,20173,26085,25102,33592,33993,33635,34701,29076,28342,23481,32466,20887,25545,26580,32905,33593,34837,20754,23418,22914,36785,20083,27741,20837,35109,36719,38446,34122,29790,38160,38384,28070,33509,24369,25746,27922,33832,33134,40131,22622,36187,19977,21441,33917,33918,33919,33920,33921,33923,33924,33925,33926,33930,33933,33935,33936,33937,33938,33939,33940,33941,33942,33944,33946,33947,33949,33950,33951,33952,33954,33955,33956,33957,33958,33959,33960,33961,33962,33963,33964,33965,33966,33968,33969,33971,33973,33974,33975,33979,33980,33982,33984,33986,33987,33989,33990,33991,33992,33995,33996,33998,33999,34002,34004,34005,34007,34008,34009,34010,34011,34012,34014,34017,34018,34020,34023,34024,34025,34026,34027,34029,34030,34031,34033,34034,34035,34036,34037,34038,34039,34040,34041,34042,34043,34045,34046,34048,34049,34050,20254,25955,26705,21971,20007,25620,39578,25195,23234,29791,33394,28073,26862,20711,33678,30722,26432,21049,27801,32433,20667,21861,29022,31579,26194,29642,33515,26441,23665,21024,29053,34923,38378,38485,25797,36193,33203,21892,27733,25159,32558,22674,20260,21830,36175,26188,19978,23578,35059,26786,25422,31245,28903,33421,21242,38902,23569,21736,37045,32461,22882,36170,34503,33292,33293,36198,25668,23556,24913,28041,31038,35774,30775,30003,21627,20280,36523,28145,23072,32453,31070,27784,23457,23158,29978,32958,24910,28183,22768,29983,29989,29298,21319,32499,34051,34052,34053,34054,34055,34056,34057,34058,34059,34061,34062,34063,34064,34066,34068,34069,34070,34072,34073,34075,34076,34077,34078,34080,34082,34083,34084,34085,34086,34087,34088,34089,34090,34093,34094,34095,34096,34097,34098,34099,34100,34101,34102,34110,34111,34112,34113,34114,34116,34117,34118,34119,34123,34124,34125,34126,34127,34128,34129,34130,34131,34132,34133,34135,34136,34138,34139,34140,34141,34143,34144,34145,34146,34147,34149,34150,34151,34153,34154,34155,34156,34157,34158,34159,34160,34161,34163,34165,34166,34167,34168,34172,34173,34175,34176,34177,30465,30427,21097,32988,22307,24072,22833,29422,26045,28287,35799,23608,34417,21313,30707,25342,26102,20160,39135,34432,23454,35782,21490,30690,20351,23630,39542,22987,24335,31034,22763,19990,26623,20107,25325,35475,36893,21183,26159,21980,22124,36866,20181,20365,37322,39280,27663,24066,24643,23460,35270,35797,25910,25163,39318,23432,23551,25480,21806,21463,30246,20861,34092,26530,26803,27530,25234,36755,21460,33298,28113,30095,20070,36174,23408,29087,34223,26257,26329,32626,34560,40653,40736,23646,26415,36848,26641,26463,25101,31446,22661,24246,25968,28465,34178,34179,34182,34184,34185,34186,34187,34188,34189,34190,34192,34193,34194,34195,34196,34197,34198,34199,34200,34201,34202,34205,34206,34207,34208,34209,34210,34211,34213,34214,34215,34217,34219,34220,34221,34225,34226,34227,34228,34229,34230,34232,34234,34235,34236,34237,34238,34239,34240,34242,34243,34244,34245,34246,34247,34248,34250,34251,34252,34253,34254,34257,34258,34260,34262,34263,34264,34265,34266,34267,34269,34270,34271,34272,34273,34274,34275,34277,34278,34279,34280,34282,34283,34284,34285,34286,34287,34288,34289,34290,34291,34292,34293,34294,34295,34296,24661,21047,32781,25684,34928,29993,24069,26643,25332,38684,21452,29245,35841,27700,30561,31246,21550,30636,39034,33308,35828,30805,26388,28865,26031,25749,22070,24605,31169,21496,19997,27515,32902,23546,21987,22235,20282,20284,39282,24051,26494,32824,24578,39042,36865,23435,35772,35829,25628,33368,25822,22013,33487,37221,20439,32032,36895,31903,20723,22609,28335,23487,35785,32899,37240,33948,31639,34429,38539,38543,32485,39635,30862,23681,31319,36930,38567,31071,23385,25439,31499,34001,26797,21766,32553,29712,32034,38145,25152,22604,20182,23427,22905,22612,34297,34298,34300,34301,34302,34304,34305,34306,34307,34308,34310,34311,34312,34313,34314,34315,34316,34317,34318,34319,34320,34322,34323,34324,34325,34327,34328,34329,34330,34331,34332,34333,34334,34335,34336,34337,34338,34339,34340,34341,34342,34344,34346,34347,34348,34349,34350,34351,34352,34353,34354,34355,34356,34357,34358,34359,34361,34362,34363,34365,34366,34367,34368,34369,34370,34371,34372,34373,34374,34375,34376,34377,34378,34379,34380,34386,34387,34389,34390,34391,34392,34393,34395,34396,34397,34399,34400,34401,34403,34404,34405,34406,34407,34408,34409,34410,29549,25374,36427,36367,32974,33492,25260,21488,27888,37214,22826,24577,27760,22349,25674,36138,30251,28393,22363,27264,30192,28525,35885,35848,22374,27631,34962,30899,25506,21497,28845,27748,22616,25642,22530,26848,33179,21776,31958,20504,36538,28108,36255,28907,25487,28059,28372,32486,33796,26691,36867,28120,38518,35752,22871,29305,34276,33150,30140,35466,26799,21076,36386,38161,25552,39064,36420,21884,20307,26367,22159,24789,28053,21059,23625,22825,28155,22635,3e4,29980,24684,33300,33094,25361,26465,36834,30522,36339,36148,38081,24086,21381,21548,28867,34413,34415,34416,34418,34419,34420,34421,34422,34423,34424,34435,34436,34437,34438,34439,34440,34441,34446,34447,34448,34449,34450,34452,34454,34455,34456,34457,34458,34459,34462,34463,34464,34465,34466,34469,34470,34475,34477,34478,34482,34483,34487,34488,34489,34491,34492,34493,34494,34495,34497,34498,34499,34501,34504,34508,34509,34514,34515,34517,34518,34519,34522,34524,34525,34528,34529,34530,34531,34533,34534,34535,34536,34538,34539,34540,34543,34549,34550,34551,34554,34555,34556,34557,34559,34561,34564,34565,34566,34571,34572,34574,34575,34576,34577,34580,34582,27712,24311,20572,20141,24237,25402,33351,36890,26704,37230,30643,21516,38108,24420,31461,26742,25413,31570,32479,30171,20599,25237,22836,36879,20984,31171,31361,22270,24466,36884,28034,23648,22303,21520,20820,28237,22242,25512,39059,33151,34581,35114,36864,21534,23663,33216,25302,25176,33073,40501,38464,39534,39548,26925,22949,25299,21822,25366,21703,34521,27964,23043,29926,34972,27498,22806,35916,24367,28286,29609,39037,20024,28919,23436,30871,25405,26202,30358,24779,23451,23113,19975,33109,27754,29579,20129,26505,32593,24448,26106,26395,24536,22916,23041,34585,34587,34589,34591,34592,34596,34598,34599,34600,34602,34603,34604,34605,34607,34608,34610,34611,34613,34614,34616,34617,34618,34620,34621,34624,34625,34626,34627,34628,34629,34630,34634,34635,34637,34639,34640,34641,34642,34644,34645,34646,34648,34650,34651,34652,34653,34654,34655,34657,34658,34662,34663,34664,34665,34666,34667,34668,34669,34671,34673,34674,34675,34677,34679,34680,34681,34682,34687,34688,34689,34692,34694,34695,34697,34698,34700,34702,34703,34704,34705,34706,34708,34709,34710,34712,34713,34714,34715,34716,34717,34718,34720,34721,34722,34723,34724,24013,24494,21361,38886,36829,26693,22260,21807,24799,20026,28493,32500,33479,33806,22996,20255,20266,23614,32428,26410,34074,21619,30031,32963,21890,39759,20301,28205,35859,23561,24944,21355,30239,28201,34442,25991,38395,32441,21563,31283,32010,38382,21985,32705,29934,25373,34583,28065,31389,25105,26017,21351,25569,27779,24043,21596,38056,20044,27745,35820,23627,26080,33436,26791,21566,21556,27595,27494,20116,25410,21320,33310,20237,20398,22366,25098,38654,26212,29289,21247,21153,24735,35823,26132,29081,26512,35199,30802,30717,26224,22075,21560,38177,29306,34725,34726,34727,34729,34730,34734,34736,34737,34738,34740,34742,34743,34744,34745,34747,34748,34750,34751,34753,34754,34755,34756,34757,34759,34760,34761,34764,34765,34766,34767,34768,34772,34773,34774,34775,34776,34777,34778,34780,34781,34782,34783,34785,34786,34787,34788,34790,34791,34792,34793,34795,34796,34797,34799,34800,34801,34802,34803,34804,34805,34806,34807,34808,34810,34811,34812,34813,34815,34816,34817,34818,34820,34821,34822,34823,34824,34825,34827,34828,34829,34830,34831,34832,34833,34834,34836,34839,34840,34841,34842,34844,34845,34846,34847,34848,34851,31232,24687,24076,24713,33181,22805,24796,29060,28911,28330,27728,29312,27268,34989,24109,20064,23219,21916,38115,27927,31995,38553,25103,32454,30606,34430,21283,38686,36758,26247,23777,20384,29421,19979,21414,22799,21523,25472,38184,20808,20185,40092,32420,21688,36132,34900,33335,38386,28046,24358,23244,26174,38505,29616,29486,21439,33146,39301,32673,23466,38519,38480,32447,30456,21410,38262,39321,31665,35140,28248,20065,32724,31077,35814,24819,21709,20139,39033,24055,27233,20687,21521,35937,33831,30813,38660,21066,21742,22179,38144,28040,23477,28102,26195,34852,34853,34854,34855,34856,34857,34858,34859,34860,34861,34862,34863,34864,34865,34867,34868,34869,34870,34871,34872,34874,34875,34877,34878,34879,34881,34882,34883,34886,34887,34888,34889,34890,34891,34894,34895,34896,34897,34898,34899,34901,34902,34904,34906,34907,34908,34909,34910,34911,34912,34918,34919,34922,34925,34927,34929,34931,34932,34933,34934,34936,34937,34938,34939,34940,34944,34947,34950,34951,34953,34954,34956,34958,34959,34960,34961,34963,34964,34965,34967,34968,34969,34970,34971,34973,34974,34975,34976,34977,34979,34981,34982,34983,34984,34985,34986,23567,23389,26657,32918,21880,31505,25928,26964,20123,27463,34638,38795,21327,25375,25658,37034,26012,32961,35856,20889,26800,21368,34809,25032,27844,27899,35874,23633,34218,33455,38156,27427,36763,26032,24571,24515,20449,34885,26143,33125,29481,24826,20852,21009,22411,24418,37026,34892,37266,24184,26447,24615,22995,20804,20982,33016,21256,27769,38596,29066,20241,20462,32670,26429,21957,38152,31168,34966,32483,22687,25100,38656,34394,22040,39035,24464,35768,33988,37207,21465,26093,24207,30044,24676,32110,23167,32490,32493,36713,21927,23459,24748,26059,29572,34988,34990,34991,34992,34994,34995,34996,34997,34998,35e3,35001,35002,35003,35005,35006,35007,35008,35011,35012,35015,35016,35018,35019,35020,35021,35023,35024,35025,35027,35030,35031,35034,35035,35036,35037,35038,35040,35041,35046,35047,35049,35050,35051,35052,35053,35054,35055,35058,35061,35062,35063,35066,35067,35069,35071,35072,35073,35075,35076,35077,35078,35079,35080,35081,35083,35084,35085,35086,35087,35089,35092,35093,35094,35095,35096,35100,35101,35102,35103,35104,35106,35107,35108,35110,35111,35112,35113,35116,35117,35118,35119,35121,35122,35123,35125,35127,36873,30307,30505,32474,38772,34203,23398,31348,38634,34880,21195,29071,24490,26092,35810,23547,39535,24033,27529,27739,35757,35759,36874,36805,21387,25276,40486,40493,21568,20011,33469,29273,34460,23830,34905,28079,38597,21713,20122,35766,28937,21693,38409,28895,28153,30416,20005,30740,34578,23721,24310,35328,39068,38414,28814,27839,22852,25513,30524,34893,28436,33395,22576,29141,21388,30746,38593,21761,24422,28976,23476,35866,39564,27523,22830,40495,31207,26472,25196,20335,30113,32650,27915,38451,27687,20208,30162,20859,26679,28478,36992,33136,22934,29814,35128,35129,35130,35131,35132,35133,35134,35135,35136,35138,35139,35141,35142,35143,35144,35145,35146,35147,35148,35149,35150,35151,35152,35153,35154,35155,35156,35157,35158,35159,35160,35161,35162,35163,35164,35165,35168,35169,35170,35171,35172,35173,35175,35176,35177,35178,35179,35180,35181,35182,35183,35184,35185,35186,35187,35188,35189,35190,35191,35192,35193,35194,35196,35197,35198,35200,35202,35204,35205,35207,35208,35209,35210,35211,35212,35213,35214,35215,35216,35217,35218,35219,35220,35221,35222,35223,35224,35225,35226,35227,35228,35229,35230,35231,35232,35233,25671,23591,36965,31377,35875,23002,21676,33280,33647,35201,32768,26928,22094,32822,29239,37326,20918,20063,39029,25494,19994,21494,26355,33099,22812,28082,19968,22777,21307,25558,38129,20381,20234,34915,39056,22839,36951,31227,20202,33008,30097,27778,23452,23016,24413,26885,34433,20506,24050,20057,30691,20197,33402,25233,26131,37009,23673,20159,24441,33222,36920,32900,30123,20134,35028,24847,27589,24518,20041,30410,28322,35811,35758,35850,35793,24322,32764,32716,32462,33589,33643,22240,27575,38899,38452,23035,21535,38134,28139,23493,39278,23609,24341,38544,35234,35235,35236,35237,35238,35239,35240,35241,35242,35243,35244,35245,35246,35247,35248,35249,35250,35251,35252,35253,35254,35255,35256,35257,35258,35259,35260,35261,35262,35263,35264,35267,35277,35283,35284,35285,35287,35288,35289,35291,35293,35295,35296,35297,35298,35300,35303,35304,35305,35306,35308,35309,35310,35312,35313,35314,35316,35317,35318,35319,35320,35321,35322,35323,35324,35325,35326,35327,35329,35330,35331,35332,35333,35334,35336,35337,35338,35339,35340,35341,35342,35343,35344,35345,35346,35347,35348,35349,35350,35351,35352,35353,35354,35355,35356,35357,21360,33521,27185,23156,40560,24212,32552,33721,33828,33829,33639,34631,36814,36194,30408,24433,39062,30828,26144,21727,25317,20323,33219,30152,24248,38605,36362,34553,21647,27891,28044,27704,24703,21191,29992,24189,20248,24736,24551,23588,30001,37038,38080,29369,27833,28216,37193,26377,21451,21491,20305,37321,35825,21448,24188,36802,28132,20110,30402,27014,34398,24858,33286,20313,20446,36926,40060,24841,28189,28180,38533,20104,23089,38632,19982,23679,31161,23431,35821,32701,29577,22495,33419,37057,21505,36935,21947,23786,24481,24840,27442,29425,32946,35465,35358,35359,35360,35361,35362,35363,35364,35365,35366,35367,35368,35369,35370,35371,35372,35373,35374,35375,35376,35377,35378,35379,35380,35381,35382,35383,35384,35385,35386,35387,35388,35389,35391,35392,35393,35394,35395,35396,35397,35398,35399,35401,35402,35403,35404,35405,35406,35407,35408,35409,35410,35411,35412,35413,35414,35415,35416,35417,35418,35419,35420,35421,35422,35423,35424,35425,35426,35427,35428,35429,35430,35431,35432,35433,35434,35435,35436,35437,35438,35439,35440,35441,35442,35443,35444,35445,35446,35447,35448,35450,35451,35452,35453,35454,35455,35456,28020,23507,35029,39044,35947,39533,40499,28170,20900,20803,22435,34945,21407,25588,36757,22253,21592,22278,29503,28304,32536,36828,33489,24895,24616,38498,26352,32422,36234,36291,38053,23731,31908,26376,24742,38405,32792,20113,37095,21248,38504,20801,36816,34164,37213,26197,38901,23381,21277,30776,26434,26685,21705,28798,23472,36733,20877,22312,21681,25874,26242,36190,36163,33039,33900,36973,31967,20991,34299,26531,26089,28577,34468,36481,22122,36896,30338,28790,29157,36131,25321,21017,27901,36156,24590,22686,24974,26366,36192,25166,21939,28195,26413,36711,35457,35458,35459,35460,35461,35462,35463,35464,35467,35468,35469,35470,35471,35472,35473,35474,35476,35477,35478,35479,35480,35481,35482,35483,35484,35485,35486,35487,35488,35489,35490,35491,35492,35493,35494,35495,35496,35497,35498,35499,35500,35501,35502,35503,35504,35505,35506,35507,35508,35509,35510,35511,35512,35513,35514,35515,35516,35517,35518,35519,35520,35521,35522,35523,35524,35525,35526,35527,35528,35529,35530,35531,35532,35533,35534,35535,35536,35537,35538,35539,35540,35541,35542,35543,35544,35545,35546,35547,35548,35549,35550,35551,35552,35553,35554,35555,38113,38392,30504,26629,27048,21643,20045,28856,35784,25688,25995,23429,31364,20538,23528,30651,27617,35449,31896,27838,30415,26025,36759,23853,23637,34360,26632,21344,25112,31449,28251,32509,27167,31456,24432,28467,24352,25484,28072,26454,19976,24080,36134,20183,32960,30260,38556,25307,26157,25214,27836,36213,29031,32617,20806,32903,21484,36974,25240,21746,34544,36761,32773,38167,34071,36825,27993,29645,26015,30495,29956,30759,33275,36126,38024,20390,26517,30137,35786,38663,25391,38215,38453,33976,25379,30529,24449,29424,20105,24596,25972,25327,27491,25919,35556,35557,35558,35559,35560,35561,35562,35563,35564,35565,35566,35567,35568,35569,35570,35571,35572,35573,35574,35575,35576,35577,35578,35579,35580,35581,35582,35583,35584,35585,35586,35587,35588,35589,35590,35592,35593,35594,35595,35596,35597,35598,35599,35600,35601,35602,35603,35604,35605,35606,35607,35608,35609,35610,35611,35612,35613,35614,35615,35616,35617,35618,35619,35620,35621,35623,35624,35625,35626,35627,35628,35629,35630,35631,35632,35633,35634,35635,35636,35637,35638,35639,35640,35641,35642,35643,35644,35645,35646,35647,35648,35649,35650,35651,35652,35653,24103,30151,37073,35777,33437,26525,25903,21553,34584,30693,32930,33026,27713,20043,32455,32844,30452,26893,27542,25191,20540,20356,22336,25351,27490,36286,21482,26088,32440,24535,25370,25527,33267,33268,32622,24092,23769,21046,26234,31209,31258,36136,28825,30164,28382,27835,31378,20013,30405,24544,38047,34935,32456,31181,32959,37325,20210,20247,33311,21608,24030,27954,35788,31909,36724,32920,24090,21650,30385,23449,26172,39588,29664,26666,34523,26417,29482,35832,35803,36880,31481,28891,29038,25284,30633,22065,20027,33879,26609,21161,34496,36142,38136,31569,35654,35655,35656,35657,35658,35659,35660,35661,35662,35663,35664,35665,35666,35667,35668,35669,35670,35671,35672,35673,35674,35675,35676,35677,35678,35679,35680,35681,35682,35683,35684,35685,35687,35688,35689,35690,35691,35693,35694,35695,35696,35697,35698,35699,35700,35701,35702,35703,35704,35705,35706,35707,35708,35709,35710,35711,35712,35713,35714,35715,35716,35717,35718,35719,35720,35721,35722,35723,35724,35725,35726,35727,35728,35729,35730,35731,35732,35733,35734,35735,35736,35737,35738,35739,35740,35741,35742,35743,35756,35761,35771,35783,35792,35818,35849,35870,20303,27880,31069,39547,25235,29226,25341,19987,30742,36716,25776,36186,31686,26729,24196,35013,22918,25758,22766,29366,26894,38181,36861,36184,22368,32512,35846,20934,25417,25305,21331,26700,29730,33537,37196,21828,30528,28796,27978,20857,21672,36164,23039,28363,28100,23388,32043,20180,31869,28371,23376,33258,28173,23383,39683,26837,36394,23447,32508,24635,32437,37049,36208,22863,25549,31199,36275,21330,26063,31062,35781,38459,32452,38075,32386,22068,37257,26368,32618,23562,36981,26152,24038,20304,26590,20570,20316,22352,24231,59408,59409,59410,59411,59412,35896,35897,35898,35899,35900,35901,35902,35903,35904,35906,35907,35908,35909,35912,35914,35915,35917,35918,35919,35920,35921,35922,35923,35924,35926,35927,35928,35929,35931,35932,35933,35934,35935,35936,35939,35940,35941,35942,35943,35944,35945,35948,35949,35950,35951,35952,35953,35954,35956,35957,35958,35959,35963,35964,35965,35966,35967,35968,35969,35971,35972,35974,35975,35976,35979,35981,35982,35983,35984,35985,35986,35987,35989,35990,35991,35993,35994,35995,35996,35997,35998,35999,36e3,36001,36002,36003,36004,36005,36006,36007,36008,36009,36010,36011,36012,36013,20109,19980,20800,19984,24319,21317,19989,20120,19998,39730,23404,22121,20008,31162,20031,21269,20039,22829,29243,21358,27664,22239,32996,39319,27603,30590,40727,20022,20127,40720,20060,20073,20115,33416,23387,21868,22031,20164,21389,21405,21411,21413,21422,38757,36189,21274,21493,21286,21294,21310,36188,21350,21347,20994,21e3,21006,21037,21043,21055,21056,21068,21086,21089,21084,33967,21117,21122,21121,21136,21139,20866,32596,20155,20163,20169,20162,20200,20193,20203,20190,20251,20211,20258,20324,20213,20261,20263,20233,20267,20318,20327,25912,20314,20317,36014,36015,36016,36017,36018,36019,36020,36021,36022,36023,36024,36025,36026,36027,36028,36029,36030,36031,36032,36033,36034,36035,36036,36037,36038,36039,36040,36041,36042,36043,36044,36045,36046,36047,36048,36049,36050,36051,36052,36053,36054,36055,36056,36057,36058,36059,36060,36061,36062,36063,36064,36065,36066,36067,36068,36069,36070,36071,36072,36073,36074,36075,36076,36077,36078,36079,36080,36081,36082,36083,36084,36085,36086,36087,36088,36089,36090,36091,36092,36093,36094,36095,36096,36097,36098,36099,36100,36101,36102,36103,36104,36105,36106,36107,36108,36109,20319,20311,20274,20285,20342,20340,20369,20361,20355,20367,20350,20347,20394,20348,20396,20372,20454,20456,20458,20421,20442,20451,20444,20433,20447,20472,20521,20556,20467,20524,20495,20526,20525,20478,20508,20492,20517,20520,20606,20547,20565,20552,20558,20588,20603,20645,20647,20649,20666,20694,20742,20717,20716,20710,20718,20743,20747,20189,27709,20312,20325,20430,40864,27718,31860,20846,24061,40649,39320,20865,22804,21241,21261,35335,21264,20971,22809,20821,20128,20822,20147,34926,34980,20149,33044,35026,31104,23348,34819,32696,20907,20913,20925,20924,36110,36111,36112,36113,36114,36115,36116,36117,36118,36119,36120,36121,36122,36123,36124,36128,36177,36178,36183,36191,36197,36200,36201,36202,36204,36206,36207,36209,36210,36216,36217,36218,36219,36220,36221,36222,36223,36224,36226,36227,36230,36231,36232,36233,36236,36237,36238,36239,36240,36242,36243,36245,36246,36247,36248,36249,36250,36251,36252,36253,36254,36256,36257,36258,36260,36261,36262,36263,36264,36265,36266,36267,36268,36269,36270,36271,36272,36274,36278,36279,36281,36283,36285,36288,36289,36290,36293,36295,36296,36297,36298,36301,36304,36306,36307,36308,20935,20886,20898,20901,35744,35750,35751,35754,35764,35765,35767,35778,35779,35787,35791,35790,35794,35795,35796,35798,35800,35801,35804,35807,35808,35812,35816,35817,35822,35824,35827,35830,35833,35836,35839,35840,35842,35844,35847,35852,35855,35857,35858,35860,35861,35862,35865,35867,35864,35869,35871,35872,35873,35877,35879,35882,35883,35886,35887,35890,35891,35893,35894,21353,21370,38429,38434,38433,38449,38442,38461,38460,38466,38473,38484,38495,38503,38508,38514,38516,38536,38541,38551,38576,37015,37019,37021,37017,37036,37025,37044,37043,37046,37050,36309,36312,36313,36316,36320,36321,36322,36325,36326,36327,36329,36333,36334,36336,36337,36338,36340,36342,36348,36350,36351,36352,36353,36354,36355,36356,36358,36359,36360,36363,36365,36366,36368,36369,36370,36371,36373,36374,36375,36376,36377,36378,36379,36380,36384,36385,36388,36389,36390,36391,36392,36395,36397,36400,36402,36403,36404,36406,36407,36408,36411,36412,36414,36415,36419,36421,36422,36428,36429,36430,36431,36432,36435,36436,36437,36438,36439,36440,36442,36443,36444,36445,36446,36447,36448,36449,36450,36451,36452,36453,36455,36456,36458,36459,36462,36465,37048,37040,37071,37061,37054,37072,37060,37063,37075,37094,37090,37084,37079,37083,37099,37103,37118,37124,37154,37150,37155,37169,37167,37177,37187,37190,21005,22850,21154,21164,21165,21182,21759,21200,21206,21232,21471,29166,30669,24308,20981,20988,39727,21430,24321,30042,24047,22348,22441,22433,22654,22716,22725,22737,22313,22316,22314,22323,22329,22318,22319,22364,22331,22338,22377,22405,22379,22406,22396,22395,22376,22381,22390,22387,22445,22436,22412,22450,22479,22439,22452,22419,22432,22485,22488,22490,22489,22482,22456,22516,22511,22520,22500,22493,36467,36469,36471,36472,36473,36474,36475,36477,36478,36480,36482,36483,36484,36486,36488,36489,36490,36491,36492,36493,36494,36497,36498,36499,36501,36502,36503,36504,36505,36506,36507,36509,36511,36512,36513,36514,36515,36516,36517,36518,36519,36520,36521,36522,36525,36526,36528,36529,36531,36532,36533,36534,36535,36536,36537,36539,36540,36541,36542,36543,36544,36545,36546,36547,36548,36549,36550,36551,36552,36553,36554,36555,36556,36557,36559,36560,36561,36562,36563,36564,36565,36566,36567,36568,36569,36570,36571,36572,36573,36574,36575,36576,36577,36578,36579,36580,22539,22541,22525,22509,22528,22558,22553,22596,22560,22629,22636,22657,22665,22682,22656,39336,40729,25087,33401,33405,33407,33423,33418,33448,33412,33422,33425,33431,33433,33451,33464,33470,33456,33480,33482,33507,33432,33463,33454,33483,33484,33473,33449,33460,33441,33450,33439,33476,33486,33444,33505,33545,33527,33508,33551,33543,33500,33524,33490,33496,33548,33531,33491,33553,33562,33542,33556,33557,33504,33493,33564,33617,33627,33628,33544,33682,33596,33588,33585,33691,33630,33583,33615,33607,33603,33631,33600,33559,33632,33581,33594,33587,33638,33637,36581,36582,36583,36584,36585,36586,36587,36588,36589,36590,36591,36592,36593,36594,36595,36596,36597,36598,36599,36600,36601,36602,36603,36604,36605,36606,36607,36608,36609,36610,36611,36612,36613,36614,36615,36616,36617,36618,36619,36620,36621,36622,36623,36624,36625,36626,36627,36628,36629,36630,36631,36632,36633,36634,36635,36636,36637,36638,36639,36640,36641,36642,36643,36644,36645,36646,36647,36648,36649,36650,36651,36652,36653,36654,36655,36656,36657,36658,36659,36660,36661,36662,36663,36664,36665,36666,36667,36668,36669,36670,36671,36672,36673,36674,36675,36676,33640,33563,33641,33644,33642,33645,33646,33712,33656,33715,33716,33696,33706,33683,33692,33669,33660,33718,33705,33661,33720,33659,33688,33694,33704,33722,33724,33729,33793,33765,33752,22535,33816,33803,33757,33789,33750,33820,33848,33809,33798,33748,33759,33807,33795,33784,33785,33770,33733,33728,33830,33776,33761,33884,33873,33882,33881,33907,33927,33928,33914,33929,33912,33852,33862,33897,33910,33932,33934,33841,33901,33985,33997,34e3,34022,33981,34003,33994,33983,33978,34016,33953,33977,33972,33943,34021,34019,34060,29965,34104,34032,34105,34079,34106,36677,36678,36679,36680,36681,36682,36683,36684,36685,36686,36687,36688,36689,36690,36691,36692,36693,36694,36695,36696,36697,36698,36699,36700,36701,36702,36703,36704,36705,36706,36707,36708,36709,36714,36736,36748,36754,36765,36768,36769,36770,36772,36773,36774,36775,36778,36780,36781,36782,36783,36786,36787,36788,36789,36791,36792,36794,36795,36796,36799,36800,36803,36806,36809,36810,36811,36812,36813,36815,36818,36822,36823,36826,36832,36833,36835,36839,36844,36847,36849,36850,36852,36853,36854,36858,36859,36860,36862,36863,36871,36872,36876,36878,36883,36885,36888,34134,34107,34047,34044,34137,34120,34152,34148,34142,34170,30626,34115,34162,34171,34212,34216,34183,34191,34169,34222,34204,34181,34233,34231,34224,34259,34241,34268,34303,34343,34309,34345,34326,34364,24318,24328,22844,22849,32823,22869,22874,22872,21263,23586,23589,23596,23604,25164,25194,25247,25275,25290,25306,25303,25326,25378,25334,25401,25419,25411,25517,25590,25457,25466,25486,25524,25453,25516,25482,25449,25518,25532,25586,25592,25568,25599,25540,25566,25550,25682,25542,25534,25669,25665,25611,25627,25632,25612,25638,25633,25694,25732,25709,25750,36889,36892,36899,36900,36901,36903,36904,36905,36906,36907,36908,36912,36913,36914,36915,36916,36919,36921,36922,36925,36927,36928,36931,36933,36934,36936,36937,36938,36939,36940,36942,36948,36949,36950,36953,36954,36956,36957,36958,36959,36960,36961,36964,36966,36967,36969,36970,36971,36972,36975,36976,36977,36978,36979,36982,36983,36984,36985,36986,36987,36988,36990,36993,36996,36997,36998,36999,37001,37002,37004,37005,37006,37007,37008,37010,37012,37014,37016,37018,37020,37022,37023,37024,37028,37029,37031,37032,37033,37035,37037,37042,37047,37052,37053,37055,37056,25722,25783,25784,25753,25786,25792,25808,25815,25828,25826,25865,25893,25902,24331,24530,29977,24337,21343,21489,21501,21481,21480,21499,21522,21526,21510,21579,21586,21587,21588,21590,21571,21537,21591,21593,21539,21554,21634,21652,21623,21617,21604,21658,21659,21636,21622,21606,21661,21712,21677,21698,21684,21714,21671,21670,21715,21716,21618,21667,21717,21691,21695,21708,21721,21722,21724,21673,21674,21668,21725,21711,21726,21787,21735,21792,21757,21780,21747,21794,21795,21775,21777,21799,21802,21863,21903,21941,21833,21869,21825,21845,21823,21840,21820,37058,37059,37062,37064,37065,37067,37068,37069,37074,37076,37077,37078,37080,37081,37082,37086,37087,37088,37091,37092,37093,37097,37098,37100,37102,37104,37105,37106,37107,37109,37110,37111,37113,37114,37115,37116,37119,37120,37121,37123,37125,37126,37127,37128,37129,37130,37131,37132,37133,37134,37135,37136,37137,37138,37139,37140,37141,37142,37143,37144,37146,37147,37148,37149,37151,37152,37153,37156,37157,37158,37159,37160,37161,37162,37163,37164,37165,37166,37168,37170,37171,37172,37173,37174,37175,37176,37178,37179,37180,37181,37182,37183,37184,37185,37186,37188,21815,21846,21877,21878,21879,21811,21808,21852,21899,21970,21891,21937,21945,21896,21889,21919,21886,21974,21905,21883,21983,21949,21950,21908,21913,21994,22007,21961,22047,21969,21995,21996,21972,21990,21981,21956,21999,21989,22002,22003,21964,21965,21992,22005,21988,36756,22046,22024,22028,22017,22052,22051,22014,22016,22055,22061,22104,22073,22103,22060,22093,22114,22105,22108,22092,22100,22150,22116,22129,22123,22139,22140,22149,22163,22191,22228,22231,22237,22241,22261,22251,22265,22271,22276,22282,22281,22300,24079,24089,24084,24081,24113,24123,24124,37189,37191,37192,37201,37203,37204,37205,37206,37208,37209,37211,37212,37215,37216,37222,37223,37224,37227,37229,37235,37242,37243,37244,37248,37249,37250,37251,37252,37254,37256,37258,37262,37263,37267,37268,37269,37270,37271,37272,37273,37276,37277,37278,37279,37280,37281,37284,37285,37286,37287,37288,37289,37291,37292,37296,37297,37298,37299,37302,37303,37304,37305,37307,37308,37309,37310,37311,37312,37313,37314,37315,37316,37317,37318,37320,37323,37328,37330,37331,37332,37333,37334,37335,37336,37337,37338,37339,37341,37342,37343,37344,37345,37346,37347,37348,37349,24119,24132,24148,24155,24158,24161,23692,23674,23693,23696,23702,23688,23704,23705,23697,23706,23708,23733,23714,23741,23724,23723,23729,23715,23745,23735,23748,23762,23780,23755,23781,23810,23811,23847,23846,23854,23844,23838,23814,23835,23896,23870,23860,23869,23916,23899,23919,23901,23915,23883,23882,23913,23924,23938,23961,23965,35955,23991,24005,24435,24439,24450,24455,24457,24460,24469,24473,24476,24488,24493,24501,24508,34914,24417,29357,29360,29364,29367,29368,29379,29377,29390,29389,29394,29416,29423,29417,29426,29428,29431,29441,29427,29443,29434,37350,37351,37352,37353,37354,37355,37356,37357,37358,37359,37360,37361,37362,37363,37364,37365,37366,37367,37368,37369,37370,37371,37372,37373,37374,37375,37376,37377,37378,37379,37380,37381,37382,37383,37384,37385,37386,37387,37388,37389,37390,37391,37392,37393,37394,37395,37396,37397,37398,37399,37400,37401,37402,37403,37404,37405,37406,37407,37408,37409,37410,37411,37412,37413,37414,37415,37416,37417,37418,37419,37420,37421,37422,37423,37424,37425,37426,37427,37428,37429,37430,37431,37432,37433,37434,37435,37436,37437,37438,37439,37440,37441,37442,37443,37444,37445,29435,29463,29459,29473,29450,29470,29469,29461,29474,29497,29477,29484,29496,29489,29520,29517,29527,29536,29548,29551,29566,33307,22821,39143,22820,22786,39267,39271,39272,39273,39274,39275,39276,39284,39287,39293,39296,39300,39303,39306,39309,39312,39313,39315,39316,39317,24192,24209,24203,24214,24229,24224,24249,24245,24254,24243,36179,24274,24273,24283,24296,24298,33210,24516,24521,24534,24527,24579,24558,24580,24545,24548,24574,24581,24582,24554,24557,24568,24601,24629,24614,24603,24591,24589,24617,24619,24586,24639,24609,24696,24697,24699,24698,24642,37446,37447,37448,37449,37450,37451,37452,37453,37454,37455,37456,37457,37458,37459,37460,37461,37462,37463,37464,37465,37466,37467,37468,37469,37470,37471,37472,37473,37474,37475,37476,37477,37478,37479,37480,37481,37482,37483,37484,37485,37486,37487,37488,37489,37490,37491,37493,37494,37495,37496,37497,37498,37499,37500,37501,37502,37503,37504,37505,37506,37507,37508,37509,37510,37511,37512,37513,37514,37515,37516,37517,37519,37520,37521,37522,37523,37524,37525,37526,37527,37528,37529,37530,37531,37532,37533,37534,37535,37536,37537,37538,37539,37540,37541,37542,37543,24682,24701,24726,24730,24749,24733,24707,24722,24716,24731,24812,24763,24753,24797,24792,24774,24794,24756,24864,24870,24853,24867,24820,24832,24846,24875,24906,24949,25004,24980,24999,25015,25044,25077,24541,38579,38377,38379,38385,38387,38389,38390,38396,38398,38403,38404,38406,38408,38410,38411,38412,38413,38415,38418,38421,38422,38423,38425,38426,20012,29247,25109,27701,27732,27740,27722,27811,27781,27792,27796,27788,27752,27753,27764,27766,27782,27817,27856,27860,27821,27895,27896,27889,27863,27826,27872,27862,27898,27883,27886,27825,27859,27887,27902,37544,37545,37546,37547,37548,37549,37551,37552,37553,37554,37555,37556,37557,37558,37559,37560,37561,37562,37563,37564,37565,37566,37567,37568,37569,37570,37571,37572,37573,37574,37575,37577,37578,37579,37580,37581,37582,37583,37584,37585,37586,37587,37588,37589,37590,37591,37592,37593,37594,37595,37596,37597,37598,37599,37600,37601,37602,37603,37604,37605,37606,37607,37608,37609,37610,37611,37612,37613,37614,37615,37616,37617,37618,37619,37620,37621,37622,37623,37624,37625,37626,37627,37628,37629,37630,37631,37632,37633,37634,37635,37636,37637,37638,37639,37640,37641,27961,27943,27916,27971,27976,27911,27908,27929,27918,27947,27981,27950,27957,27930,27983,27986,27988,27955,28049,28015,28062,28064,27998,28051,28052,27996,28e3,28028,28003,28186,28103,28101,28126,28174,28095,28128,28177,28134,28125,28121,28182,28075,28172,28078,28203,28270,28238,28267,28338,28255,28294,28243,28244,28210,28197,28228,28383,28337,28312,28384,28461,28386,28325,28327,28349,28347,28343,28375,28340,28367,28303,28354,28319,28514,28486,28487,28452,28437,28409,28463,28470,28491,28532,28458,28425,28457,28553,28557,28556,28536,28530,28540,28538,28625,37642,37643,37644,37645,37646,37647,37648,37649,37650,37651,37652,37653,37654,37655,37656,37657,37658,37659,37660,37661,37662,37663,37664,37665,37666,37667,37668,37669,37670,37671,37672,37673,37674,37675,37676,37677,37678,37679,37680,37681,37682,37683,37684,37685,37686,37687,37688,37689,37690,37691,37692,37693,37695,37696,37697,37698,37699,37700,37701,37702,37703,37704,37705,37706,37707,37708,37709,37710,37711,37712,37713,37714,37715,37716,37717,37718,37719,37720,37721,37722,37723,37724,37725,37726,37727,37728,37729,37730,37731,37732,37733,37734,37735,37736,37737,37739,28617,28583,28601,28598,28610,28641,28654,28638,28640,28655,28698,28707,28699,28729,28725,28751,28766,23424,23428,23445,23443,23461,23480,29999,39582,25652,23524,23534,35120,23536,36423,35591,36790,36819,36821,36837,36846,36836,36841,36838,36851,36840,36869,36868,36875,36902,36881,36877,36886,36897,36917,36918,36909,36911,36932,36945,36946,36944,36968,36952,36962,36955,26297,36980,36989,36994,37e3,36995,37003,24400,24407,24406,24408,23611,21675,23632,23641,23409,23651,23654,32700,24362,24361,24365,33396,24380,39739,23662,22913,22915,22925,22953,22954,22947,37740,37741,37742,37743,37744,37745,37746,37747,37748,37749,37750,37751,37752,37753,37754,37755,37756,37757,37758,37759,37760,37761,37762,37763,37764,37765,37766,37767,37768,37769,37770,37771,37772,37773,37774,37776,37777,37778,37779,37780,37781,37782,37783,37784,37785,37786,37787,37788,37789,37790,37791,37792,37793,37794,37795,37796,37797,37798,37799,37800,37801,37802,37803,37804,37805,37806,37807,37808,37809,37810,37811,37812,37813,37814,37815,37816,37817,37818,37819,37820,37821,37822,37823,37824,37825,37826,37827,37828,37829,37830,37831,37832,37833,37835,37836,37837,22935,22986,22955,22942,22948,22994,22962,22959,22999,22974,23045,23046,23005,23048,23011,23e3,23033,23052,23049,23090,23092,23057,23075,23059,23104,23143,23114,23125,23100,23138,23157,33004,23210,23195,23159,23162,23230,23275,23218,23250,23252,23224,23264,23267,23281,23254,23270,23256,23260,23305,23319,23318,23346,23351,23360,23573,23580,23386,23397,23411,23377,23379,23394,39541,39543,39544,39546,39551,39549,39552,39553,39557,39560,39562,39568,39570,39571,39574,39576,39579,39580,39581,39583,39584,39586,39587,39589,39591,32415,32417,32419,32421,32424,32425,37838,37839,37840,37841,37842,37843,37844,37845,37847,37848,37849,37850,37851,37852,37853,37854,37855,37856,37857,37858,37859,37860,37861,37862,37863,37864,37865,37866,37867,37868,37869,37870,37871,37872,37873,37874,37875,37876,37877,37878,37879,37880,37881,37882,37883,37884,37885,37886,37887,37888,37889,37890,37891,37892,37893,37894,37895,37896,37897,37898,37899,37900,37901,37902,37903,37904,37905,37906,37907,37908,37909,37910,37911,37912,37913,37914,37915,37916,37917,37918,37919,37920,37921,37922,37923,37924,37925,37926,37927,37928,37929,37930,37931,37932,37933,37934,32429,32432,32446,32448,32449,32450,32457,32459,32460,32464,32468,32471,32475,32480,32481,32488,32491,32494,32495,32497,32498,32525,32502,32506,32507,32510,32513,32514,32515,32519,32520,32523,32524,32527,32529,32530,32535,32537,32540,32539,32543,32545,32546,32547,32548,32549,32550,32551,32554,32555,32556,32557,32559,32560,32561,32562,32563,32565,24186,30079,24027,30014,37013,29582,29585,29614,29602,29599,29647,29634,29649,29623,29619,29632,29641,29640,29669,29657,39036,29706,29673,29671,29662,29626,29682,29711,29738,29787,29734,29733,29736,29744,29742,29740,37935,37936,37937,37938,37939,37940,37941,37942,37943,37944,37945,37946,37947,37948,37949,37951,37952,37953,37954,37955,37956,37957,37958,37959,37960,37961,37962,37963,37964,37965,37966,37967,37968,37969,37970,37971,37972,37973,37974,37975,37976,37977,37978,37979,37980,37981,37982,37983,37984,37985,37986,37987,37988,37989,37990,37991,37992,37993,37994,37996,37997,37998,37999,38e3,38001,38002,38003,38004,38005,38006,38007,38008,38009,38010,38011,38012,38013,38014,38015,38016,38017,38018,38019,38020,38033,38038,38040,38087,38095,38099,38100,38106,38118,38139,38172,38176,29723,29722,29761,29788,29783,29781,29785,29815,29805,29822,29852,29838,29824,29825,29831,29835,29854,29864,29865,29840,29863,29906,29882,38890,38891,38892,26444,26451,26462,26440,26473,26533,26503,26474,26483,26520,26535,26485,26536,26526,26541,26507,26487,26492,26608,26633,26584,26634,26601,26544,26636,26585,26549,26586,26547,26589,26624,26563,26552,26594,26638,26561,26621,26674,26675,26720,26721,26702,26722,26692,26724,26755,26653,26709,26726,26689,26727,26688,26686,26698,26697,26665,26805,26767,26740,26743,26771,26731,26818,26990,26876,26911,26912,26873,38183,38195,38205,38211,38216,38219,38229,38234,38240,38254,38260,38261,38263,38264,38265,38266,38267,38268,38269,38270,38272,38273,38274,38275,38276,38277,38278,38279,38280,38281,38282,38283,38284,38285,38286,38287,38288,38289,38290,38291,38292,38293,38294,38295,38296,38297,38298,38299,38300,38301,38302,38303,38304,38305,38306,38307,38308,38309,38310,38311,38312,38313,38314,38315,38316,38317,38318,38319,38320,38321,38322,38323,38324,38325,38326,38327,38328,38329,38330,38331,38332,38333,38334,38335,38336,38337,38338,38339,38340,38341,38342,38343,38344,38345,38346,38347,26916,26864,26891,26881,26967,26851,26896,26993,26937,26976,26946,26973,27012,26987,27008,27032,27e3,26932,27084,27015,27016,27086,27017,26982,26979,27001,27035,27047,27067,27051,27053,27092,27057,27073,27082,27103,27029,27104,27021,27135,27183,27117,27159,27160,27237,27122,27204,27198,27296,27216,27227,27189,27278,27257,27197,27176,27224,27260,27281,27280,27305,27287,27307,29495,29522,27521,27522,27527,27524,27538,27539,27533,27546,27547,27553,27562,36715,36717,36721,36722,36723,36725,36726,36728,36727,36729,36730,36732,36734,36737,36738,36740,36743,36747,38348,38349,38350,38351,38352,38353,38354,38355,38356,38357,38358,38359,38360,38361,38362,38363,38364,38365,38366,38367,38368,38369,38370,38371,38372,38373,38374,38375,38380,38399,38407,38419,38424,38427,38430,38432,38435,38436,38437,38438,38439,38440,38441,38443,38444,38445,38447,38448,38455,38456,38457,38458,38462,38465,38467,38474,38478,38479,38481,38482,38483,38486,38487,38488,38489,38490,38492,38493,38494,38496,38499,38501,38502,38507,38509,38510,38511,38512,38513,38515,38520,38521,38522,38523,38524,38525,38526,38527,38528,38529,38530,38531,38532,38535,38537,38538,36749,36750,36751,36760,36762,36558,25099,25111,25115,25119,25122,25121,25125,25124,25132,33255,29935,29940,29951,29967,29969,29971,25908,26094,26095,26096,26122,26137,26482,26115,26133,26112,28805,26359,26141,26164,26161,26166,26165,32774,26207,26196,26177,26191,26198,26209,26199,26231,26244,26252,26279,26269,26302,26331,26332,26342,26345,36146,36147,36150,36155,36157,36160,36165,36166,36168,36169,36167,36173,36181,36185,35271,35274,35275,35276,35278,35279,35280,35281,29294,29343,29277,29286,29295,29310,29311,29316,29323,29325,29327,29330,25352,25394,25520,38540,38542,38545,38546,38547,38549,38550,38554,38555,38557,38558,38559,38560,38561,38562,38563,38564,38565,38566,38568,38569,38570,38571,38572,38573,38574,38575,38577,38578,38580,38581,38583,38584,38586,38587,38591,38594,38595,38600,38602,38603,38608,38609,38611,38612,38614,38615,38616,38617,38618,38619,38620,38621,38622,38623,38625,38626,38627,38628,38629,38630,38631,38635,38636,38637,38638,38640,38641,38642,38644,38645,38648,38650,38651,38652,38653,38655,38658,38659,38661,38666,38667,38668,38672,38673,38674,38676,38677,38679,38680,38681,38682,38683,38685,38687,38688,25663,25816,32772,27626,27635,27645,27637,27641,27653,27655,27654,27661,27669,27672,27673,27674,27681,27689,27684,27690,27698,25909,25941,25963,29261,29266,29270,29232,34402,21014,32927,32924,32915,32956,26378,32957,32945,32939,32941,32948,32951,32999,33e3,33001,33002,32987,32962,32964,32985,32973,32983,26384,32989,33003,33009,33012,33005,33037,33038,33010,33020,26389,33042,35930,33078,33054,33068,33048,33074,33096,33100,33107,33140,33113,33114,33137,33120,33129,33148,33149,33133,33127,22605,23221,33160,33154,33169,28373,33187,33194,33228,26406,33226,33211,38689,38690,38691,38692,38693,38694,38695,38696,38697,38699,38700,38702,38703,38705,38707,38708,38709,38710,38711,38714,38715,38716,38717,38719,38720,38721,38722,38723,38724,38725,38726,38727,38728,38729,38730,38731,38732,38733,38734,38735,38736,38737,38740,38741,38743,38744,38746,38748,38749,38751,38755,38756,38758,38759,38760,38762,38763,38764,38765,38766,38767,38768,38769,38770,38773,38775,38776,38777,38778,38779,38781,38782,38783,38784,38785,38786,38787,38788,38790,38791,38792,38793,38794,38796,38798,38799,38800,38803,38805,38806,38807,38809,38810,38811,38812,38813,33217,33190,27428,27447,27449,27459,27462,27481,39121,39122,39123,39125,39129,39130,27571,24384,27586,35315,26e3,40785,26003,26044,26054,26052,26051,26060,26062,26066,26070,28800,28828,28822,28829,28859,28864,28855,28843,28849,28904,28874,28944,28947,28950,28975,28977,29043,29020,29032,28997,29042,29002,29048,29050,29080,29107,29109,29096,29088,29152,29140,29159,29177,29213,29224,28780,28952,29030,29113,25150,25149,25155,25160,25161,31035,31040,31046,31049,31067,31068,31059,31066,31074,31063,31072,31087,31079,31098,31109,31114,31130,31143,31155,24529,24528,38814,38815,38817,38818,38820,38821,38822,38823,38824,38825,38826,38828,38830,38832,38833,38835,38837,38838,38839,38840,38841,38842,38843,38844,38845,38846,38847,38848,38849,38850,38851,38852,38853,38854,38855,38856,38857,38858,38859,38860,38861,38862,38863,38864,38865,38866,38867,38868,38869,38870,38871,38872,38873,38874,38875,38876,38877,38878,38879,38880,38881,38882,38883,38884,38885,38888,38894,38895,38896,38897,38898,38900,38903,38904,38905,38906,38907,38908,38909,38910,38911,38912,38913,38914,38915,38916,38917,38918,38919,38920,38921,38922,38923,38924,38925,38926,24636,24669,24666,24679,24641,24665,24675,24747,24838,24845,24925,25001,24989,25035,25041,25094,32896,32895,27795,27894,28156,30710,30712,30720,30729,30743,30744,30737,26027,30765,30748,30749,30777,30778,30779,30751,30780,30757,30764,30755,30761,30798,30829,30806,30807,30758,30800,30791,30796,30826,30875,30867,30874,30855,30876,30881,30883,30898,30905,30885,30932,30937,30921,30956,30962,30981,30964,30995,31012,31006,31028,40859,40697,40699,40700,30449,30468,30477,30457,30471,30472,30490,30498,30489,30509,30502,30517,30520,30544,30545,30535,30531,30554,30568,38927,38928,38929,38930,38931,38932,38933,38934,38935,38936,38937,38938,38939,38940,38941,38942,38943,38944,38945,38946,38947,38948,38949,38950,38951,38952,38953,38954,38955,38956,38957,38958,38959,38960,38961,38962,38963,38964,38965,38966,38967,38968,38969,38970,38971,38972,38973,38974,38975,38976,38977,38978,38979,38980,38981,38982,38983,38984,38985,38986,38987,38988,38989,38990,38991,38992,38993,38994,38995,38996,38997,38998,38999,39e3,39001,39002,39003,39004,39005,39006,39007,39008,39009,39010,39011,39012,39013,39014,39015,39016,39017,39018,39019,39020,39021,39022,30562,30565,30591,30605,30589,30592,30604,30609,30623,30624,30640,30645,30653,30010,30016,30030,30027,30024,30043,30066,30073,30083,32600,32609,32607,35400,32616,32628,32625,32633,32641,32638,30413,30437,34866,38021,38022,38023,38027,38026,38028,38029,38031,38032,38036,38039,38037,38042,38043,38044,38051,38052,38059,38058,38061,38060,38063,38064,38066,38068,38070,38071,38072,38073,38074,38076,38077,38079,38084,38088,38089,38090,38091,38092,38093,38094,38096,38097,38098,38101,38102,38103,38105,38104,38107,38110,38111,38112,38114,38116,38117,38119,38120,38122,39023,39024,39025,39026,39027,39028,39051,39054,39058,39061,39065,39075,39080,39081,39082,39083,39084,39085,39086,39087,39088,39089,39090,39091,39092,39093,39094,39095,39096,39097,39098,39099,39100,39101,39102,39103,39104,39105,39106,39107,39108,39109,39110,39111,39112,39113,39114,39115,39116,39117,39119,39120,39124,39126,39127,39131,39132,39133,39136,39137,39138,39139,39140,39141,39142,39145,39146,39147,39148,39149,39150,39151,39152,39153,39154,39155,39156,39157,39158,39159,39160,39161,39162,39163,39164,39165,39166,39167,39168,39169,39170,39171,39172,39173,39174,39175,38121,38123,38126,38127,38131,38132,38133,38135,38137,38140,38141,38143,38147,38146,38150,38151,38153,38154,38157,38158,38159,38162,38163,38164,38165,38166,38168,38171,38173,38174,38175,38178,38186,38187,38185,38188,38193,38194,38196,38198,38199,38200,38204,38206,38207,38210,38197,38212,38213,38214,38217,38220,38222,38223,38226,38227,38228,38230,38231,38232,38233,38235,38238,38239,38237,38241,38242,38244,38245,38246,38247,38248,38249,38250,38251,38252,38255,38257,38258,38259,38202,30695,30700,38601,31189,31213,31203,31211,31238,23879,31235,31234,31262,31252,39176,39177,39178,39179,39180,39182,39183,39185,39186,39187,39188,39189,39190,39191,39192,39193,39194,39195,39196,39197,39198,39199,39200,39201,39202,39203,39204,39205,39206,39207,39208,39209,39210,39211,39212,39213,39215,39216,39217,39218,39219,39220,39221,39222,39223,39224,39225,39226,39227,39228,39229,39230,39231,39232,39233,39234,39235,39236,39237,39238,39239,39240,39241,39242,39243,39244,39245,39246,39247,39248,39249,39250,39251,39254,39255,39256,39257,39258,39259,39260,39261,39262,39263,39264,39265,39266,39268,39270,39283,39288,39289,39291,39294,39298,39299,39305,31289,31287,31313,40655,39333,31344,30344,30350,30355,30361,30372,29918,29920,29996,40480,40482,40488,40489,40490,40491,40492,40498,40497,40502,40504,40503,40505,40506,40510,40513,40514,40516,40518,40519,40520,40521,40523,40524,40526,40529,40533,40535,40538,40539,40540,40542,40547,40550,40551,40552,40553,40554,40555,40556,40561,40557,40563,30098,30100,30102,30112,30109,30124,30115,30131,30132,30136,30148,30129,30128,30147,30146,30166,30157,30179,30184,30182,30180,30187,30183,30211,30193,30204,30207,30224,30208,30213,30220,30231,30218,30245,30232,30229,30233,39308,39310,39322,39323,39324,39325,39326,39327,39328,39329,39330,39331,39332,39334,39335,39337,39338,39339,39340,39341,39342,39343,39344,39345,39346,39347,39348,39349,39350,39351,39352,39353,39354,39355,39356,39357,39358,39359,39360,39361,39362,39363,39364,39365,39366,39367,39368,39369,39370,39371,39372,39373,39374,39375,39376,39377,39378,39379,39380,39381,39382,39383,39384,39385,39386,39387,39388,39389,39390,39391,39392,39393,39394,39395,39396,39397,39398,39399,39400,39401,39402,39403,39404,39405,39406,39407,39408,39409,39410,39411,39412,39413,39414,39415,39416,39417,30235,30268,30242,30240,30272,30253,30256,30271,30261,30275,30270,30259,30285,30302,30292,30300,30294,30315,30319,32714,31462,31352,31353,31360,31366,31368,31381,31398,31392,31404,31400,31405,31411,34916,34921,34930,34941,34943,34946,34978,35014,34999,35004,35017,35042,35022,35043,35045,35057,35098,35068,35048,35070,35056,35105,35097,35091,35099,35082,35124,35115,35126,35137,35174,35195,30091,32997,30386,30388,30684,32786,32788,32790,32796,32800,32802,32805,32806,32807,32809,32808,32817,32779,32821,32835,32838,32845,32850,32873,32881,35203,39032,39040,39043,39418,39419,39420,39421,39422,39423,39424,39425,39426,39427,39428,39429,39430,39431,39432,39433,39434,39435,39436,39437,39438,39439,39440,39441,39442,39443,39444,39445,39446,39447,39448,39449,39450,39451,39452,39453,39454,39455,39456,39457,39458,39459,39460,39461,39462,39463,39464,39465,39466,39467,39468,39469,39470,39471,39472,39473,39474,39475,39476,39477,39478,39479,39480,39481,39482,39483,39484,39485,39486,39487,39488,39489,39490,39491,39492,39493,39494,39495,39496,39497,39498,39499,39500,39501,39502,39503,39504,39505,39506,39507,39508,39509,39510,39511,39512,39513,39049,39052,39053,39055,39060,39066,39067,39070,39071,39073,39074,39077,39078,34381,34388,34412,34414,34431,34426,34428,34427,34472,34445,34443,34476,34461,34471,34467,34474,34451,34473,34486,34500,34485,34510,34480,34490,34481,34479,34505,34511,34484,34537,34545,34546,34541,34547,34512,34579,34526,34548,34527,34520,34513,34563,34567,34552,34568,34570,34573,34569,34595,34619,34590,34597,34606,34586,34622,34632,34612,34609,34601,34615,34623,34690,34594,34685,34686,34683,34656,34672,34636,34670,34699,34643,34659,34684,34660,34649,34661,34707,34735,34728,34770,39514,39515,39516,39517,39518,39519,39520,39521,39522,39523,39524,39525,39526,39527,39528,39529,39530,39531,39538,39555,39561,39565,39566,39572,39573,39577,39590,39593,39594,39595,39596,39597,39598,39599,39602,39603,39604,39605,39609,39611,39613,39614,39615,39619,39620,39622,39623,39624,39625,39626,39629,39630,39631,39632,39634,39636,39637,39638,39639,39641,39642,39643,39644,39645,39646,39648,39650,39651,39652,39653,39655,39656,39657,39658,39660,39662,39664,39665,39666,39667,39668,39669,39670,39671,39672,39674,39676,39677,39678,39679,39680,39681,39682,39684,39685,39686,34758,34696,34693,34733,34711,34691,34731,34789,34732,34741,34739,34763,34771,34749,34769,34752,34762,34779,34794,34784,34798,34838,34835,34814,34826,34843,34849,34873,34876,32566,32578,32580,32581,33296,31482,31485,31496,31491,31492,31509,31498,31531,31503,31559,31544,31530,31513,31534,31537,31520,31525,31524,31539,31550,31518,31576,31578,31557,31605,31564,31581,31584,31598,31611,31586,31602,31601,31632,31654,31655,31672,31660,31645,31656,31621,31658,31644,31650,31659,31668,31697,31681,31692,31709,31706,31717,31718,31722,31756,31742,31740,31759,31766,31755,39687,39689,39690,39691,39692,39693,39694,39696,39697,39698,39700,39701,39702,39703,39704,39705,39706,39707,39708,39709,39710,39712,39713,39714,39716,39717,39718,39719,39720,39721,39722,39723,39724,39725,39726,39728,39729,39731,39732,39733,39734,39735,39736,39737,39738,39741,39742,39743,39744,39750,39754,39755,39756,39758,39760,39762,39763,39765,39766,39767,39768,39769,39770,39771,39772,39773,39774,39775,39776,39777,39778,39779,39780,39781,39782,39783,39784,39785,39786,39787,39788,39789,39790,39791,39792,39793,39794,39795,39796,39797,39798,39799,39800,39801,39802,39803,31775,31786,31782,31800,31809,31808,33278,33281,33282,33284,33260,34884,33313,33314,33315,33325,33327,33320,33323,33336,33339,33331,33332,33342,33348,33353,33355,33359,33370,33375,33384,34942,34949,34952,35032,35039,35166,32669,32671,32679,32687,32688,32690,31868,25929,31889,31901,31900,31902,31906,31922,31932,31933,31937,31943,31948,31949,31944,31941,31959,31976,33390,26280,32703,32718,32725,32741,32737,32742,32745,32750,32755,31992,32119,32166,32174,32327,32411,40632,40628,36211,36228,36244,36241,36273,36199,36205,35911,35913,37194,37200,37198,37199,37220,39804,39805,39806,39807,39808,39809,39810,39811,39812,39813,39814,39815,39816,39817,39818,39819,39820,39821,39822,39823,39824,39825,39826,39827,39828,39829,39830,39831,39832,39833,39834,39835,39836,39837,39838,39839,39840,39841,39842,39843,39844,39845,39846,39847,39848,39849,39850,39851,39852,39853,39854,39855,39856,39857,39858,39859,39860,39861,39862,39863,39864,39865,39866,39867,39868,39869,39870,39871,39872,39873,39874,39875,39876,39877,39878,39879,39880,39881,39882,39883,39884,39885,39886,39887,39888,39889,39890,39891,39892,39893,39894,39895,39896,39897,39898,39899,37218,37217,37232,37225,37231,37245,37246,37234,37236,37241,37260,37253,37264,37261,37265,37282,37283,37290,37293,37294,37295,37301,37300,37306,35925,40574,36280,36331,36357,36441,36457,36277,36287,36284,36282,36292,36310,36311,36314,36318,36302,36303,36315,36294,36332,36343,36344,36323,36345,36347,36324,36361,36349,36372,36381,36383,36396,36398,36387,36399,36410,36416,36409,36405,36413,36401,36425,36417,36418,36433,36434,36426,36464,36470,36476,36463,36468,36485,36495,36500,36496,36508,36510,35960,35970,35978,35973,35992,35988,26011,35286,35294,35290,35292,39900,39901,39902,39903,39904,39905,39906,39907,39908,39909,39910,39911,39912,39913,39914,39915,39916,39917,39918,39919,39920,39921,39922,39923,39924,39925,39926,39927,39928,39929,39930,39931,39932,39933,39934,39935,39936,39937,39938,39939,39940,39941,39942,39943,39944,39945,39946,39947,39948,39949,39950,39951,39952,39953,39954,39955,39956,39957,39958,39959,39960,39961,39962,39963,39964,39965,39966,39967,39968,39969,39970,39971,39972,39973,39974,39975,39976,39977,39978,39979,39980,39981,39982,39983,39984,39985,39986,39987,39988,39989,39990,39991,39992,39993,39994,39995,35301,35307,35311,35390,35622,38739,38633,38643,38639,38662,38657,38664,38671,38670,38698,38701,38704,38718,40832,40835,40837,40838,40839,40840,40841,40842,40844,40702,40715,40717,38585,38588,38589,38606,38610,30655,38624,37518,37550,37576,37694,37738,37834,37775,37950,37995,40063,40066,40069,40070,40071,40072,31267,40075,40078,40080,40081,40082,40084,40085,40090,40091,40094,40095,40096,40097,40098,40099,40101,40102,40103,40104,40105,40107,40109,40110,40112,40113,40114,40115,40116,40117,40118,40119,40122,40123,40124,40125,40132,40133,40134,40135,40138,40139,39996,39997,39998,39999,4e4,40001,40002,40003,40004,40005,40006,40007,40008,40009,40010,40011,40012,40013,40014,40015,40016,40017,40018,40019,40020,40021,40022,40023,40024,40025,40026,40027,40028,40029,40030,40031,40032,40033,40034,40035,40036,40037,40038,40039,40040,40041,40042,40043,40044,40045,40046,40047,40048,40049,40050,40051,40052,40053,40054,40055,40056,40057,40058,40059,40061,40062,40064,40067,40068,40073,40074,40076,40079,40083,40086,40087,40088,40089,40093,40106,40108,40111,40121,40126,40127,40128,40129,40130,40136,40137,40145,40146,40154,40155,40160,40161,40140,40141,40142,40143,40144,40147,40148,40149,40151,40152,40153,40156,40157,40159,40162,38780,38789,38801,38802,38804,38831,38827,38819,38834,38836,39601,39600,39607,40536,39606,39610,39612,39617,39616,39621,39618,39627,39628,39633,39749,39747,39751,39753,39752,39757,39761,39144,39181,39214,39253,39252,39647,39649,39654,39663,39659,39675,39661,39673,39688,39695,39699,39711,39715,40637,40638,32315,40578,40583,40584,40587,40594,37846,40605,40607,40667,40668,40669,40672,40671,40674,40681,40679,40677,40682,40687,40738,40748,40751,40761,40759,40765,40766,40772,40163,40164,40165,40166,40167,40168,40169,40170,40171,40172,40173,40174,40175,40176,40177,40178,40179,40180,40181,40182,40183,40184,40185,40186,40187,40188,40189,40190,40191,40192,40193,40194,40195,40196,40197,40198,40199,40200,40201,40202,40203,40204,40205,40206,40207,40208,40209,40210,40211,40212,40213,40214,40215,40216,40217,40218,40219,40220,40221,40222,40223,40224,40225,40226,40227,40228,40229,40230,40231,40232,40233,40234,40235,40236,40237,40238,40239,40240,40241,40242,40243,40244,40245,40246,40247,40248,40249,40250,40251,40252,40253,40254,40255,40256,40257,40258,57908,57909,57910,57911,57912,57913,57914,57915,57916,57917,57918,57919,57920,57921,57922,57923,57924,57925,57926,57927,57928,57929,57930,57931,57932,57933,57934,57935,57936,57937,57938,57939,57940,57941,57942,57943,57944,57945,57946,57947,57948,57949,57950,57951,57952,57953,57954,57955,57956,57957,57958,57959,57960,57961,57962,57963,57964,57965,57966,57967,57968,57969,57970,57971,57972,57973,57974,57975,57976,57977,57978,57979,57980,57981,57982,57983,57984,57985,57986,57987,57988,57989,57990,57991,57992,57993,57994,57995,57996,57997,57998,57999,58e3,58001,40259,40260,40261,40262,40263,40264,40265,40266,40267,40268,40269,40270,40271,40272,40273,40274,40275,40276,40277,40278,40279,40280,40281,40282,40283,40284,40285,40286,40287,40288,40289,40290,40291,40292,40293,40294,40295,40296,40297,40298,40299,40300,40301,40302,40303,40304,40305,40306,40307,40308,40309,40310,40311,40312,40313,40314,40315,40316,40317,40318,40319,40320,40321,40322,40323,40324,40325,40326,40327,40328,40329,40330,40331,40332,40333,40334,40335,40336,40337,40338,40339,40340,40341,40342,40343,40344,40345,40346,40347,40348,40349,40350,40351,40352,40353,40354,58002,58003,58004,58005,58006,58007,58008,58009,58010,58011,58012,58013,58014,58015,58016,58017,58018,58019,58020,58021,58022,58023,58024,58025,58026,58027,58028,58029,58030,58031,58032,58033,58034,58035,58036,58037,58038,58039,58040,58041,58042,58043,58044,58045,58046,58047,58048,58049,58050,58051,58052,58053,58054,58055,58056,58057,58058,58059,58060,58061,58062,58063,58064,58065,58066,58067,58068,58069,58070,58071,58072,58073,58074,58075,58076,58077,58078,58079,58080,58081,58082,58083,58084,58085,58086,58087,58088,58089,58090,58091,58092,58093,58094,58095,40355,40356,40357,40358,40359,40360,40361,40362,40363,40364,40365,40366,40367,40368,40369,40370,40371,40372,40373,40374,40375,40376,40377,40378,40379,40380,40381,40382,40383,40384,40385,40386,40387,40388,40389,40390,40391,40392,40393,40394,40395,40396,40397,40398,40399,40400,40401,40402,40403,40404,40405,40406,40407,40408,40409,40410,40411,40412,40413,40414,40415,40416,40417,40418,40419,40420,40421,40422,40423,40424,40425,40426,40427,40428,40429,40430,40431,40432,40433,40434,40435,40436,40437,40438,40439,40440,40441,40442,40443,40444,40445,40446,40447,40448,40449,40450,58096,58097,58098,58099,58100,58101,58102,58103,58104,58105,58106,58107,58108,58109,58110,58111,58112,58113,58114,58115,58116,58117,58118,58119,58120,58121,58122,58123,58124,58125,58126,58127,58128,58129,58130,58131,58132,58133,58134,58135,58136,58137,58138,58139,58140,58141,58142,58143,58144,58145,58146,58147,58148,58149,58150,58151,58152,58153,58154,58155,58156,58157,58158,58159,58160,58161,58162,58163,58164,58165,58166,58167,58168,58169,58170,58171,58172,58173,58174,58175,58176,58177,58178,58179,58180,58181,58182,58183,58184,58185,58186,58187,58188,58189,40451,40452,40453,40454,40455,40456,40457,40458,40459,40460,40461,40462,40463,40464,40465,40466,40467,40468,40469,40470,40471,40472,40473,40474,40475,40476,40477,40478,40484,40487,40494,40496,40500,40507,40508,40512,40525,40528,40530,40531,40532,40534,40537,40541,40543,40544,40545,40546,40549,40558,40559,40562,40564,40565,40566,40567,40568,40569,40570,40571,40572,40573,40576,40577,40579,40580,40581,40582,40585,40586,40588,40589,40590,40591,40592,40593,40596,40597,40598,40599,40600,40601,40602,40603,40604,40606,40608,40609,40610,40611,40612,40613,40615,40616,40617,40618,58190,58191,58192,58193,58194,58195,58196,58197,58198,58199,58200,58201,58202,58203,58204,58205,58206,58207,58208,58209,58210,58211,58212,58213,58214,58215,58216,58217,58218,58219,58220,58221,58222,58223,58224,58225,58226,58227,58228,58229,58230,58231,58232,58233,58234,58235,58236,58237,58238,58239,58240,58241,58242,58243,58244,58245,58246,58247,58248,58249,58250,58251,58252,58253,58254,58255,58256,58257,58258,58259,58260,58261,58262,58263,58264,58265,58266,58267,58268,58269,58270,58271,58272,58273,58274,58275,58276,58277,58278,58279,58280,58281,58282,58283,40619,40620,40621,40622,40623,40624,40625,40626,40627,40629,40630,40631,40633,40634,40636,40639,40640,40641,40642,40643,40645,40646,40647,40648,40650,40651,40652,40656,40658,40659,40661,40662,40663,40665,40666,40670,40673,40675,40676,40678,40680,40683,40684,40685,40686,40688,40689,40690,40691,40692,40693,40694,40695,40696,40698,40701,40703,40704,40705,40706,40707,40708,40709,40710,40711,40712,40713,40714,40716,40719,40721,40722,40724,40725,40726,40728,40730,40731,40732,40733,40734,40735,40737,40739,40740,40741,40742,40743,40744,40745,40746,40747,40749,40750,40752,40753,58284,58285,58286,58287,58288,58289,58290,58291,58292,58293,58294,58295,58296,58297,58298,58299,58300,58301,58302,58303,58304,58305,58306,58307,58308,58309,58310,58311,58312,58313,58314,58315,58316,58317,58318,58319,58320,58321,58322,58323,58324,58325,58326,58327,58328,58329,58330,58331,58332,58333,58334,58335,58336,58337,58338,58339,58340,58341,58342,58343,58344,58345,58346,58347,58348,58349,58350,58351,58352,58353,58354,58355,58356,58357,58358,58359,58360,58361,58362,58363,58364,58365,58366,58367,58368,58369,58370,58371,58372,58373,58374,58375,58376,58377,40754,40755,40756,40757,40758,40760,40762,40764,40767,40768,40769,40770,40771,40773,40774,40775,40776,40777,40778,40779,40780,40781,40782,40783,40786,40787,40788,40789,40790,40791,40792,40793,40794,40795,40796,40797,40798,40799,40800,40801,40802,40803,40804,40805,40806,40807,40808,40809,40810,40811,40812,40813,40814,40815,40816,40817,40818,40819,40820,40821,40822,40823,40824,40825,40826,40827,40828,40829,40830,40833,40834,40845,40846,40847,40848,40849,40850,40851,40852,40853,40854,40855,40856,40860,40861,40862,40865,40866,40867,40868,40869,63788,63865,63893,63975,63985,58378,58379,58380,58381,58382,58383,58384,58385,58386,58387,58388,58389,58390,58391,58392,58393,58394,58395,58396,58397,58398,58399,58400,58401,58402,58403,58404,58405,58406,58407,58408,58409,58410,58411,58412,58413,58414,58415,58416,58417,58418,58419,58420,58421,58422,58423,58424,58425,58426,58427,58428,58429,58430,58431,58432,58433,58434,58435,58436,58437,58438,58439,58440,58441,58442,58443,58444,58445,58446,58447,58448,58449,58450,58451,58452,58453,58454,58455,58456,58457,58458,58459,58460,58461,58462,58463,58464,58465,58466,58467,58468,58469,58470,58471,64012,64013,64014,64015,64017,64019,64020,64024,64031,64032,64033,64035,64036,64039,64040,64041,11905,59414,59415,59416,11908,13427,13383,11912,11915,59422,13726,13850,13838,11916,11927,14702,14616,59430,14799,14815,14963,14800,59435,59436,15182,15470,15584,11943,59441,59442,11946,16470,16735,11950,17207,11955,11958,11959,59451,17329,17324,11963,17373,17622,18017,17996,59459,18211,18217,18300,18317,11978,18759,18810,18813,18818,18819,18821,18822,18847,18843,18871,18870,59476,59477,19619,19615,19616,19617,19575,19618,19731,19732,19733,19734,19735,19736,19737,19886,59492,58472,58473,58474,58475,58476,58477,58478,58479,58480,58481,58482,58483,58484,58485,58486,58487,58488,58489,58490,58491,58492,58493,58494,58495,58496,58497,58498,58499,58500,58501,58502,58503,58504,58505,58506,58507,58508,58509,58510,58511,58512,58513,58514,58515,58516,58517,58518,58519,58520,58521,58522,58523,58524,58525,58526,58527,58528,58529,58530,58531,58532,58533,58534,58535,58536,58537,58538,58539,58540,58541,58542,58543,58544,58545,58546,58547,58548,58549,58550,58551,58552,58553,58554,58555,58556,58557,58558,58559,58560,58561,58562,58563,58564,58565],hc=[[0,128],[36,165],[38,169],[45,178],[50,184],[81,216],[89,226],[95,235],[96,238],[100,244],[103,248],[104,251],[105,253],[109,258],[126,276],[133,284],[148,300],[172,325],[175,329],[179,334],[208,364],[306,463],[307,465],[308,467],[309,469],[310,471],[311,473],[312,475],[313,477],[341,506],[428,594],[443,610],[544,712],[545,716],[558,730],[741,930],[742,938],[749,962],[750,970],[805,1026],[819,1104],[820,1106],[7922,8209],[7924,8215],[7925,8218],[7927,8222],[7934,8231],[7943,8241],[7944,8244],[7945,8246],[7950,8252],[8062,8365],[8148,8452],[8149,8454],[8152,8458],[8164,8471],[8174,8482],[8236,8556],[8240,8570],[8262,8596],[8264,8602],[8374,8713],[8380,8720],[8381,8722],[8384,8726],[8388,8731],[8390,8737],[8392,8740],[8393,8742],[8394,8748],[8396,8751],[8401,8760],[8406,8766],[8416,8777],[8419,8781],[8424,8787],[8437,8802],[8439,8808],[8445,8816],[8482,8854],[8485,8858],[8496,8870],[8521,8896],[8603,8979],[8936,9322],[8946,9372],[9046,9548],[9050,9588],[9063,9616],[9066,9622],[9076,9634],[9092,9652],[9100,9662],[9108,9672],[9111,9676],[9113,9680],[9131,9702],[9162,9735],[9164,9738],[9218,9793],[9219,9795],[11329,11906],[11331,11909],[11334,11913],[11336,11917],[11346,11928],[11361,11944],[11363,11947],[11366,11951],[11370,11956],[11372,11960],[11375,11964],[11389,11979],[11682,12284],[11686,12292],[11687,12312],[11692,12319],[11694,12330],[11714,12351],[11716,12436],[11723,12447],[11725,12535],[11730,12543],[11736,12586],[11982,12842],[11989,12850],[12102,12964],[12336,13200],[12348,13215],[12350,13218],[12384,13253],[12393,13263],[12395,13267],[12397,13270],[12510,13384],[12553,13428],[12851,13727],[12962,13839],[12973,13851],[13738,14617],[13823,14703],[13919,14801],[13933,14816],[14080,14964],[14298,15183],[14585,15471],[14698,15585],[15583,16471],[15847,16736],[16318,17208],[16434,17325],[16438,17330],[16481,17374],[16729,17623],[17102,17997],[17122,18018],[17315,18212],[17320,18218],[17402,18301],[17418,18318],[17859,18760],[17909,18811],[17911,18814],[17915,18820],[17916,18823],[17936,18844],[17939,18848],[17961,18872],[18664,19576],[18703,19620],[18814,19738],[18962,19887],[19043,40870],[33469,59244],[33470,59336],[33471,59367],[33484,59413],[33485,59417],[33490,59423],[33497,59431],[33501,59437],[33505,59443],[33513,59452],[33520,59460],[33536,59478],[33550,59493],[37845,63789],[37921,63866],[37948,63894],[38029,63976],[38038,63986],[38064,64016],[38065,64018],[38066,64021],[38069,64025],[38075,64034],[38076,64037],[38078,64042],[39108,65074],[39109,65093],[39113,65107],[39114,65112],[39115,65127],[39116,65132],[39265,65375],[39394,65510],[189e3,65536]];Object.defineProperty(M8,"__esModule",{value:!0});M8.GBDecoder=void 0;var k9=s3,qy=dc,Wy=hc,Vy=_0,Oo=x3(),Ky=w3(),D4=J2;function Gy(e){var t,r;if(e>39419&&e<189e3||e>1237575)return null;if(e===7457)return 59335;var n=0,i=0,o=Wy;try{for(var s=k9.__values(o),a=s.next();!a.done;a=s.next()){var l=a.value;if(l[0]>e)break;n=l[0],i=l[1]}}catch(u){t={error:u}}finally{try{a&&!a.done&&(r=s.return)&&r.call(s)}finally{if(t)throw t.error}}return i+e-n}var Qy=function(e){k9.__extends(t,e);function t(){var r=e!==null&&e.apply(this,arguments)||this;return r.first=0,r.second=0,r.third=0,r}return t.prototype.decode=function(r){var n,i=r.read();if(i===Oo.END_OF_BUFFER&&this.first===0&&this.second===0&&this.third===0)return Ky.FINISHED;if(i===Oo.END_OF_BUFFER&&(this.first!==0||this.second!==0||this.third!==0))return this.first=0,this.second=0,this.third=0,this.fail();var o;if(this.third!==0){o=null,(0,D4.inRange)(i,48,57)&&(o=Gy((((this.first-129)*10+this.second-48)*126+this.third-129)*10+i-48));var s=[this.second,this.third,i];return this.first=0,this.second=0,this.third=0,o??(r.write.apply(r,k9.__spreadArray([],k9.__read(s),!1)),this.fail())}if(this.second!==0)return(0,D4.inRange)(i,129,254)?(this.third=i,null):(r.write(this.second,i),this.first=0,this.second=0,this.fail());if(this.first!==0){if((0,D4.inRange)(i,48,57))return this.second=i,null;var a=this.first,l=null;this.first=0;var u=i<127?64:65;return((0,D4.inRange)(i,64,126)||(0,D4.inRange)(i,128,254))&&(l=(a-129)*190+(i-u)),o=l==null?null:(n=qy[l])!==null&&n!==void 0?n:null,o==null&&(0,D4.isASCII)(i)&&r.write(i),o??this.fail()}return(0,D4.isASCII)(i)?i:i===128?8364:(0,D4.inRange)(i,129,254)?(this.first=i,null):this.fail()},t}(Vy.AbstractDecoder);M8.GBDecoder=Qy;var W0={};Object.defineProperty(W0,"__esModule",{value:!0});W0.GBKEncoder=W0.GB18030Encoder=W0.GBEncoder=W0.getIndex=void 0;var q7=s3,Yy=dc,Jy=hc,Xy=E0,Zy=x3(),ev=w3(),Do=J2;function pc(e){var t,r;if(e===59335)return 7457;var n=0,i=0,o=Jy;try{for(var s=q7.__values(o),a=s.next();!a.done;a=s.next()){var l=a.value;if(l[1]>e)break;n=l[1],i=l[0]}}catch(u){t={error:u}}finally{try{a&&!a.done&&(r=s.return)&&r.call(s)}finally{if(t)throw t.error}}return i+e-n}W0.getIndex=pc;var Rn=function(e){q7.__extends(t,e);function t(r){r===void 0&&(r=!1);var n=e.call(this)||this;return n.gbkFlag=r,n}return t.prototype.encode=function(r){var n=r.read();if(n===Zy.END_OF_BUFFER)return ev.FINISHED;if((0,Do.isASCII)(n))return n;if(n===58853)return this.fail(n);if(this.gbkFlag&&n===8364)return 128;var i=(0,Do.indexOf)(Yy,n);if(i!==null){var o=Math.floor(i/190)+129,s=i%190,a=s<63?64:65;return[o,s+a]}if(this.gbkFlag)return this.fail(n);i=pc(n);var l=Math.floor(i/10/126/10);i=i-l*10*126*10;var u=Math.floor(i/10/126);i=i-u*10*126;var h=Math.floor(i/10),y=i-h*10;return[l+129,u+48,h+129,y+48]},t}(Xy.AbstractEncoder);W0.GBEncoder=Rn;var tv=function(e){q7.__extends(t,e);function t(){return e.call(this,!1)||this}return t}(Rn);W0.GB18030Encoder=tv;var rv=function(e){q7.__extends(t,e);function t(){return e.call(this,!0)||this}return t}(Rn);W0.GBKEncoder=rv;var nv=M8,iv=W0,ov=g2;(0,ov.registerEncoding)("gb18030",["gb18030"],nv.GBDecoder,iv.GB18030Encoder);var sv=M8,av=W0,uv=g2;(0,uv.registerEncoding)("gbk",["chinese","csgb2312","csiso58gb231280","gb2312","gb_2312","gb_2312-80","gbk","iso-ir-58","x-gbk"],sv.GBDecoder,av.GBKEncoder);const lv=[1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,9617,9618,9619,9474,9508,9569,9570,9558,9557,9571,9553,9559,9565,9564,9563,9488,9492,9524,9516,9500,9472,9532,9566,9567,9562,9556,9577,9574,9568,9552,9580,9575,9576,9572,9573,9561,9560,9554,9555,9579,9578,9496,9484,9608,9604,9612,9616,9600,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1025,1105,1028,1108,1031,1111,1038,1118,176,8729,183,8730,8470,164,9632,160];var K2={};Object.defineProperty(K2,"__esModule",{value:!0});K2.SingleByteDecoder=void 0;var Uo=s3,cv=_0,fv=x3(),dv=w3(),hv=J2,pv=function(e){Uo.__extends(t,e);function t(r,n){var i=e.call(this,n)||this;return i.index=r,i}return t.forCodePoints=function(r){return function(n){Uo.__extends(i,n);function i(o){return n.call(this,r,o)||this}return i}(t)},t.prototype.decode=function(r){var n,i=r.read();return i===fv.END_OF_BUFFER?dv.FINISHED:(0,hv.isASCII)(i)?i:(n=this.index[i-128])!==null&&n!==void 0?n:this.fail()},t}(cv.AbstractDecoder);K2.SingleByteDecoder=pv;var G2={};Object.defineProperty(G2,"__esModule",{value:!0});G2.SingleByteEncoder=void 0;var No=s3,yv=E0,vv=x3(),gv=w3(),$o=J2,mv=function(e){No.__extends(t,e);function t(r){var n=e.call(this)||this;return n.index=r,n}return t.forCodePoints=function(r){return function(n){No.__extends(i,n);function i(){return n.call(this,r)||this}return i}(t)},t.prototype.encode=function(r){var n=r.read();if(n===vv.END_OF_BUFFER)return gv.FINISHED;if((0,$o.isASCII)(n))return n;var i=(0,$o.indexOf)(this.index,n);return i==null?this.fail(n):i+128},t}(yv.AbstractEncoder);G2.SingleByteEncoder=mv;var Lo=lv,xv=K2,wv=G2,_v=g2;(0,_v.registerEncoding)("ibm866",["866","cp866","csibm866","ibm866"],xv.SingleByteDecoder.forCodePoints(Lo),wv.SingleByteEncoder.forCodePoints(Lo));var W7={};Object.defineProperty(W7,"__esModule",{value:!0});W7.ISO2022JPDecoder=void 0;var Ev=s3,Sv=f6,bv=_0,T6=x3(),d9=w3(),I6=J2,t3;(function(e){e[e.ASCII=0]="ASCII",e[e.Roman=1]="Roman",e[e.Katakana=2]="Katakana",e[e.LeadByte=3]="LeadByte",e[e.TrailByte=4]="TrailByte",e[e.EscapeStart=5]="EscapeStart",e[e.Escape=6]="Escape"})(t3||(t3={}));var Cv=function(e){Ev.__extends(t,e);function t(){var r=e!==null&&e.apply(this,arguments)||this;return r.state=t3.ASCII,r.lead=0,r.outputFlag=!1,r}return t.prototype.decode=function(r){var n,i=r.read();switch(this.state){default:case t3.ASCII:return i===27?(this.state=t3.EscapeStart,null):(0,I6.inRange)(i,0,127)&&i!==14&&i!==15&&i!==27?(this.outputFlag=!1,i):i===T6.END_OF_BUFFER?d9.FINISHED:(this.outputFlag=!1,this.fail());case t3.Roman:return i===27?(this.state=t3.EscapeStart,null):i===92?(this.outputFlag=!1,165):i===126?(this.outputFlag=!1,8254):(0,I6.inRange)(i,0,127)&&i!==14&&i!==15&&i!==27&&i!==92&&i!==126?(this.outputFlag=!1,i):i===T6.END_OF_BUFFER?d9.FINISHED:(this.outputFlag=!1,this.fail());case t3.Katakana:return i===27?(this.state=t3.EscapeStart,null):(0,I6.inRange)(i,33,95)?(this.outputFlag=!1,65377-33+i):i===T6.END_OF_BUFFER?d9.FINISHED:(this.outputFlag=!1,this.fail());case t3.LeadByte:return i===27?(this.state=t3.EscapeStart,null):(0,I6.inRange)(i,33,126)?(this.outputFlag=!1,this.lead=i,this.state=t3.TrailByte,null):i===T6.END_OF_BUFFER?d9.FINISHED:(this.outputFlag=!1,this.fail());case t3.TrailByte:if(i===27)return this.state=t3.EscapeStart,this.fail();if((0,I6.inRange)(i,33,126)){this.state=t3.LeadByte;var o=(this.lead-33)*94+i-33,s=(n=Sv[o])!==null&&n!==void 0?n:null;return s??this.fail()}return i===T6.END_OF_BUFFER?(this.state=t3.LeadByte,r.write(i),this.fail()):(this.state=t3.LeadByte,this.fail());case t3.EscapeStart:return i===36||i===40?(this.lead=i,this.state=t3.Escape,null):(r.write(i),this.outputFlag=!1,this.state=t3.ASCII,this.fail());case t3.Escape:{var a=this.lead;this.lead=0;var l=null;if(a===40&&i===66&&(l=t3.ASCII),a===40&&i===74&&(l=t3.Roman),a===40&&i===73&&(l=t3.Katakana),a===36&&(i===64||i===66)&&(l=t3.LeadByte),l!==null){this.state=this.state=l;var u=this.outputFlag;return this.outputFlag=!0,u?this.fail():null}return r.write(a,i),this.outputFlag=!1,this.state=t3.ASCII,this.fail()}}},t}(bv.AbstractDecoder);W7.ISO2022JPDecoder=Cv;var V7={};Object.defineProperty(V7,"__esModule",{value:!0});V7.ISO2022JPEncoder=void 0;var Av=s3,Bv=f6,Tv=E0,Mo=x3(),Iv=w3(),F6=J2,K3;(function(e){e[e.ASCII=0]="ASCII",e[e.Roman=1]="Roman",e[e.jis0208=2]="jis0208"})(K3||(K3={}));var Fv=function(e){Av.__extends(t,e);function t(){var r=e!==null&&e.apply(this,arguments)||this;return r.state=K3.ASCII,r}return t.prototype.encode=function(r){var n=r.read();if(n===Mo.END_OF_BUFFER&&this.state!==K3.ASCII)return r.write(n),this.state=K3.ASCII,[27,40,66];if(n===Mo.END_OF_BUFFER&&this.state===K3.ASCII)return Iv.FINISHED;if((this.state===K3.ASCII||this.state===K3.Roman)&&(n===14||n===15||n===27))return this.fail(65533);if(this.state===K3.ASCII&&(0,F6.isASCII)(n))return n;if(this.state===K3.Roman&&((0,F6.isASCII)(n)&&n!==92&&n!==126||n===165||n===8254)){if((0,F6.isASCII)(n))return n;if(n===165)return 92;if(n===8254)return 126}if((0,F6.isASCII)(n)&&this.state!==K3.ASCII)return r.write(n),this.state=K3.ASCII,[27,40,66];if((n===165||n===8254)&&this.state!==K3.Roman)return r.write(n),this.state=K3.Roman,[27,40,74];n===8722&&(n=65293);var i=(0,F6.indexOf)(Bv,n);if(i==null)return this.fail(n);if(this.state!==K3.jis0208)return r.write(n),this.state=K3.jis0208,[27,36,66];var o=Math.floor(i/94)+33,s=i%94+33;return[o,s]},t}(Tv.AbstractEncoder);V7.ISO2022JPEncoder=Fv;var Rv=W7,kv=V7,Pv=g2;(0,Pv.registerEncoding)("iso-2022-jp",["csiso2022jp","iso-2022-jp"],Rv.ISO2022JPDecoder,kv.ISO2022JPEncoder);var K7={};Object.defineProperty(K7,"__esModule",{value:!0});K7.ShiftJISDecoder=void 0;var Ov=s3,Dv=f6,Uv=_0,zo=x3(),Nv=w3(),U4=J2,$v=function(e){Ov.__extends(t,e);function t(){var r=e!==null&&e.apply(this,arguments)||this;return r.lead=0,r}return t.prototype.decode=function(r){var n,i=r.read();if(i===zo.END_OF_BUFFER&&this.lead!==0)return this.lead=0,this.fail();if(i===zo.END_OF_BUFFER&&this.lead===0)return Nv.FINISHED;if(this.lead!==0){var o=this.lead,s=null;this.lead=0;var a=i<127?64:65,l=o<160?129:193;if((0,U4.inRange)(i,64,126)||(0,U4.inRange)(i,128,252))s=(o-l)*188+i-a;else return this.fail();if((0,U4.inRange)(s,8836,10715))return 57344-8836+s;var u=s==null?null:(n=Dv[s])!==null&&n!==void 0?n:null;return u==null&&(0,U4.isASCII)(i)&&r.write(i),u??this.fail()}return(0,U4.isASCII)(i)||i===128?i:(0,U4.inRange)(i,161,223)?65377-161+i:(0,U4.inRange)(i,129,159)||(0,U4.inRange)(i,224,252)?(this.lead=i,null):this.fail()},t}(Uv.AbstractDecoder);K7.ShiftJISDecoder=$v;var G7={};Object.defineProperty(G7,"__esModule",{value:!0});G7.ShiftJISEncoder=void 0;var Lv=s3,Mv=f6,zv=E0,jv=x3(),Hv=w3(),lr=J2;function qv(e){return R6=R6??Mv.map(function(t,r){return(0,lr.inRange)(r,8272,8835)?null:t}),R6.indexOf(e)}var R6=null,Wv=function(e){Lv.__extends(t,e);function t(){return e!==null&&e.apply(this,arguments)||this}return t.prototype.encode=function(r){var n=r.read();if(n===jv.END_OF_BUFFER)return Hv.FINISHED;if((0,lr.isASCII)(n)||n===128)return n;if(n===165)return 92;if(n===8254)return 126;if((0,lr.inRange)(n,65377,65439))return n-65377+161;n===8722&&(n=65293);var i=qv(n);if(i==null)return this.fail(n);var o=Math.floor(i/188),s=o<31?129:193,a=i%188,l=a<63?64:65;return[o+s,a+l]},t}(zv.AbstractEncoder);G7.ShiftJISEncoder=Wv;var Vv=K7,Kv=G7,Gv=g2;(0,Gv.registerEncoding)("shift_jis",["csshiftjis","ms932","ms_kanji","shift-jis","shift_jis","sjis","windows-31j","x-sjis"],Vv.ShiftJISDecoder,Kv.ShiftJISEncoder);var Q7={};Object.defineProperty(Q7,"__esModule",{value:!0});Q7.UTF8Decoder=void 0;var Qv=s3,Yv=_0,jo=x3(),Jv=w3(),k6=J2,Xv=function(e){Qv.__extends(t,e);function t(){var r=e!==null&&e.apply(this,arguments)||this;return r.codePoint=0,r.bytesSeen=0,r.bytesNeeded=0,r.lowerBoundary=128,r.upperBoundary=191,r}return t.prototype.decode=function(r){var n=r.read();if(n===jo.END_OF_BUFFER&&this.bytesNeeded!==0)return this.bytesNeeded=0,this.fail();if(n===jo.END_OF_BUFFER)return Jv.FINISHED;if(this.bytesNeeded===0){if((0,k6.inRange)(n,0,127))return n;if((0,k6.inRange)(n,194,223))this.bytesNeeded=1,this.codePoint=n&31;else if((0,k6.inRange)(n,224,239))n===224&&(this.lowerBoundary=160),n===237&&(this.upperBoundary=159),this.bytesNeeded=2,this.codePoint=n&15;else if((0,k6.inRange)(n,240,244))n===240&&(this.lowerBoundary=144),n===244&&(this.upperBoundary=143),this.bytesNeeded=3,this.codePoint=n&7;else return this.fail();return null}if(!(0,k6.inRange)(n,this.lowerBoundary,this.upperBoundary))return this.codePoint=this.bytesNeeded=this.bytesSeen=0,this.lowerBoundary=128,this.upperBoundary=191,r.write(n),this.fail();if(this.lowerBoundary=128,this.upperBoundary=191,this.codePoint=this.codePoint<<6|n&63,this.bytesSeen+=1,this.bytesSeen!==this.bytesNeeded)return null;var i=this.codePoint;return this.codePoint=this.bytesNeeded=this.bytesSeen=0,i},t}(Yv.AbstractDecoder);Q7.UTF8Decoder=Xv;var Y7={};Object.defineProperty(Y7,"__esModule",{value:!0});Y7.UTF8Encoder=void 0;var Zv=s3,eg=E0,tg=x3(),rg=w3(),h9=J2,ng=function(e){Zv.__extends(t,e);function t(){return e!==null&&e.apply(this,arguments)||this}return t.prototype.encode=function(r){var n=r.read();if(n===tg.END_OF_BUFFER)return rg.FINISHED;if((0,h9.isASCII)(n))return n;var i,o;if((0,h9.inRange)(n,128,2047))i=1,o=192;else if((0,h9.inRange)(n,2048,65535))i=2,o=224;else if((0,h9.inRange)(n,65536,1114111))i=3,o=240;else return this.fail(n);for(var s=[(n>>6*i)+o];i>0;){var a=n>>6*(i-1);s.push(128|a&63),i-=1}return s},t}(eg.AbstractEncoder);Y7.UTF8Encoder=ng;var ig=Q7,og=Y7,sg=g2;(0,sg.registerEncoding)("utf-8",["unicode-1-1-utf-8","utf-8","utf8"],ig.UTF8Decoder,og.UTF8Encoder);var A4={};Object.defineProperty(A4,"__esModule",{value:!0});A4.UTF16BEDecoder=A4.UTF16LEDecoder=A4.UTF16Decoder=void 0;var J6=s3,ag=_0,Ho=x3(),ug=w3(),p9=J2,kn=function(e){J6.__extends(t,e);function t(r,n){var i=e.call(this,n)||this;return i.leadByte=null,i.leadSurrogate=null,i.bigEndian=r,i}return t.prototype.decode=function(r){var n=r.read();if(n===Ho.END_OF_BUFFER&&(this.leadByte!==null||this.leadSurrogate!==null))return this.fail();if(n===Ho.END_OF_BUFFER&&this.leadByte==null&&this.leadSurrogate==null)return ug.FINISHED;if(this.leadByte==null)return this.leadByte=n,null;var i;if(this.bigEndian?i=(this.leadByte<<8)+n:i=(n<<8)+this.leadByte,this.leadByte=null,this.leadSurrogate!==null){var o=this.leadSurrogate;return this.leadSurrogate=null,(0,p9.inRange)(i,56320,57343)?65536+(o-55296)*1024+(i-56320):(r.write.apply(r,J6.__spreadArray([],J6.__read((0,p9.convertCodeUnitToBytes)(i,this.bigEndian)),!1)),this.fail())}return(0,p9.inRange)(i,55296,56319)?(this.leadSurrogate=i,null):(0,p9.inRange)(i,56320,57343)?this.fail():i},t}(ag.AbstractDecoder);A4.UTF16Decoder=kn;var lg=function(e){J6.__extends(t,e);function t(r){return e.call(this,!1,r)||this}return t}(kn);A4.UTF16LEDecoder=lg;var cg=function(e){J6.__extends(t,e);function t(r){return e.call(this,!0,r)||this}return t}(kn);A4.UTF16BEDecoder=cg;var B4={};Object.defineProperty(B4,"__esModule",{value:!0});B4.UTF16BEEncoder=B4.UTF16LEEncoder=B4.UTF16Encoder=void 0;var Pn=s3,fg=E0,dg=x3(),hg=w3(),y9=J2,On=function(e){Pn.__extends(t,e);function t(r){var n=e.call(this)||this;return n.bigEndian=r,n}return t.prototype.encode=function(r){var n=r.read();if(n===dg.END_OF_BUFFER)return hg.FINISHED;if((0,y9.inRange)(n,0,65535))return(0,y9.convertCodeUnitToBytes)(n,this.bigEndian);var i=(0,y9.convertCodeUnitToBytes)((n-65536>>10)+55296,this.bigEndian),o=(0,y9.convertCodeUnitToBytes)((n-65536&1023)+56320,this.bigEndian);return i.concat(o)},t}(fg.AbstractEncoder);B4.UTF16Encoder=On;var pg=function(e){Pn.__extends(t,e);function t(){return e.call(this,!1)||this}return t}(On);B4.UTF16LEEncoder=pg;var yg=function(e){Pn.__extends(t,e);function t(){return e.call(this,!0)||this}return t}(On);B4.UTF16BEEncoder=yg;var vg=A4,gg=B4,mg=g2;(0,mg.registerEncoding)("utf-16le",["utf-16","utf-16le"],vg.UTF16LEDecoder,gg.UTF16LEEncoder);var xg=A4,wg=B4,_g=g2;(0,_g.registerEncoding)("utf-16be",["utf-16be"],xg.UTF16BEDecoder,wg.UTF16BEEncoder);var J7={};Object.defineProperty(J7,"__esModule",{value:!0});J7.XUserDefinedDecoder=void 0;var Eg=s3,Sg=_0,bg=x3(),Cg=w3(),Ag=J2,Bg=function(e){Eg.__extends(t,e);function t(){return e!==null&&e.apply(this,arguments)||this}return t.prototype.decode=function(r){var n=r.read();return n===bg.END_OF_BUFFER?Cg.FINISHED:(0,Ag.isASCII)(n)?n:63360+n-128},t}(Sg.AbstractDecoder);J7.XUserDefinedDecoder=Bg;var X7={};Object.defineProperty(X7,"__esModule",{value:!0});X7.XUserDefinedEncoder=void 0;var Tg=s3,Ig=E0,Fg=x3(),Rg=w3(),qo=J2,kg=function(e){Tg.__extends(t,e);function t(){return e!==null&&e.apply(this,arguments)||this}return t.prototype.encode=function(r){var n=r.read();return n===Fg.END_OF_BUFFER?Rg.FINISHED:(0,qo.isASCII)(n)?n:(0,qo.inRange)(n,63360,63487)?n-63360+128:this.fail(n)},t}(Ig.AbstractEncoder);X7.XUserDefinedEncoder=kg;var Pg=J7,Og=X7,Dg=g2;(0,Dg.registerEncoding)("x-user-defined",["x-user-defined"],Pg.XUserDefinedDecoder,Og.XUserDefinedEncoder);const Ug=[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,728,321,164,317,346,167,168,352,350,356,377,173,381,379,176,261,731,322,180,318,347,711,184,353,351,357,378,733,382,380,340,193,194,258,196,313,262,199,268,201,280,203,282,205,206,270,272,323,327,211,212,336,214,215,344,366,218,368,220,221,354,223,341,225,226,259,228,314,263,231,269,233,281,235,283,237,238,271,273,324,328,243,244,337,246,247,345,367,250,369,252,253,355,729];var Wo=Ug,Ng=K2,$g=G2,Lg=g2;(0,Lg.registerEncoding)("iso-8859-2",["csisolatin2","iso-8859-2","iso-ir-101","iso8859-2","iso88592","iso_8859-2","iso_8859-2:1987","l2","latin2"],Ng.SingleByteDecoder.forCodePoints(Wo),$g.SingleByteEncoder.forCodePoints(Wo));const Mg=[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,294,728,163,164,0,292,167,168,304,350,286,308,173,0,379,176,295,178,179,180,181,293,183,184,305,351,287,309,189,0,380,192,193,194,0,196,266,264,199,200,201,202,203,204,205,206,207,0,209,210,211,212,288,214,215,284,217,218,219,220,364,348,223,224,225,226,0,228,267,265,231,232,233,234,235,236,237,238,239,0,241,242,243,244,289,246,247,285,249,250,251,252,365,349,729];var Vo=Mg,zg=K2,jg=G2,Hg=g2;(0,Hg.registerEncoding)("iso-8859-3",["csisolatin3","iso-8859-3","iso-ir-109","iso8859-3","iso88593","iso_8859-3","iso_8859-3:1988","l3","latin3"],zg.SingleByteDecoder.forCodePoints(Vo),jg.SingleByteEncoder.forCodePoints(Vo));const qg=[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,312,342,164,296,315,167,168,352,274,290,358,173,381,175,176,261,731,343,180,297,316,711,184,353,275,291,359,330,382,331,256,193,194,195,196,197,198,302,268,201,280,203,278,205,206,298,272,325,332,310,212,213,214,215,216,370,218,219,220,360,362,223,257,225,226,227,228,229,230,303,269,233,281,235,279,237,238,299,273,326,333,311,244,245,246,247,248,371,250,251,252,361,363,729];var Ko=qg,Wg=K2,Vg=G2,Kg=g2;(0,Kg.registerEncoding)("iso-8859-4",["csisolatin4","iso-8859-4","iso-ir-110","iso8859-4","iso88594","iso_8859-4","iso_8859-4:1988","l4","latin4"],Wg.SingleByteDecoder.forCodePoints(Ko),Vg.SingleByteEncoder.forCodePoints(Ko));const Gg=[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,173,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,8470,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,167,1118,1119];var Go=Gg,Qg=K2,Yg=G2,Jg=g2;(0,Jg.registerEncoding)("iso-8859-5",["csisolatincyrillic","cyrillic","iso-8859-5","iso-ir-144","iso8859-5","iso88595","iso_8859-5","iso_8859-5:1988"],Qg.SingleByteDecoder.forCodePoints(Go),Yg.SingleByteEncoder.forCodePoints(Go));const Xg=[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,0,0,0,164,0,0,0,0,0,0,0,1548,173,0,0,0,0,0,0,0,0,0,0,0,0,0,1563,0,0,0,1567,0,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,1591,1592,1593,1594,0,0,0,0,0,1600,1601,1602,1603,1604,1605,1606,1607,1608,1609,1610,1611,1612,1613,1614,1615,1616,1617,1618,0,0,0,0,0,0,0,0,0,0,0,0,0];var Qo=Xg,Zg=K2,em=G2,tm=g2;(0,tm.registerEncoding)("iso-8859-6",["arabic","asmo-708","csiso88596e","csiso88596i","csisolatinarabic","ecma-114","iso-8859-6","iso-8859-6-e","iso-8859-6-i","iso-ir-127","iso8859-6","iso88596","iso_8859-6","iso_8859-6:1987"],Zg.SingleByteDecoder.forCodePoints(Qo),em.SingleByteEncoder.forCodePoints(Qo));const rm=[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,8216,8217,163,8364,8367,166,167,168,169,890,171,172,173,0,8213,176,177,178,179,900,901,902,183,904,905,906,187,908,189,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,0,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,0];var Yo=rm,nm=K2,im=G2,om=g2;(0,om.registerEncoding)("iso-8859-7",["csisolatingreek","ecma-118","elot_928","greek","greek8","iso-8859-7","iso-ir-126","iso8859-7","iso88597","iso_8859-7","iso_8859-7:1987","sun_eu_greek"],nm.SingleByteDecoder.forCodePoints(Yo),im.SingleByteEncoder.forCodePoints(Yo));const sm=[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,0,162,163,164,165,166,167,168,169,215,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,247,187,188,189,190,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8215,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,0,0,8206,8207,0];var Jo=sm,am=K2,um=G2,lm=g2;(0,lm.registerEncoding)("iso-8859-8",["csiso88598e","csisolatinhebrew","hebrew","iso-8859-8","iso-8859-8-e","iso-ir-138","iso8859-8","iso88598","iso_8859-8","iso_8859-8:1988","visual"],am.SingleByteDecoder.forCodePoints(Jo),um.SingleByteEncoder.forCodePoints(Jo));const cm=[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,274,290,298,296,310,167,315,272,352,358,381,173,362,330,176,261,275,291,299,297,311,183,316,273,353,359,382,8213,363,331,256,193,194,195,196,197,198,302,268,201,280,203,278,205,206,207,208,325,332,211,212,213,214,360,216,370,218,219,220,221,222,223,257,225,226,227,228,229,230,303,269,233,281,235,279,237,238,239,240,326,333,243,244,245,246,361,248,371,250,251,252,253,254,312];var Xo=cm,fm=K2,dm=G2,hm=g2;(0,hm.registerEncoding)("iso-8859-10",["csisolatin6","iso-8859-10","iso-ir-157","iso8859-10","iso885910","l6","latin6"],fm.SingleByteDecoder.forCodePoints(Xo),dm.SingleByteEncoder.forCodePoints(Xo));const pm=[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,8221,162,163,164,8222,166,167,216,169,342,171,172,173,174,198,176,177,178,179,8220,181,182,183,248,185,343,187,188,189,190,230,260,302,256,262,196,197,280,274,268,201,377,278,290,310,298,315,352,323,325,211,332,213,214,215,370,321,346,362,220,379,381,223,261,303,257,263,228,229,281,275,269,233,378,279,291,311,299,316,353,324,326,243,333,245,246,247,371,322,347,363,252,380,382,8217];var Zo=pm,ym=K2,vm=G2,gm=g2;(0,gm.registerEncoding)("iso-8859-13",["iso-8859-13","iso8859-13","iso885913"],ym.SingleByteDecoder.forCodePoints(Zo),vm.SingleByteEncoder.forCodePoints(Zo));const mm=[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,7682,7683,163,266,267,7690,167,7808,169,7810,7691,7922,173,174,376,7710,7711,288,289,7744,7745,182,7766,7809,7767,7811,7776,7923,7812,7813,7777,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,372,209,210,211,212,213,214,7786,216,217,218,219,220,221,374,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,373,241,242,243,244,245,246,7787,248,249,250,251,252,253,375,255];var es=mm,xm=K2,wm=G2,_m=g2;(0,_m.registerEncoding)("iso-8859-14",["iso-8859-14","iso8859-14","iso885914"],xm.SingleByteDecoder.forCodePoints(es),wm.SingleByteEncoder.forCodePoints(es));const Em=[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,8364,165,352,167,353,169,170,171,172,173,174,175,176,177,178,179,381,181,182,183,382,185,186,187,338,339,376,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255];var ts=Em,Sm=K2,bm=G2,Cm=g2;(0,Cm.registerEncoding)("iso-8859-15",["csisolatin9","iso-8859-15","iso8859-15","iso885915","iso_8859-15","l9"],Sm.SingleByteDecoder.forCodePoints(ts),bm.SingleByteEncoder.forCodePoints(ts));const Am=[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,261,321,8364,8222,352,167,353,169,536,171,377,173,378,379,176,177,268,322,381,8221,182,183,382,269,537,187,338,339,376,380,192,193,194,258,196,262,198,199,200,201,202,203,204,205,206,207,272,323,210,211,212,336,214,346,368,217,218,219,220,280,538,223,224,225,226,259,228,263,230,231,232,233,234,235,236,237,238,239,273,324,242,243,244,337,246,347,369,249,250,251,252,281,539,255];var rs=Am,Bm=K2,Tm=G2,Im=g2;(0,Im.registerEncoding)("iso-8859-16",["iso-8859-16"],Bm.SingleByteDecoder.forCodePoints(rs),Tm.SingleByteEncoder.forCodePoints(rs));const Fm=[9472,9474,9484,9488,9492,9496,9500,9508,9516,9524,9532,9600,9604,9608,9612,9616,9617,9618,9619,8992,9632,8729,8730,8776,8804,8805,160,8993,176,178,183,247,9552,9553,9554,1105,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568,9569,1025,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,169,1102,1072,1073,1094,1076,1077,1092,1075,1093,1080,1081,1082,1083,1084,1085,1086,1087,1103,1088,1089,1090,1091,1078,1074,1100,1099,1079,1096,1101,1097,1095,1098,1070,1040,1041,1062,1044,1045,1060,1043,1061,1048,1049,1050,1051,1052,1053,1054,1055,1071,1056,1057,1058,1059,1046,1042,1068,1067,1047,1064,1069,1065,1063,1066];var ns=Fm,Rm=K2,km=G2,Pm=g2;(0,Pm.registerEncoding)("koi8-r",["cskoi8r","koi","koi8","koi8-r","koi8_r"],Rm.SingleByteDecoder.forCodePoints(ns),km.SingleByteEncoder.forCodePoints(ns));const Om=[9472,9474,9484,9488,9492,9496,9500,9508,9516,9524,9532,9600,9604,9608,9612,9616,9617,9618,9619,8992,9632,8729,8730,8776,8804,8805,160,8993,176,178,183,247,9552,9553,9554,1105,1108,9556,1110,1111,9559,9560,9561,9562,9563,1169,1118,9566,9567,9568,9569,1025,1028,9571,1030,1031,9574,9575,9576,9577,9578,1168,1038,169,1102,1072,1073,1094,1076,1077,1092,1075,1093,1080,1081,1082,1083,1084,1085,1086,1087,1103,1088,1089,1090,1091,1078,1074,1100,1099,1079,1096,1101,1097,1095,1098,1070,1040,1041,1062,1044,1045,1060,1043,1061,1048,1049,1050,1051,1052,1053,1054,1055,1071,1056,1057,1058,1059,1046,1042,1068,1067,1047,1064,1069,1065,1063,1066];var is=Om,Dm=K2,Um=G2,Nm=g2;(0,Nm.registerEncoding)("koi8-u",["koi8-ru","koi8-u"],Dm.SingleByteDecoder.forCodePoints(is),Um.SingleByteEncoder.forCodePoints(is));const $m=[196,197,199,201,209,214,220,225,224,226,228,227,229,231,233,232,234,235,237,236,238,239,241,243,242,244,246,245,250,249,251,252,8224,176,162,163,167,8226,182,223,174,169,8482,180,168,8800,198,216,8734,177,8804,8805,165,181,8706,8721,8719,960,8747,170,186,937,230,248,191,161,172,8730,402,8776,8710,171,187,8230,160,192,195,213,338,339,8211,8212,8220,8221,8216,8217,247,9674,255,376,8260,8364,8249,8250,64257,64258,8225,183,8218,8222,8240,194,202,193,203,200,205,206,207,204,211,212,63743,210,218,219,217,305,710,732,175,728,729,730,184,733,731,711];var os=$m,Lm=K2,Mm=G2,zm=g2;(0,zm.registerEncoding)("macintosh",["csmacintosh","mac","macintosh","x-mac-roman"],Lm.SingleByteDecoder.forCodePoints(os),Mm.SingleByteEncoder.forCodePoints(os));const jm=[8364,129,130,131,132,8230,134,135,136,137,138,139,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,152,153,154,155,156,157,158,159,160,3585,3586,3587,3588,3589,3590,3591,3592,3593,3594,3595,3596,3597,3598,3599,3600,3601,3602,3603,3604,3605,3606,3607,3608,3609,3610,3611,3612,3613,3614,3615,3616,3617,3618,3619,3620,3621,3622,3623,3624,3625,3626,3627,3628,3629,3630,3631,3632,3633,3634,3635,3636,3637,3638,3639,3640,3641,3642,0,0,0,0,3647,3648,3649,3650,3651,3652,3653,3654,3655,3656,3657,3658,3659,3660,3661,3662,3663,3664,3665,3666,3667,3668,3669,3670,3671,3672,3673,3674,3675,0,0,0,0];var ss=jm,Hm=K2,qm=G2,Wm=g2;(0,Wm.registerEncoding)("windows-874",["dos-874","iso-8859-11","iso8859-11","iso885911","tis-620","windows-874"],Hm.SingleByteDecoder.forCodePoints(ss),qm.SingleByteEncoder.forCodePoints(ss));const Vm=[8364,129,8218,131,8222,8230,8224,8225,136,8240,352,8249,346,356,381,377,144,8216,8217,8220,8221,8226,8211,8212,152,8482,353,8250,347,357,382,378,160,711,728,321,164,260,166,167,168,169,350,171,172,173,174,379,176,177,731,322,180,181,182,183,184,261,351,187,317,733,318,380,340,193,194,258,196,313,262,199,268,201,280,203,282,205,206,270,272,323,327,211,212,336,214,215,344,366,218,368,220,221,354,223,341,225,226,259,228,314,263,231,269,233,281,235,283,237,238,271,273,324,328,243,244,337,246,247,345,367,250,369,252,253,355,729];var as=Vm,Km=K2,Gm=G2,Qm=g2;(0,Qm.registerEncoding)("windows-1250",["cp1250","windows-1250","x-cp1250"],Km.SingleByteDecoder.forCodePoints(as),Gm.SingleByteEncoder.forCodePoints(as));const Ym=[1026,1027,8218,1107,8222,8230,8224,8225,8364,8240,1033,8249,1034,1036,1035,1039,1106,8216,8217,8220,8221,8226,8211,8212,152,8482,1113,8250,1114,1116,1115,1119,160,1038,1118,1032,164,1168,166,167,1025,169,1028,171,172,173,174,1031,176,177,1030,1110,1169,181,182,183,1105,8470,1108,187,1112,1029,1109,1111,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103];var us=Ym,Jm=K2,Xm=G2,Zm=g2;(0,Zm.registerEncoding)("windows-1251",["cp1251","windows-1251","x-cp1251"],Jm.SingleByteDecoder.forCodePoints(us),Xm.SingleByteEncoder.forCodePoints(us));const ex=[8364,129,8218,402,8222,8230,8224,8225,710,8240,352,8249,338,141,381,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,353,8250,339,157,382,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255];var ls=ex,tx=K2,rx=G2,nx=g2;(0,nx.registerEncoding)("windows-1252",["ansi_x3.4-1968","ascii","cp1252","cp819","csisolatin1","ibm819","iso-8859-1","iso-ir-100","iso8859-1","iso88591","iso_8859-1","iso_8859-1:1987","l1","latin1","us-ascii","windows-1252","x-cp1252"],tx.SingleByteDecoder.forCodePoints(ls),rx.SingleByteEncoder.forCodePoints(ls));const ix=[8364,129,8218,402,8222,8230,8224,8225,136,8240,138,8249,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,152,8482,154,8250,156,157,158,159,160,901,902,163,164,165,166,167,168,169,0,171,172,173,174,8213,176,177,178,179,900,181,182,183,904,905,906,187,908,189,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,0,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,0];var cs=ix,ox=K2,sx=G2,ax=g2;(0,ax.registerEncoding)("windows-1253",["cp1253","windows-1253","x-cp1253"],ox.SingleByteDecoder.forCodePoints(cs),sx.SingleByteEncoder.forCodePoints(cs));const ux=[8364,129,8218,402,8222,8230,8224,8225,710,8240,352,8249,338,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,353,8250,339,157,158,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,286,209,210,211,212,213,214,215,216,217,218,219,220,304,350,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,287,241,242,243,244,245,246,247,248,249,250,251,252,305,351,255];var fs=ux,lx=K2,cx=G2,fx=g2;(0,fx.registerEncoding)("windows-1254",["cp1254","csisolatin5","iso-8859-9","iso-ir-148","iso8859-9","iso88599","iso_8859-9","iso_8859-9:1989","l5","latin5","windows-1254","x-cp1254"],lx.SingleByteDecoder.forCodePoints(fs),cx.SingleByteEncoder.forCodePoints(fs));const dx=[8364,129,8218,402,8222,8230,8224,8225,710,8240,138,8249,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,154,8250,156,157,158,159,160,161,162,163,8362,165,166,167,168,169,215,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,247,187,188,189,190,191,1456,1457,1458,1459,1460,1461,1462,1463,1464,1465,1466,1467,1468,1469,1470,1471,1472,1473,1474,1475,1520,1521,1522,1523,1524,0,0,0,0,0,0,0,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,0,0,8206,8207,0];var ds=dx,hx=K2,px=G2,yx=g2;(0,yx.registerEncoding)("windows-1255",["cp1255","windows-1255","x-cp1255"],hx.SingleByteDecoder.forCodePoints(ds),px.SingleByteEncoder.forCodePoints(ds));const vx=[8364,1662,8218,402,8222,8230,8224,8225,710,8240,1657,8249,338,1670,1688,1672,1711,8216,8217,8220,8221,8226,8211,8212,1705,8482,1681,8250,339,8204,8205,1722,160,1548,162,163,164,165,166,167,168,169,1726,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,1563,187,188,189,190,1567,1729,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,215,1591,1592,1593,1594,1600,1601,1602,1603,224,1604,226,1605,1606,1607,1608,231,232,233,234,235,1609,1610,238,239,1611,1612,1613,1614,244,1615,1616,247,1617,249,1618,251,252,8206,8207,1746];var hs=vx,gx=K2,mx=G2,xx=g2;(0,xx.registerEncoding)("windows-1256",["cp1256","windows-1256","x-cp1256"],gx.SingleByteDecoder.forCodePoints(hs),mx.SingleByteEncoder.forCodePoints(hs));const wx=[8364,129,8218,131,8222,8230,8224,8225,136,8240,138,8249,140,168,711,184,144,8216,8217,8220,8221,8226,8211,8212,152,8482,154,8250,156,175,731,159,160,0,162,163,164,0,166,167,216,169,342,171,172,173,174,198,176,177,178,179,180,181,182,183,248,185,343,187,188,189,190,230,260,302,256,262,196,197,280,274,268,201,377,278,290,310,298,315,352,323,325,211,332,213,214,215,370,321,346,362,220,379,381,223,261,303,257,263,228,229,281,275,269,233,378,279,291,311,299,316,353,324,326,243,333,245,246,247,371,322,347,363,252,380,382,729];var ps=wx,_x=K2,Ex=G2,Sx=g2;(0,Sx.registerEncoding)("windows-1257",["cp1257","windows-1257","x-cp1257"],_x.SingleByteDecoder.forCodePoints(ps),Ex.SingleByteEncoder.forCodePoints(ps));const bx=[8364,129,8218,402,8222,8230,8224,8225,710,8240,138,8249,338,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,154,8250,339,157,158,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,258,196,197,198,199,200,201,202,203,768,205,206,207,272,209,777,211,212,416,214,215,216,217,218,219,220,431,771,223,224,225,226,259,228,229,230,231,232,233,234,235,769,237,238,239,273,241,803,243,244,417,246,247,248,249,250,251,252,432,8363,255];var ys=bx,Cx=K2,Ax=G2,Bx=g2;(0,Bx.registerEncoding)("windows-1258",["cp1258","windows-1258","x-cp1258"],Cx.SingleByteDecoder.forCodePoints(ys),Ax.SingleByteEncoder.forCodePoints(ys));const Tx=[1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,8224,176,1168,163,167,8226,182,1030,174,169,8482,1026,1106,8800,1027,1107,8734,177,8804,8805,1110,181,1169,1032,1028,1108,1031,1111,1033,1113,1034,1114,1112,1029,172,8730,402,8776,8710,171,187,8230,160,1035,1115,1036,1116,1109,8211,8212,8220,8221,8216,8217,247,8222,1038,1118,1039,1119,8470,1025,1105,1103,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,8364];var vs=Tx,Ix=K2,Fx=G2,Rx=g2;(0,Rx.registerEncoding)("x-mac-cyrillic",["x-mac-cyrillic","x-mac-ukrainian"],Ix.SingleByteDecoder.forCodePoints(vs),Fx.SingleByteEncoder.forCodePoints(vs));var P6={},gs;function kx(){if(gs)return P6;gs=1,Object.defineProperty(P6,"__esModule",{value:!0}),P6.TextDecoder=void 0;var e=s3,t=x3(),r=w3(),n=g2,i=function(){function o(s,a){s===void 0&&(s=r.DEFAULT_ENCODING);var l=a===void 0?{}:a,u=l.fatal,h=u===void 0?!1:u,y=l.ignoreBOM,x=y===void 0?!1:y;this.seenBOM=!1,this.decoder=null,this.enc=(0,n.getEncoding)(s),this.fatal=h,this.ignoreBOM=x}return Object.defineProperty(o.prototype,"encoding",{get:function(){return this.enc.getName()},enumerable:!1,configurable:!0}),o.prototype.decode=function(s,a){var l=a===void 0?{}:a,u=l.stream,h=u===void 0?!1:u,y;s instanceof ArrayBuffer?y=new Uint8Array(s):ArrayBuffer.isView(s)?y=new Uint8Array(s.buffer,s.byteOffset,s.byteLength):y=new Uint8Array(0),this.decoder==null&&(this.decoder=this.enc.createDecoder(this.fatal),this.seenBOM=!1);for(var x=new t.ByteBuffer(y),b=[],C;!x.isEndOfBuffer()&&(C=this.decoder.decode(x),C!==r.FINISHED);)C!=null&&(Array.isArray(C)?b.push.apply(b,e.__spreadArray([],e.__read(C),!1)):b.push(C));if(!h){do{if(C=this.decoder.decode(x),C===r.FINISHED)break;C!=null&&(Array.isArray(C)?b.push.apply(b,e.__spreadArray([],e.__read(C),!1)):b.push(C))}while(!x.isEndOfBuffer());this.decoder=null}return["utf-8","utf-16le","utf-16be"].includes(this.encoding)&&!this.ignoreBOM&&!this.seenBOM&&b.length>0&&(b[0]===65279&&b.shift(),this.seenBOM=!0),String.fromCodePoint.apply(String,e.__spreadArray([],e.__read(b),!1))},o}();return P6.TextDecoder=i,P6}var T5={},ms;function Px(){if(ms)return T5;ms=1,Object.defineProperty(T5,"__esModule",{value:!0}),T5.createTextEncoder=T5.TextEncoder=void 0;var e=s3,t=x3(),r=w3(),n=g2;function i(a){for(var l=a.length,u=0,h=[];u<l;){var y=a.charCodeAt(u);if(y<55296||y>57343)h.push(y);else if(y>=56320&&y<=57343)h.push(65533);else if(y>=55296&&y<=56319)if(u===l-1)h.push(65533);else{var x=a.charCodeAt(u+1);if(x>=56320&&x<=57343){var b=y&1023,C=x&1023;h.push(65536+(b<<10)+C),u++}else h.push(65533)}u++}return h}var o=function(){function a(l){l===void 0&&(l="utf-8"),this.encoder=null,this.enc=(0,n.getEncoding)(l)}return Object.defineProperty(a.prototype,"encoding",{get:function(){return this.enc.getName()},enumerable:!1,configurable:!0}),a.prototype.encode=function(l){l===void 0&&(l=""),this.encoder==null&&(this.encoder=this.enc.createEncoder());for(var u=new t.ByteBuffer(i(l)),h=[],y;y=this.encoder.encode(u),y!==r.FINISHED;)Array.isArray(y)?h.push.apply(h,e.__spreadArray([],e.__read(y),!1)):h.push(y);return new Uint8Array(h)},a.prototype.encodeInto=function(l,u){this.encoder==null&&(this.encoder=this.enc.createEncoder());for(var h=new t.ByteBuffer(i(l)),y,x=0,b=0;b<u.byteLength&&(y=this.encoder.encode(h),y!==r.FINISHED);){if(Array.isArray(y)){if(y.length+b>u.byteLength)break;u.set(y,b),b+=y.length}else u[b++]=y;x++}return{read:x,written:b}},a}();T5.TextEncoder=o;function s(a){return a===void 0&&(a="utf-8"),a==="utf-8"&&typeof globalThis.TextEncoder=="function"?new globalThis.TextEncoder:new o(a)}return T5.createTextEncoder=s,T5}(function(e){Object.defineProperty(e,"__esModule",{value:!0});var t=s3;t.__exportStar(kx(),e),t.__exportStar(Px(),e)})(In);const Z0=class{constructor(){this.buffer=new ArrayBuffer(64),this.offset=0}ensureBufferWillHandleSize(e){for(;this.buffer.byteLength<this.offset+e;){const t=new ArrayBuffer(this.buffer.byteLength*2);new Uint8Array(t).set(new Uint8Array(this.buffer)),this.buffer=t}}serialize(e){this.ensureBufferWillHandleSize(e.length),new Uint8Array(this.buffer,this.offset).set(e),this.offset+=e.length}serializeStr(e){this.serializeBytes(Z0.textEncoder.encode(e))}serializeBytes(e){this.serializeLen(e.length),this.serialize(e)}serializeBool(e){const t=e?1:0;this.serialize(new Uint8Array([t]))}serializeUnit(e){}serializeWithFunction(e,t,r){this.ensureBufferWillHandleSize(t);const n=new DataView(this.buffer,this.offset);e.apply(n,[0,r,!0]),this.offset+=t}serializeU8(e){this.serialize(new Uint8Array([e]))}serializeU16(e){this.serializeWithFunction(DataView.prototype.setUint16,2,e)}serializeU32(e){this.serializeWithFunction(DataView.prototype.setUint32,4,e)}serializeU64(e){const t=BigInt(e.toString())&Z0.BIG_32Fs,r=BigInt(e.toString())>>Z0.BIG_32;this.serializeU32(Number(t)),this.serializeU32(Number(r))}serializeU128(e){const t=BigInt(e.toString())&Z0.BIG_64Fs,r=BigInt(e.toString())>>Z0.BIG_64;this.serializeU64(t),this.serializeU64(r)}serializeI8(e){this.ensureBufferWillHandleSize(1),new DataView(this.buffer,this.offset).setInt8(0,e),this.offset+=1}serializeI16(e){this.ensureBufferWillHandleSize(2),new DataView(this.buffer,this.offset).setInt16(0,e,!0),this.offset+=2}serializeI32(e){this.ensureBufferWillHandleSize(4),new DataView(this.buffer,this.offset).setInt32(0,e,!0),this.offset+=4}serializeI64(e){const t=BigInt(e)&Z0.BIG_32Fs,r=BigInt(e)>>Z0.BIG_32;this.serializeI32(Number(t)),this.serializeI32(Number(r))}serializeI128(e){const t=BigInt(e)&Z0.BIG_64Fs,r=BigInt(e)>>Z0.BIG_64;this.serializeI64(t),this.serializeI64(r)}serializeOptionTag(e){this.serializeBool(e)}getBufferOffset(){return this.offset}getBytes(){return new Uint8Array(this.buffer).slice(0,this.offset)}serializeChar(e){throw new Error("Method serializeChar not implemented.")}serializeF32(e){this.ensureBufferWillHandleSize(4),new DataView(this.buffer,this.offset).setFloat32(0,e,!0),this.offset+=4}serializeF64(e){this.ensureBufferWillHandleSize(8),new DataView(this.buffer,this.offset).setFloat64(0,e,!0),this.offset+=8}};let d6=Z0;d6.BIG_32=BigInt(32);d6.BIG_64=BigInt(64);d6.BIG_32Fs=BigInt("4294967295");d6.BIG_64Fs=BigInt("18446744073709551615");d6.textEncoder=typeof window>"u"?new In.TextEncoder:new TextEncoder;class b4 extends d6{serializeU32AsUleb128(t){const r=[];for(;t>>>7;)r.push(t&127|128),t=t>>>7;r.push(t),this.serialize(new Uint8Array(r))}serializeLen(t){this.serializeU32AsUleb128(t)}serializeVariantIndex(t){this.serializeU32AsUleb128(t)}sortMapEntries(t){}}BigInt(32);BigInt(64);typeof window>"u"?new In.TextDecoder:new TextDecoder;class Y0{constructor(t){this.value=t}serialize(t){q2.serializeArray32U8Array(this.value,t)}static deserialize(t){const r=q2.deserializeArray32U8Array(t);return new Y0(r)}}class z8{constructor(t,r){this.auth_validator_id=t,this.payload=r}serialize(t){t.serializeU64(this.auth_validator_id),q2.serializeVectorU8(this.payload,t)}static deserialize(t){const r=t.deserializeU64(),n=q2.deserializeVectorU8(t);return new z8(r,n)}}class Z7{constructor(t,r,n){this.function_id=t,this.ty_args=r,this.args=n}serialize(t){this.function_id.serialize(t),q2.serializeVectorTypeTag(this.ty_args,t),q2.serializeVectorVectorU8(this.args,t)}static deserialize(t){const r=ee.deserialize(t),n=q2.deserializeVectorTypeTag(t),i=q2.deserializeVectorVectorU8(t);return new Z7(r,n,i)}}class ee{constructor(t,r){this.module_id=t,this.function_name=r}serialize(t){this.module_id.serialize(t),this.function_name.serialize(t)}static deserialize(t){const r=te.deserialize(t),n=f4.deserialize(t);return new ee(r,n)}}class f4{constructor(t){this.value=t}serialize(t){t.serializeStr(this.value)}static deserialize(t){const r=t.deserializeStr();return new f4(r)}}class te{constructor(t,r){this.address=t,this.name=r}serialize(t){this.address.serialize(t),this.name.serialize(t)}static deserialize(t){const r=Y0.deserialize(t),n=f4.deserialize(t);return new te(r,n)}}class re{static deserialize(t){const r=t.deserializeVariantIndex();switch(r){case 0:return Dn.load(t);case 1:return ne.load(t);case 2:return Un.load(t);default:throw new Error("Unknown variant index for MoveAction: "+r)}}}class Dn extends re{constructor(t){super(),this.value=t}serialize(t){t.serializeVariantIndex(0),this.value.serialize(t)}static load(t){const r=$n.deserialize(t);return new Dn(r)}}class ne extends re{constructor(t){super(),this.value=t}serialize(t){t.serializeVariantIndex(1),this.value.serialize(t)}static load(t){const r=Z7.deserialize(t);return new ne(r)}}class Un extends re{constructor(t){super(),this.value=t}serialize(t){t.serializeVariantIndex(2),q2.serializeVectorVectorU8(this.value,t)}static load(t){const r=q2.deserializeVectorVectorU8(t);return new Un(r)}}class Nn{constructor(t){this.value=t}serialize(t){q2.serializeVectorAccountAddress(this.value,t)}static deserialize(t){const r=q2.deserializeVectorAccountAddress(t);return new Nn(r)}}class g8{constructor(t,r){this.data=t,this.authenticator=r}serialize(t){this.data.serialize(t),this.authenticator.serialize(t)}static deserialize(t){const r=j8.deserialize(t),n=z8.deserialize(t);return new g8(r,n)}}class j8{constructor(t,r,n,i,o){this.sender=t,this.sequence_number=r,this.chain_id=n,this.max_gas_amount=i,this.action=o}serialize(t){this.sender.serialize(t),t.serializeU64(this.sequence_number),t.serializeU64(this.chain_id),t.serializeU64(this.max_gas_amount),this.action.serialize(t)}static deserialize(t){const r=Y0.deserialize(t),n=t.deserializeU64(),i=t.deserializeU64(),o=t.deserializeU64(),s=re.deserialize(t);return new j8(r,n,i,o,s)}}class $n{constructor(t,r,n){this.code=t,this.ty_args=r,this.args=n}serialize(t){t.serializeBytes(this.code),q2.serializeVectorTypeTag(this.ty_args,t),q2.serializeVectorVectorU8(this.args,t)}static deserialize(t){const r=t.deserializeBytes(),n=q2.deserializeVectorTypeTag(t),i=q2.deserializeVectorVectorU8(t);return new $n(r,n,i)}}class ie{constructor(t,r,n,i){this.address=t,this.module=r,this.name=n,this.type_args=i}serialize(t){this.address.serialize(t),this.module.serialize(t),this.name.serialize(t),q2.serializeVectorTypeTag(this.type_args,t)}static deserialize(t){const r=Y0.deserialize(t),n=f4.deserialize(t),i=f4.deserialize(t),o=q2.deserializeVectorTypeTag(t);return new ie(r,n,i,o)}}class m0{static deserialize(t){const r=t.deserializeVariantIndex();switch(r){case 0:return oe.load(t);case 1:return se.load(t);case 2:return ae.load(t);case 3:return ue.load(t);case 4:return le.load(t);case 5:return ce.load(t);case 6:return fe.load(t);case 7:return de.load(t);case 8:return he.load(t);case 9:return pe.load(t);case 10:return ye.load(t);default:throw new Error("Unknown variant index for TypeTag: "+r)}}}class oe extends m0{constructor(){super()}serialize(t){t.serializeVariantIndex(0)}static load(t){return new oe}}class se extends m0{constructor(){super()}serialize(t){t.serializeVariantIndex(1)}static load(t){return new se}}class ae extends m0{constructor(){super()}serialize(t){t.serializeVariantIndex(2)}static load(t){return new ae}}class ue extends m0{constructor(){super()}serialize(t){t.serializeVariantIndex(3)}static load(t){return new ue}}class le extends m0{constructor(){super()}serialize(t){t.serializeVariantIndex(4)}static load(t){return new le}}class ce extends m0{constructor(){super()}serialize(t){t.serializeVariantIndex(5)}static load(t){return new ce}}class fe extends m0{constructor(t){super(),this.value=t}serialize(t){t.serializeVariantIndex(6),this.value.serialize(t)}static load(t){const r=m0.deserialize(t);return new fe(r)}}class de extends m0{constructor(t){super(),this.value=t}serialize(t){t.serializeVariantIndex(7),this.value.serialize(t)}static load(t){const r=ie.deserialize(t);return new de(r)}}class he extends m0{constructor(){super()}serialize(t){t.serializeVariantIndex(8)}static load(t){return new he}}class pe extends m0{constructor(){super()}serialize(t){t.serializeVariantIndex(9)}static load(t){return new pe}}class ye extends m0{constructor(){super()}serialize(t){t.serializeVariantIndex(10)}static load(t){return new ye}}class q2{static serializeArray32U8Array(t,r){t.forEach(n=>{r.serializeU8(n[0])})}static deserializeArray32U8Array(t){const r=[];for(let n=0;n<32;n++)r.push([t.deserializeU8()]);return r}static serializeVectorAccountAddress(t,r){r.serializeLen(t.length),t.forEach(n=>{n.serialize(r)})}static deserializeVectorAccountAddress(t){const r=t.deserializeLen(),n=[];for(let i=0;i<r;i++)n.push(Y0.deserialize(t));return n}static serializeVectorTypeTag(t,r){r.serializeLen(t.length),t.forEach(n=>{n.serialize(r)})}static deserializeVectorTypeTag(t){const r=t.deserializeLen(),n=[];for(let i=0;i<r;i++)n.push(m0.deserialize(t));return n}static serializeVectorU8(t,r){r.serializeLen(t.length),t.forEach(n=>{r.serializeU8(n)})}static deserializeVectorU8(t){const r=t.deserializeLen(),n=[];for(let i=0;i<r;i++)n.push(t.deserializeU8());return n}static serializeVectorVectorU8(t,r){r.serializeLen(t.length),t.forEach(n=>{q2.serializeVectorU8(n,r)})}static deserializeVectorVectorU8(t){const r=t.deserializeLen(),n=[];for(let i=0;i<r;i++)n.push(q2.deserializeVectorU8(t));return n}}class Ln{constructor(t){this.bytes=t}serialize(t){q2.serializeVectorU8(this.bytes,t)}static deserialize(t){const r=q2.deserializeVectorU8(t);return new Ln(r)}}class Mn{constructor(t){this.bytes=t}serialize(t){q2.serializeVectorU8(this.bytes,t)}static deserialize(t){const r=q2.deserializeVectorU8(t);return new Mn(r)}}const Ox=BigInt("0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"),Dx=BigInt(128);class Ux{constructor(t){this.value=t}serialize(t){const r=BigInt(this.value.toString())&Ox,n=BigInt(this.value.toString())>>Dx;t.serializeU128(r),t.serializeU128(n)}}let Nx=class{constructor(t,r){this.multichain_id=t,this.raw_address=r}serialize(t){t.serializeU64(this.multichain_id),q2.serializeVectorU8(this.raw_address,t)}};const $x="logger/5.7.0";let xs=!1,ws=!1;const P9={debug:1,default:2,info:2,warning:3,error:4,off:5};let _s=P9.default,it=null;function Lx(){try{const e=[];if(["NFD","NFC","NFKD","NFKC"].forEach(t=>{try{if("test".normalize(t)!=="test")throw new Error("bad normalize")}catch{e.push(t)}}),e.length)throw new Error("missing "+e.join(", "));if(String.fromCharCode(233).normalize("NFD")!==String.fromCharCode(101,769))throw new Error("broken implementation")}catch(e){return e.message}return null}const Es=Lx();var cr;(function(e){e.DEBUG="DEBUG",e.INFO="INFO",e.WARNING="WARNING",e.ERROR="ERROR",e.OFF="OFF"})(cr||(cr={}));var z0;(function(e){e.UNKNOWN_ERROR="UNKNOWN_ERROR",e.NOT_IMPLEMENTED="NOT_IMPLEMENTED",e.UNSUPPORTED_OPERATION="UNSUPPORTED_OPERATION",e.NETWORK_ERROR="NETWORK_ERROR",e.SERVER_ERROR="SERVER_ERROR",e.TIMEOUT="TIMEOUT",e.BUFFER_OVERRUN="BUFFER_OVERRUN",e.NUMERIC_FAULT="NUMERIC_FAULT",e.MISSING_NEW="MISSING_NEW",e.INVALID_ARGUMENT="INVALID_ARGUMENT",e.MISSING_ARGUMENT="MISSING_ARGUMENT",e.UNEXPECTED_ARGUMENT="UNEXPECTED_ARGUMENT",e.CALL_EXCEPTION="CALL_EXCEPTION",e.INSUFFICIENT_FUNDS="INSUFFICIENT_FUNDS",e.NONCE_EXPIRED="NONCE_EXPIRED",e.REPLACEMENT_UNDERPRICED="REPLACEMENT_UNDERPRICED",e.UNPREDICTABLE_GAS_LIMIT="UNPREDICTABLE_GAS_LIMIT",e.TRANSACTION_REPLACED="TRANSACTION_REPLACED",e.ACTION_REJECTED="ACTION_REJECTED"})(z0||(z0={}));const Ss="0123456789abcdef";class g3{constructor(t){Object.defineProperty(this,"version",{enumerable:!0,value:t,writable:!1})}_log(t,r){const n=t.toLowerCase();P9[n]==null&&this.throwArgumentError("invalid log level name","logLevel",t),!(_s>P9[n])&&console.log.apply(console,r)}debug(...t){this._log(g3.levels.DEBUG,t)}info(...t){this._log(g3.levels.INFO,t)}warn(...t){this._log(g3.levels.WARNING,t)}makeError(t,r,n){if(ws)return this.makeError("censored error",r,{});r||(r=g3.errors.UNKNOWN_ERROR),n||(n={});const i=[];Object.keys(n).forEach(l=>{const u=n[l];try{if(u instanceof Uint8Array){let h="";for(let y=0;y<u.length;y++)h+=Ss[u[y]>>4],h+=Ss[u[y]&15];i.push(l+"=Uint8Array(0x"+h+")")}else i.push(l+"="+JSON.stringify(u))}catch{i.push(l+"="+JSON.stringify(n[l].toString()))}}),i.push(`code=${r}`),i.push(`version=${this.version}`);const o=t;let s="";switch(r){case z0.NUMERIC_FAULT:{s="NUMERIC_FAULT";const l=t;switch(l){case"overflow":case"underflow":case"division-by-zero":s+="-"+l;break;case"negative-power":case"negative-width":s+="-unsupported";break;case"unbound-bitwise-result":s+="-unbound-result";break}break}case z0.CALL_EXCEPTION:case z0.INSUFFICIENT_FUNDS:case z0.MISSING_NEW:case z0.NONCE_EXPIRED:case z0.REPLACEMENT_UNDERPRICED:case z0.TRANSACTION_REPLACED:case z0.UNPREDICTABLE_GAS_LIMIT:s=r;break}s&&(t+=" [ See: https://links.ethers.org/v5-errors-"+s+" ]"),i.length&&(t+=" ("+i.join(", ")+")");const a=new Error(t);return a.reason=o,a.code=r,Object.keys(n).forEach(function(l){a[l]=n[l]}),a}throwError(t,r,n){throw this.makeError(t,r,n)}throwArgumentError(t,r,n){return this.throwError(t,g3.errors.INVALID_ARGUMENT,{argument:r,value:n})}assert(t,r,n,i){t||this.throwError(r,n,i)}assertArgument(t,r,n,i){t||this.throwArgumentError(r,n,i)}checkNormalize(t){Es&&this.throwError("platform missing String.prototype.normalize",g3.errors.UNSUPPORTED_OPERATION,{operation:"String.prototype.normalize",form:Es})}checkSafeUint53(t,r){typeof t=="number"&&(r==null&&(r="value not safe"),(t<0||t>=9007199254740991)&&this.throwError(r,g3.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"out-of-safe-range",value:t}),t%1&&this.throwError(r,g3.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"non-integer",value:t}))}checkArgumentCount(t,r,n){n?n=": "+n:n="",t<r&&this.throwError("missing argument"+n,g3.errors.MISSING_ARGUMENT,{count:t,expectedCount:r}),t>r&&this.throwError("too many arguments"+n,g3.errors.UNEXPECTED_ARGUMENT,{count:t,expectedCount:r})}checkNew(t,r){(t===Object||t==null)&&this.throwError("missing new",g3.errors.MISSING_NEW,{name:r.name})}checkAbstract(t,r){t===r?this.throwError("cannot instantiate abstract class "+JSON.stringify(r.name)+" directly; use a sub-class",g3.errors.UNSUPPORTED_OPERATION,{name:t.name,operation:"new"}):(t===Object||t==null)&&this.throwError("missing new",g3.errors.MISSING_NEW,{name:r.name})}static globalLogger(){return it||(it=new g3($x)),it}static setCensorship(t,r){if(!t&&r&&this.globalLogger().throwError("cannot permanently disable censorship",g3.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"}),xs){if(!t)return;this.globalLogger().throwError("error censorship permanent",g3.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"})}ws=!!t,xs=!!r}static setLogLevel(t){const r=P9[t.toLowerCase()];if(r==null){g3.globalLogger().warn("invalid log level - "+t);return}_s=r}static from(t){return new g3(t)}}g3.errors=z0;g3.levels=cr;const Mx="bytes/5.7.0",ot=new g3(Mx);function zx(e){return!!e.toHexString}function bs(e){return typeof e=="number"&&e==e&&e%1===0}function jx(e){if(e==null)return!1;if(e.constructor===Uint8Array)return!0;if(typeof e=="string"||!bs(e.length)||e.length<0)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(!bs(r)||r<0||r>=256)return!1}return!0}function Hx(e,t){return!(typeof e!="string"||!e.match(/^0x[0-9A-Fa-f]*$/)||t&&e.length!==2+2*t)}const st="0123456789abcdef";function qx(e,t){if(t||(t={}),typeof e=="number"){ot.checkSafeUint53(e,"invalid hexlify value");let r="";for(;e;)r=st[e&15]+r,e=Math.floor(e/16);return r.length?(r.length%2&&(r="0"+r),"0x"+r):"0x00"}if(typeof e=="bigint")return e=e.toString(16),e.length%2?"0x0"+e:"0x"+e;if(t.allowMissingPrefix&&typeof e=="string"&&e.substring(0,2)!=="0x"&&(e="0x"+e),zx(e))return e.toHexString();if(Hx(e))return e.length%2&&(t.hexPad==="left"?e="0x0"+e.substring(2):t.hexPad==="right"?e+="0":ot.throwArgumentError("hex data is odd-length","value",e)),e.toLowerCase();if(jx(e)){let r="0x";for(let n=0;n<e.length;n++){let i=e[n];r+=st[(i&240)>>4]+st[i&15]}return r}return ot.throwArgumentError("invalid hexlify value","value",e)}function yc(e){return`0x${Array.from(e).map(r=>{const n=Math.floor(r);return(n<0?256+n:n).toString(16).padStart(2,"0")}).join("")}`}function zn(e,t){let r=e.startsWith("0x")?e.substring(2):e;t&&r.length<t?r=Wx(r,t):!t&&r.length%2!==0&&(r=`0${r}`);const n=new Uint8Array(r.length/2);for(let i=0;i<r.length;i+=2)n[i/2]=parseInt(r.substring(i,i+2),16);return n}function Wx(e,t,r="0"){return new Array(t-e.length+1).join(r)+e}function c4(e){if(!Number.isSafeInteger(e)||e<0)throw new Error(`Wrong positive integer: ${e}`)}function jn(e,...t){if(!(e instanceof Uint8Array))throw new Error("Expected Uint8Array");if(t.length>0&&!t.includes(e.length))throw new Error(`Expected Uint8Array of length ${t}, not of length=${e.length}`)}function vc(e){if(typeof e!="function"||typeof e.create!="function")throw new Error("Hash should be wrapped by utils.wrapConstructor");c4(e.outputLen),c4(e.blockLen)}function p5(e,t=!0){if(e.destroyed)throw new Error("Hash instance has been destroyed");if(t&&e.finished)throw new Error("Hash#digest() has already been called")}function Hn(e,t){jn(e);const r=t.outputLen;if(e.length<r)throw new Error(`digestInto() expects output buffer of length at least ${r}`)}const v9=BigInt(2**32-1),fr=BigInt(32);function gc(e,t=!1){return t?{h:Number(e&v9),l:Number(e>>fr&v9)}:{h:Number(e>>fr&v9)|0,l:Number(e&v9)|0}}function mc(e,t=!1){let r=new Uint32Array(e.length),n=new Uint32Array(e.length);for(let i=0;i<e.length;i++){const{h:o,l:s}=gc(e[i],t);[r[i],n[i]]=[o,s]}return[r,n]}const Vx=(e,t)=>BigInt(e>>>0)<<fr|BigInt(t>>>0),Kx=(e,t,r)=>e>>>r,Gx=(e,t,r)=>e<<32-r|t>>>r,Qx=(e,t,r)=>e>>>r|t<<32-r,Yx=(e,t,r)=>e<<32-r|t>>>r,Jx=(e,t,r)=>e<<64-r|t>>>r-32,Xx=(e,t,r)=>e>>>r-32|t<<64-r,Zx=(e,t)=>t,ew=(e,t)=>e,xc=(e,t,r)=>e<<r|t>>>32-r,wc=(e,t,r)=>t<<r|e>>>32-r,_c=(e,t,r)=>t<<r-32|e>>>64-r,Ec=(e,t,r)=>e<<r-32|t>>>64-r;function tw(e,t,r,n){const i=(t>>>0)+(n>>>0);return{h:e+r+(i/2**32|0)|0,l:i|0}}const rw=(e,t,r)=>(e>>>0)+(t>>>0)+(r>>>0),nw=(e,t,r,n)=>t+r+n+(e/2**32|0)|0,iw=(e,t,r,n)=>(e>>>0)+(t>>>0)+(r>>>0)+(n>>>0),ow=(e,t,r,n,i)=>t+r+n+i+(e/2**32|0)|0,sw=(e,t,r,n,i)=>(e>>>0)+(t>>>0)+(r>>>0)+(n>>>0)+(i>>>0),aw=(e,t,r,n,i,o)=>t+r+n+i+o+(e/2**32|0)|0,uw={fromBig:gc,split:mc,toBig:Vx,shrSH:Kx,shrSL:Gx,rotrSH:Qx,rotrSL:Yx,rotrBH:Jx,rotrBL:Xx,rotr32H:Zx,rotr32L:ew,rotlSH:xc,rotlSL:wc,rotlBH:_c,rotlBL:Ec,add:tw,add3L:rw,add3H:nw,add4L:iw,add4H:ow,add5H:aw,add5L:sw},f2=uw,[Sc,bc,Cc]=[[],[],[]],lw=BigInt(0),O6=BigInt(1),cw=BigInt(2),fw=BigInt(7),dw=BigInt(256),hw=BigInt(113);for(let e=0,t=O6,r=1,n=0;e<24;e++){[r,n]=[n,(2*r+3*n)%5],Sc.push(2*(5*n+r)),bc.push((e+1)*(e+2)/2%64);let i=lw;for(let o=0;o<7;o++)t=(t<<O6^(t>>fw)*hw)%dw,t&cw&&(i^=O6<<(O6<<BigInt(o))-O6);Cc.push(i)}const[pw,yw]=mc(Cc,!0),Cs=(e,t,r)=>r>32?_c(e,t,r):xc(e,t,r),As=(e,t,r)=>r>32?Ec(e,t,r):wc(e,t,r);function vw(e,t=24){const r=new Uint32Array(10);for(let n=24-t;n<24;n++){for(let s=0;s<10;s++)r[s]=e[s]^e[s+10]^e[s+20]^e[s+30]^e[s+40];for(let s=0;s<10;s+=2){const a=(s+8)%10,l=(s+2)%10,u=r[l],h=r[l+1],y=Cs(u,h,1)^r[a],x=As(u,h,1)^r[a+1];for(let b=0;b<50;b+=10)e[s+b]^=y,e[s+b+1]^=x}let i=e[2],o=e[3];for(let s=0;s<24;s++){const a=bc[s],l=Cs(i,o,a),u=As(i,o,a),h=Sc[s];i=e[h],o=e[h+1],e[h]=l,e[h+1]=u}for(let s=0;s<50;s+=10){for(let a=0;a<10;a++)r[a]=e[s+a];for(let a=0;a<10;a++)e[s+a]^=~r[(a+2)%10]&r[(a+4)%10]}e[0]^=pw[n],e[1]^=yw[n]}r.fill(0)}class qn extends U7{constructor(t,r,n,i=!1,o=24){if(super(),this.blockLen=t,this.suffix=r,this.outputLen=n,this.enableXOF=i,this.rounds=o,this.pos=0,this.posOut=0,this.finished=!1,this.destroyed=!1,c4(n),0>=this.blockLen||this.blockLen>=200)throw new Error("Sha3 supports only keccak-f1600 function");this.state=new Uint8Array(200),this.state32=v8(this.state)}keccak(){vw(this.state32,this.rounds),this.posOut=0,this.pos=0}update(t){p5(this);const{blockLen:r,state:n}=this;t=G0(t);const i=t.length;for(let o=0;o<i;){const s=Math.min(r-this.pos,i-o);for(let a=0;a<s;a++)n[this.pos++]^=t[o++];this.pos===r&&this.keccak()}return this}finish(){if(this.finished)return;this.finished=!0;const{state:t,suffix:r,pos:n,blockLen:i}=this;t[n]^=r,r&128&&n===i-1&&this.keccak(),t[i-1]^=128,this.keccak()}writeInto(t){p5(this,!1),jn(t),this.finish();const r=this.state,{blockLen:n}=this;for(let i=0,o=t.length;i<o;){this.posOut>=n&&this.keccak();const s=Math.min(n-this.posOut,o-i);t.set(r.subarray(this.posOut,this.posOut+s),i),this.posOut+=s,i+=s}return t}xofInto(t){if(!this.enableXOF)throw new Error("XOF is not possible for this instance");return this.writeInto(t)}xof(t){return c4(t),this.xofInto(new Uint8Array(t))}digestInto(t){if(Hn(t,this),this.finished)throw new Error("digest() was already called");return this.writeInto(t),this.destroy(),t}digest(){return this.digestInto(new Uint8Array(this.outputLen))}destroy(){this.destroyed=!0,this.state.fill(0)}_cloneInto(t){const{blockLen:r,suffix:n,outputLen:i,rounds:o,enableXOF:s}=this;return t||(t=new qn(r,n,i,s,o)),t.state32.set(this.state32),t.pos=this.pos,t.posOut=this.posOut,t.finished=this.finished,t.rounds=o,t.suffix=n,t.outputLen=i,t.enableXOF=s,t.destroyed=this.destroyed,t}}const gw=(e,t,r)=>$l(()=>new qn(t,e,r)),Wn=gw(6,136,256/8);function mw(e){return typeof e!="string"&&e instanceof Object?`${e.address}::${e.module}::${e.functionName}`:e}function xw(e){if(typeof e!="string")return e;const t=e.split("::",3);if(t.length!==3)throw new Error(`cannot parse ${e} into FunctionId`);return{address:c7(t[0]),module:t[1],functionName:t[2]}}function c7(e,t=!1){let r=e.toLowerCase();return!t&&r.startsWith("0x")&&(r=r.slice(2)),`0x${r.padStart(D7,"0")}`}function ww(e,t=!1){let r=e.toLowerCase();return!t&&r.startsWith("0x")&&(r=r.slice(2)),`${r.padStart(D7,"0")}`}function dr(e){if(typeof e=="string")return e;if("Vector"in e)return`Vector<${dr(e.Vector)}>`;if("Struct"in e){const t=e.Struct;let r=`${t.address}::${t.module}::${t.name}`;if(t.type_params){const n=t.type_params.map(dr).join(", ");r+=`<${n}>`}return r}throw new Error(`Unknown type tag: ${JSON.stringify(e)}`)}function Ac(e){let t=`${ww(e.address)}::${e.module}::${e.name}`;if(e.type_params&&e.type_params.length>0){const r=e.type_params.map(Bc).join(",");t+=`<${r}>`}return t}function Bc(e){if(typeof e=="string")return e.toLocaleLowerCase();if("Vector"in e)return`vector<${Bc(e.Vector)}>`;if("Struct"in e)return Ac(e.Struct);throw new Error(`Unknown TypeTag: ${JSON.stringify(e)}`)}function _w(e){const t=Ac(e),r=Wn(t);return qx(r)}function Tc(e,t,r){const n=xw(e),i=new Z7(new ee(new te(Ic(n.address),new f4(n.module)),new f4(n.functionName)),t.map(o=>Vn(o)),bw(r));return new ne(i)}function Vn(e){if(e==="Bool")return new oe;if(e==="U8")return new se;if(e==="U16")return new he;if(e==="U32")return new pe;if(e==="U64")return new ae;if(e==="U128")return new ue;if(e==="U256")return new ye;if(e==="Address")return new le;if(e==="Signer")return new ce;if(e.Vector)return new fe(Vn(e.Vector));if(e.Struct)return new de(Ew(e.Struct));throw new Error(`invalid type tag: ${e}`)}function Ew(e){return new ie(Ic(e.address),new f4(e.module),new f4(e.name),e.type_params?e.type_params.map(t=>Vn(t)):[])}function Ic(e){const t=zn(e,32),r=[];for(let n=0;n<t.length;n++)r.push([t[n]]);return new Y0(r)}const at=32;function Bs(e){let t=zn(e),r=[];for(let n=0;n<t.length;n+=at){let i=t.slice(n,n+at);if(i.length!==at)throw new Error("Invalid chunk size");const o=[];for(let s=0;s<i.length;s++)o.push([i[s]]);r.push(new Y0(o))}return new Nn(r)}function Sw(e){return Array.from(e)}function Ts(e){const t=new Array;for(let r=0;r<e.length;r++)t.push(e.charCodeAt(r));return t}function bw(e){return e.map(t=>Sw(t))}function Kn(e){const t=e.startsWith("0x")?e.slice(2):e;if(t.length!==D7)throw new Error("Invalid Rooch address");const r=[];for(let n=0;n<t.length;n+=2){const i=parseInt(t.slice(n,n+2),16);r.push([i])}return r}function X6(e){const t=e.startsWith("0x")?e.slice(2):e,r=[];for(let n=0;n<t.length;n+=2){const i=parseInt(t.slice(n,n+2),16);r.push(i)}return r}function Fc(e,t,r){if(t==="Bool")r.serializeBool(e);else if(t==="U8")r.serializeU8(e);else if(t==="U16")r.serializeU16(e);else if(t==="U32")r.serializeU32(e);else if(t==="U64")r.serializeU64(e);else if(t==="U128")r.serializeU128(e);else if(t==="U256")new Ux(e).serialize(r);else if(t==="Address"){const n=Kn(c7(e));new Y0(n).serialize(r)}else if(t==="Ascii"){const n=Ts(e);new Mn(n).serialize(r)}else if(t==="String"){const n=Ts(e);new Ln(n).serialize(r)}else if(t.Vector){const n=e;r.serializeLen(n.length);for(let i of n)Fc(i,t.Vector,r)}else if(t.Struct)e.serialize(r);else if(t==="ObjectID"){let n=c7(e);Bs(n).serialize(r)}else if(t==="Object"){const n=_w(e);Bs(n).serialize(r)}else if(t==="Raw"){const n=e;r.serializeLen(n.length);for(let i of n)r.serializeU8(i)}}function hr(e){const t=new b4;return Fc(e.value,e.type,t),t.getBytes()}function Rc(e){return Array.from(e,t=>t)}const pr={ED25519:0};function Cw({signature:e,signatureScheme:t,pubKey:r}){const n=r.toBytes(),i=new Uint8Array(1+e.length+n.length);return i.set([pr[t]]),i.set(e,1),i.set(n,1+e.length),i}class kc extends U7{constructor(t,r){super(),this.finished=!1,this.destroyed=!1,vc(t);const n=G0(r);if(this.iHash=t.create(),typeof this.iHash.update!="function")throw new Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;const i=this.blockLen,o=new Uint8Array(i);o.set(n.length>i?t.create().update(n).digest():n);for(let s=0;s<o.length;s++)o[s]^=54;this.iHash.update(o),this.oHash=t.create();for(let s=0;s<o.length;s++)o[s]^=106;this.oHash.update(o),o.fill(0)}update(t){return p5(this),this.iHash.update(t),this}digestInto(t){p5(this),jn(t,this.outputLen),this.finished=!0,this.iHash.digestInto(t),this.oHash.update(t),this.oHash.digestInto(t),this.destroy()}digest(){const t=new Uint8Array(this.oHash.outputLen);return this.digestInto(t),t}_cloneInto(t){t||(t=Object.create(Object.getPrototypeOf(this),{}));const{oHash:r,iHash:n,finished:i,destroyed:o,blockLen:s,outputLen:a}=this;return t=t,t.finished=i,t.destroyed=o,t.blockLen=s,t.outputLen=a,t.oHash=r._cloneInto(t.oHash),t.iHash=n._cloneInto(t.iHash),t}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}const ve=(e,t,r)=>new kc(e,t).update(r).digest();ve.create=(e,t)=>new kc(e,t);function Aw(e,t,r,n){vc(e);const i=kp({dkLen:32,asyncTick:10},n),{c:o,dkLen:s,asyncTick:a}=i;if(c4(o),c4(s),c4(a),o<1)throw new Error("PBKDF2: iterations (c) should be >= 1");const l=G0(t),u=G0(r),h=new Uint8Array(s),y=ve.create(e,l),x=y._cloneInto().update(u);return{c:o,dkLen:s,asyncTick:a,DK:h,PRF:y,PRFSalt:x}}function Bw(e,t,r,n,i){return e.destroy(),t.destroy(),n&&n.destroy(),i.fill(0),r}function Tw(e,t,r,n){const{c:i,dkLen:o,DK:s,PRF:a,PRFSalt:l}=Aw(e,t,r,n);let u;const h=new Uint8Array(4),y=R9(h),x=new Uint8Array(a.outputLen);for(let b=1,C=0;C<o;b++,C+=a.outputLen){const T=s.subarray(C,C+a.outputLen);y.setInt32(0,b,!1),(u=l._cloneInto(u)).update(h).digestInto(x),T.set(x.subarray(0,T.length));for(let k=1;k<i;k++){a._cloneInto(u).update(x).digestInto(x);for(let S=0;S<T.length;S++)T[S]^=x[S]}}return Bw(a,l,s,u,x)}function Iw(e,t,r,n){if(typeof e.setBigUint64=="function")return e.setBigUint64(t,r,n);const i=BigInt(32),o=BigInt(4294967295),s=Number(r>>i&o),a=Number(r&o),l=n?4:0,u=n?0:4;e.setUint32(t+l,s,n),e.setUint32(t+u,a,n)}class Fw extends U7{constructor(t,r,n,i){super(),this.blockLen=t,this.outputLen=r,this.padOffset=n,this.isLE=i,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(t),this.view=R9(this.buffer)}update(t){p5(this);const{view:r,buffer:n,blockLen:i}=this;t=G0(t);const o=t.length;for(let s=0;s<o;){const a=Math.min(i-this.pos,o-s);if(a===i){const l=R9(t);for(;i<=o-s;s+=i)this.process(l,s);continue}n.set(t.subarray(s,s+a),this.pos),this.pos+=a,s+=a,this.pos===i&&(this.process(r,0),this.pos=0)}return this.length+=t.length,this.roundClean(),this}digestInto(t){p5(this),Hn(t,this),this.finished=!0;const{buffer:r,view:n,blockLen:i,isLE:o}=this;let{pos:s}=this;r[s++]=128,this.buffer.subarray(s).fill(0),this.padOffset>i-s&&(this.process(n,0),s=0);for(let y=s;y<i;y++)r[y]=0;Iw(n,i-8,BigInt(this.length*8),o),this.process(n,0);const a=R9(t),l=this.outputLen;if(l%4)throw new Error("_sha2: outputLen should be aligned to 32bit");const u=l/4,h=this.get();if(u>h.length)throw new Error("_sha2: outputLen bigger than state");for(let y=0;y<u;y++)a.setUint32(4*y,h[y],o)}digest(){const{buffer:t,outputLen:r}=this;this.digestInto(t);const n=t.slice(0,r);return this.destroy(),n}_cloneInto(t){t||(t=new this.constructor),t.set(...this.get());const{blockLen:r,buffer:n,length:i,finished:o,destroyed:s,pos:a}=this;return t.length=i,t.pos=a,t.finished=o,t.destroyed=s,i%r&&t.buffer.set(n),t}}const[Rw,kw]=(()=>f2.split(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map(e=>BigInt(e))))(),N4=new Uint32Array(80),$4=new Uint32Array(80);class Pw extends Fw{constructor(){super(128,64,16,!1),this.Ah=1779033703,this.Al=-205731576,this.Bh=-1150833019,this.Bl=-2067093701,this.Ch=1013904242,this.Cl=-23791573,this.Dh=-1521486534,this.Dl=1595750129,this.Eh=1359893119,this.El=-1377402159,this.Fh=-1694144372,this.Fl=725511199,this.Gh=528734635,this.Gl=-79577749,this.Hh=1541459225,this.Hl=327033209}get(){const{Ah:t,Al:r,Bh:n,Bl:i,Ch:o,Cl:s,Dh:a,Dl:l,Eh:u,El:h,Fh:y,Fl:x,Gh:b,Gl:C,Hh:T,Hl:k}=this;return[t,r,n,i,o,s,a,l,u,h,y,x,b,C,T,k]}set(t,r,n,i,o,s,a,l,u,h,y,x,b,C,T,k){this.Ah=t|0,this.Al=r|0,this.Bh=n|0,this.Bl=i|0,this.Ch=o|0,this.Cl=s|0,this.Dh=a|0,this.Dl=l|0,this.Eh=u|0,this.El=h|0,this.Fh=y|0,this.Fl=x|0,this.Gh=b|0,this.Gl=C|0,this.Hh=T|0,this.Hl=k|0}process(t,r){for(let A=0;A<16;A++,r+=4)N4[A]=t.getUint32(r),$4[A]=t.getUint32(r+=4);for(let A=16;A<80;A++){const N=N4[A-15]|0,H=$4[A-15]|0,W=f2.rotrSH(N,H,1)^f2.rotrSH(N,H,8)^f2.shrSH(N,H,7),Q=f2.rotrSL(N,H,1)^f2.rotrSL(N,H,8)^f2.shrSL(N,H,7),V=N4[A-2]|0,y2=$4[A-2]|0,h2=f2.rotrSH(V,y2,19)^f2.rotrBH(V,y2,61)^f2.shrSH(V,y2,6),a3=f2.rotrSL(V,y2,19)^f2.rotrBL(V,y2,61)^f2.shrSL(V,y2,6),k3=f2.add4L(Q,a3,$4[A-7],$4[A-16]),z3=f2.add4H(k3,W,h2,N4[A-7],N4[A-16]);N4[A]=z3|0,$4[A]=k3|0}let{Ah:n,Al:i,Bh:o,Bl:s,Ch:a,Cl:l,Dh:u,Dl:h,Eh:y,El:x,Fh:b,Fl:C,Gh:T,Gl:k,Hh:S,Hl:E}=this;for(let A=0;A<80;A++){const N=f2.rotrSH(y,x,14)^f2.rotrSH(y,x,18)^f2.rotrBH(y,x,41),H=f2.rotrSL(y,x,14)^f2.rotrSL(y,x,18)^f2.rotrBL(y,x,41),W=y&b^~y&T,Q=x&C^~x&k,V=f2.add5L(E,H,Q,kw[A],$4[A]),y2=f2.add5H(V,S,N,W,Rw[A],N4[A]),h2=V|0,a3=f2.rotrSH(n,i,28)^f2.rotrBH(n,i,34)^f2.rotrBH(n,i,39),k3=f2.rotrSL(n,i,28)^f2.rotrBL(n,i,34)^f2.rotrBL(n,i,39),z3=n&o^n&a^o&a,U0=i&s^i&l^s&l;S=T|0,E=k|0,T=b|0,k=C|0,b=y|0,C=x|0,{h:y,l:x}=f2.add(u|0,h|0,y2|0,h2|0),u=a|0,h=l|0,a=o|0,l=s|0,o=n|0,s=i|0;const N0=f2.add3L(h2,k3,U0);n=f2.add3H(N0,y2,a3,z3),i=N0|0}({h:n,l:i}=f2.add(this.Ah|0,this.Al|0,n|0,i|0)),{h:o,l:s}=f2.add(this.Bh|0,this.Bl|0,o|0,s|0),{h:a,l}=f2.add(this.Ch|0,this.Cl|0,a|0,l|0),{h:u,l:h}=f2.add(this.Dh|0,this.Dl|0,u|0,h|0),{h:y,l:x}=f2.add(this.Eh|0,this.El|0,y|0,x|0),{h:b,l:C}=f2.add(this.Fh|0,this.Fl|0,b|0,C|0),{h:T,l:k}=f2.add(this.Gh|0,this.Gl|0,T|0,k|0),{h:S,l:E}=f2.add(this.Hh|0,this.Hl|0,S|0,E|0),this.set(n,i,o,s,a,l,u,h,y,x,b,C,T,k,S,E)}roundClean(){N4.fill(0),$4.fill(0)}destroy(){this.buffer.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}const Gn=$l(()=>new Pw);function Pc(e){if(typeof e!="string")throw new TypeError(`Invalid mnemonic type: ${typeof e}`);return e.normalize("NFKD")}function Ow(e){const t=Pc(e),r=t.split(" ");if(![12,15,18,21,24].includes(r.length))throw new Error("Invalid mnemonic");return{nfkd:t,words:r}}const Dw=e=>Pc(`mnemonic${e}`);function Uw(e,t=""){return Tw(Gn,Ow(e).nfkd,Dw(t),{c:2048,dkLen:64})}function Is(e){return!!/^m\/44'\/784'\/[0-9]+'\/[0-9]+'\/[0-9]+'+$/.test(e)}function Nw(e){return Uw(e,"")}function $w(e){return yc(Nw(e))}function Lw(e,t){if(e===t)return!0;if(e.length!==t.length)return!1;for(let r=0;r<e.length;r++)if(e[r]!==t[r])return!1;return!0}class Mw{equals(t){return Lw(this.toBytes(),t.toBytes())}toBase64(){return ar(this.toBytes())}toRoochPublicKey(){const t=this.toBytes(),r=new Uint8Array(t.length+1);return r.set([this.flag()]),r.set(t,1),ar(r)}}const ut=32;class zw{async signMessage(t){const r=Wn(t);return this.signMessageWithHashed(r)}async signMessageWithHashed(t){return{signature:Cw({signature:await this.sign(t),signatureScheme:this.getKeyScheme(),pubKey:this.getPublicKey()}),bytes:t}}}class jw extends zw{}function Hw(e){throw new Error('Could not dynamically require "'+e+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}var Oc={exports:{}};const qw={},Ww=Object.freeze(Object.defineProperty({__proto__:null,default:qw},Symbol.toStringTag,{value:"Module"})),Vw=Rr(Ww);(function(e){(function(t){var r=function(p){var m,v=new Float64Array(16);if(p)for(m=0;m<p.length;m++)v[m]=p[m];return v},n=function(){throw new Error("no PRNG")},i=new Uint8Array(16),o=new Uint8Array(32);o[0]=9;var s=r(),a=r([1]),l=r([56129,1]),u=r([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995]),h=r([61785,9906,39828,60374,45398,33411,5274,224,53552,61171,33010,6542,64743,22239,55772,9222]),y=r([54554,36645,11616,51542,42930,38181,51040,26924,56412,64982,57905,49316,21502,52590,14035,8553]),x=r([26200,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214]),b=r([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]);function C(p,m,v,c){p[m]=v>>24&255,p[m+1]=v>>16&255,p[m+2]=v>>8&255,p[m+3]=v&255,p[m+4]=c>>24&255,p[m+5]=c>>16&255,p[m+6]=c>>8&255,p[m+7]=c&255}function T(p,m,v,c,w){var R,P=0;for(R=0;R<w;R++)P|=p[m+R]^v[c+R];return(1&P-1>>>8)-1}function k(p,m,v,c){return T(p,m,v,c,16)}function S(p,m,v,c){return T(p,m,v,c,32)}function E(p,m,v,c){for(var w=c[0]&255|(c[1]&255)<<8|(c[2]&255)<<16|(c[3]&255)<<24,R=v[0]&255|(v[1]&255)<<8|(v[2]&255)<<16|(v[3]&255)<<24,P=v[4]&255|(v[5]&255)<<8|(v[6]&255)<<16|(v[7]&255)<<24,z=v[8]&255|(v[9]&255)<<8|(v[10]&255)<<16|(v[11]&255)<<24,Y=v[12]&255|(v[13]&255)<<8|(v[14]&255)<<16|(v[15]&255)<<24,l2=c[4]&255|(c[5]&255)<<8|(c[6]&255)<<16|(c[7]&255)<<24,t2=m[0]&255|(m[1]&255)<<8|(m[2]&255)<<16|(m[3]&255)<<24,z2=m[4]&255|(m[5]&255)<<8|(m[6]&255)<<16|(m[7]&255)<<24,n2=m[8]&255|(m[9]&255)<<8|(m[10]&255)<<16|(m[11]&255)<<24,v2=m[12]&255|(m[13]&255)<<8|(m[14]&255)<<16|(m[15]&255)<<24,m2=c[8]&255|(c[9]&255)<<8|(c[10]&255)<<16|(c[11]&255)<<24,T2=v[16]&255|(v[17]&255)<<8|(v[18]&255)<<16|(v[19]&255)<<24,C2=v[20]&255|(v[21]&255)<<8|(v[22]&255)<<16|(v[23]&255)<<24,x2=v[24]&255|(v[25]&255)<<8|(v[26]&255)<<16|(v[27]&255)<<24,_2=v[28]&255|(v[29]&255)<<8|(v[30]&255)<<16|(v[31]&255)<<24,w2=c[12]&255|(c[13]&255)<<8|(c[14]&255)<<16|(c[15]&255)<<24,o2=w,c2=R,r2=P,s2=z,u2=Y,Z=l2,D=t2,U=z2,q=n2,M=v2,j=m2,K=T2,d2=C2,I2=x2,k2=_2,F2=w2,B,O2=0;O2<20;O2+=2)B=o2+d2|0,u2^=B<<7|B>>>32-7,B=u2+o2|0,q^=B<<9|B>>>32-9,B=q+u2|0,d2^=B<<13|B>>>32-13,B=d2+q|0,o2^=B<<18|B>>>32-18,B=Z+c2|0,M^=B<<7|B>>>32-7,B=M+Z|0,I2^=B<<9|B>>>32-9,B=I2+M|0,c2^=B<<13|B>>>32-13,B=c2+I2|0,Z^=B<<18|B>>>32-18,B=j+D|0,k2^=B<<7|B>>>32-7,B=k2+j|0,r2^=B<<9|B>>>32-9,B=r2+k2|0,D^=B<<13|B>>>32-13,B=D+r2|0,j^=B<<18|B>>>32-18,B=F2+K|0,s2^=B<<7|B>>>32-7,B=s2+F2|0,U^=B<<9|B>>>32-9,B=U+s2|0,K^=B<<13|B>>>32-13,B=K+U|0,F2^=B<<18|B>>>32-18,B=o2+s2|0,c2^=B<<7|B>>>32-7,B=c2+o2|0,r2^=B<<9|B>>>32-9,B=r2+c2|0,s2^=B<<13|B>>>32-13,B=s2+r2|0,o2^=B<<18|B>>>32-18,B=Z+u2|0,D^=B<<7|B>>>32-7,B=D+Z|0,U^=B<<9|B>>>32-9,B=U+D|0,u2^=B<<13|B>>>32-13,B=u2+U|0,Z^=B<<18|B>>>32-18,B=j+M|0,K^=B<<7|B>>>32-7,B=K+j|0,q^=B<<9|B>>>32-9,B=q+K|0,M^=B<<13|B>>>32-13,B=M+q|0,j^=B<<18|B>>>32-18,B=F2+k2|0,d2^=B<<7|B>>>32-7,B=d2+F2|0,I2^=B<<9|B>>>32-9,B=I2+d2|0,k2^=B<<13|B>>>32-13,B=k2+I2|0,F2^=B<<18|B>>>32-18;o2=o2+w|0,c2=c2+R|0,r2=r2+P|0,s2=s2+z|0,u2=u2+Y|0,Z=Z+l2|0,D=D+t2|0,U=U+z2|0,q=q+n2|0,M=M+v2|0,j=j+m2|0,K=K+T2|0,d2=d2+C2|0,I2=I2+x2|0,k2=k2+_2|0,F2=F2+w2|0,p[0]=o2>>>0&255,p[1]=o2>>>8&255,p[2]=o2>>>16&255,p[3]=o2>>>24&255,p[4]=c2>>>0&255,p[5]=c2>>>8&255,p[6]=c2>>>16&255,p[7]=c2>>>24&255,p[8]=r2>>>0&255,p[9]=r2>>>8&255,p[10]=r2>>>16&255,p[11]=r2>>>24&255,p[12]=s2>>>0&255,p[13]=s2>>>8&255,p[14]=s2>>>16&255,p[15]=s2>>>24&255,p[16]=u2>>>0&255,p[17]=u2>>>8&255,p[18]=u2>>>16&255,p[19]=u2>>>24&255,p[20]=Z>>>0&255,p[21]=Z>>>8&255,p[22]=Z>>>16&255,p[23]=Z>>>24&255,p[24]=D>>>0&255,p[25]=D>>>8&255,p[26]=D>>>16&255,p[27]=D>>>24&255,p[28]=U>>>0&255,p[29]=U>>>8&255,p[30]=U>>>16&255,p[31]=U>>>24&255,p[32]=q>>>0&255,p[33]=q>>>8&255,p[34]=q>>>16&255,p[35]=q>>>24&255,p[36]=M>>>0&255,p[37]=M>>>8&255,p[38]=M>>>16&255,p[39]=M>>>24&255,p[40]=j>>>0&255,p[41]=j>>>8&255,p[42]=j>>>16&255,p[43]=j>>>24&255,p[44]=K>>>0&255,p[45]=K>>>8&255,p[46]=K>>>16&255,p[47]=K>>>24&255,p[48]=d2>>>0&255,p[49]=d2>>>8&255,p[50]=d2>>>16&255,p[51]=d2>>>24&255,p[52]=I2>>>0&255,p[53]=I2>>>8&255,p[54]=I2>>>16&255,p[55]=I2>>>24&255,p[56]=k2>>>0&255,p[57]=k2>>>8&255,p[58]=k2>>>16&255,p[59]=k2>>>24&255,p[60]=F2>>>0&255,p[61]=F2>>>8&255,p[62]=F2>>>16&255,p[63]=F2>>>24&255}function A(p,m,v,c){for(var w=c[0]&255|(c[1]&255)<<8|(c[2]&255)<<16|(c[3]&255)<<24,R=v[0]&255|(v[1]&255)<<8|(v[2]&255)<<16|(v[3]&255)<<24,P=v[4]&255|(v[5]&255)<<8|(v[6]&255)<<16|(v[7]&255)<<24,z=v[8]&255|(v[9]&255)<<8|(v[10]&255)<<16|(v[11]&255)<<24,Y=v[12]&255|(v[13]&255)<<8|(v[14]&255)<<16|(v[15]&255)<<24,l2=c[4]&255|(c[5]&255)<<8|(c[6]&255)<<16|(c[7]&255)<<24,t2=m[0]&255|(m[1]&255)<<8|(m[2]&255)<<16|(m[3]&255)<<24,z2=m[4]&255|(m[5]&255)<<8|(m[6]&255)<<16|(m[7]&255)<<24,n2=m[8]&255|(m[9]&255)<<8|(m[10]&255)<<16|(m[11]&255)<<24,v2=m[12]&255|(m[13]&255)<<8|(m[14]&255)<<16|(m[15]&255)<<24,m2=c[8]&255|(c[9]&255)<<8|(c[10]&255)<<16|(c[11]&255)<<24,T2=v[16]&255|(v[17]&255)<<8|(v[18]&255)<<16|(v[19]&255)<<24,C2=v[20]&255|(v[21]&255)<<8|(v[22]&255)<<16|(v[23]&255)<<24,x2=v[24]&255|(v[25]&255)<<8|(v[26]&255)<<16|(v[27]&255)<<24,_2=v[28]&255|(v[29]&255)<<8|(v[30]&255)<<16|(v[31]&255)<<24,w2=c[12]&255|(c[13]&255)<<8|(c[14]&255)<<16|(c[15]&255)<<24,o2=w,c2=R,r2=P,s2=z,u2=Y,Z=l2,D=t2,U=z2,q=n2,M=v2,j=m2,K=T2,d2=C2,I2=x2,k2=_2,F2=w2,B,O2=0;O2<20;O2+=2)B=o2+d2|0,u2^=B<<7|B>>>32-7,B=u2+o2|0,q^=B<<9|B>>>32-9,B=q+u2|0,d2^=B<<13|B>>>32-13,B=d2+q|0,o2^=B<<18|B>>>32-18,B=Z+c2|0,M^=B<<7|B>>>32-7,B=M+Z|0,I2^=B<<9|B>>>32-9,B=I2+M|0,c2^=B<<13|B>>>32-13,B=c2+I2|0,Z^=B<<18|B>>>32-18,B=j+D|0,k2^=B<<7|B>>>32-7,B=k2+j|0,r2^=B<<9|B>>>32-9,B=r2+k2|0,D^=B<<13|B>>>32-13,B=D+r2|0,j^=B<<18|B>>>32-18,B=F2+K|0,s2^=B<<7|B>>>32-7,B=s2+F2|0,U^=B<<9|B>>>32-9,B=U+s2|0,K^=B<<13|B>>>32-13,B=K+U|0,F2^=B<<18|B>>>32-18,B=o2+s2|0,c2^=B<<7|B>>>32-7,B=c2+o2|0,r2^=B<<9|B>>>32-9,B=r2+c2|0,s2^=B<<13|B>>>32-13,B=s2+r2|0,o2^=B<<18|B>>>32-18,B=Z+u2|0,D^=B<<7|B>>>32-7,B=D+Z|0,U^=B<<9|B>>>32-9,B=U+D|0,u2^=B<<13|B>>>32-13,B=u2+U|0,Z^=B<<18|B>>>32-18,B=j+M|0,K^=B<<7|B>>>32-7,B=K+j|0,q^=B<<9|B>>>32-9,B=q+K|0,M^=B<<13|B>>>32-13,B=M+q|0,j^=B<<18|B>>>32-18,B=F2+k2|0,d2^=B<<7|B>>>32-7,B=d2+F2|0,I2^=B<<9|B>>>32-9,B=I2+d2|0,k2^=B<<13|B>>>32-13,B=k2+I2|0,F2^=B<<18|B>>>32-18;p[0]=o2>>>0&255,p[1]=o2>>>8&255,p[2]=o2>>>16&255,p[3]=o2>>>24&255,p[4]=Z>>>0&255,p[5]=Z>>>8&255,p[6]=Z>>>16&255,p[7]=Z>>>24&255,p[8]=j>>>0&255,p[9]=j>>>8&255,p[10]=j>>>16&255,p[11]=j>>>24&255,p[12]=F2>>>0&255,p[13]=F2>>>8&255,p[14]=F2>>>16&255,p[15]=F2>>>24&255,p[16]=D>>>0&255,p[17]=D>>>8&255,p[18]=D>>>16&255,p[19]=D>>>24&255,p[20]=U>>>0&255,p[21]=U>>>8&255,p[22]=U>>>16&255,p[23]=U>>>24&255,p[24]=q>>>0&255,p[25]=q>>>8&255,p[26]=q>>>16&255,p[27]=q>>>24&255,p[28]=M>>>0&255,p[29]=M>>>8&255,p[30]=M>>>16&255,p[31]=M>>>24&255}function N(p,m,v,c){E(p,m,v,c)}function H(p,m,v,c){A(p,m,v,c)}var W=new Uint8Array([101,120,112,97,110,100,32,51,50,45,98,121,116,101,32,107]);function Q(p,m,v,c,w,R,P){var z=new Uint8Array(16),Y=new Uint8Array(64),l2,t2;for(t2=0;t2<16;t2++)z[t2]=0;for(t2=0;t2<8;t2++)z[t2]=R[t2];for(;w>=64;){for(N(Y,z,P,W),t2=0;t2<64;t2++)p[m+t2]=v[c+t2]^Y[t2];for(l2=1,t2=8;t2<16;t2++)l2=l2+(z[t2]&255)|0,z[t2]=l2&255,l2>>>=8;w-=64,m+=64,c+=64}if(w>0)for(N(Y,z,P,W),t2=0;t2<w;t2++)p[m+t2]=v[c+t2]^Y[t2];return 0}function V(p,m,v,c,w){var R=new Uint8Array(16),P=new Uint8Array(64),z,Y;for(Y=0;Y<16;Y++)R[Y]=0;for(Y=0;Y<8;Y++)R[Y]=c[Y];for(;v>=64;){for(N(P,R,w,W),Y=0;Y<64;Y++)p[m+Y]=P[Y];for(z=1,Y=8;Y<16;Y++)z=z+(R[Y]&255)|0,R[Y]=z&255,z>>>=8;v-=64,m+=64}if(v>0)for(N(P,R,w,W),Y=0;Y<v;Y++)p[m+Y]=P[Y];return 0}function y2(p,m,v,c,w){var R=new Uint8Array(32);H(R,c,w,W);for(var P=new Uint8Array(8),z=0;z<8;z++)P[z]=c[z+16];return V(p,m,v,P,R)}function h2(p,m,v,c,w,R,P){var z=new Uint8Array(32);H(z,R,P,W);for(var Y=new Uint8Array(8),l2=0;l2<8;l2++)Y[l2]=R[l2+16];return Q(p,m,v,c,w,Y,z)}var a3=function(p){this.buffer=new Uint8Array(16),this.r=new Uint16Array(10),this.h=new Uint16Array(10),this.pad=new Uint16Array(8),this.leftover=0,this.fin=0;var m,v,c,w,R,P,z,Y;m=p[0]&255|(p[1]&255)<<8,this.r[0]=m&8191,v=p[2]&255|(p[3]&255)<<8,this.r[1]=(m>>>13|v<<3)&8191,c=p[4]&255|(p[5]&255)<<8,this.r[2]=(v>>>10|c<<6)&7939,w=p[6]&255|(p[7]&255)<<8,this.r[3]=(c>>>7|w<<9)&8191,R=p[8]&255|(p[9]&255)<<8,this.r[4]=(w>>>4|R<<12)&255,this.r[5]=R>>>1&8190,P=p[10]&255|(p[11]&255)<<8,this.r[6]=(R>>>14|P<<2)&8191,z=p[12]&255|(p[13]&255)<<8,this.r[7]=(P>>>11|z<<5)&8065,Y=p[14]&255|(p[15]&255)<<8,this.r[8]=(z>>>8|Y<<8)&8191,this.r[9]=Y>>>5&127,this.pad[0]=p[16]&255|(p[17]&255)<<8,this.pad[1]=p[18]&255|(p[19]&255)<<8,this.pad[2]=p[20]&255|(p[21]&255)<<8,this.pad[3]=p[22]&255|(p[23]&255)<<8,this.pad[4]=p[24]&255|(p[25]&255)<<8,this.pad[5]=p[26]&255|(p[27]&255)<<8,this.pad[6]=p[28]&255|(p[29]&255)<<8,this.pad[7]=p[30]&255|(p[31]&255)<<8};a3.prototype.blocks=function(p,m,v){for(var c=this.fin?0:2048,w,R,P,z,Y,l2,t2,z2,n2,v2,m2,T2,C2,x2,_2,w2,o2,c2,r2,s2=this.h[0],u2=this.h[1],Z=this.h[2],D=this.h[3],U=this.h[4],q=this.h[5],M=this.h[6],j=this.h[7],K=this.h[8],d2=this.h[9],I2=this.r[0],k2=this.r[1],F2=this.r[2],B=this.r[3],O2=this.r[4],j2=this.r[5],H2=this.r[6],P2=this.r[7],$2=this.r[8],L2=this.r[9];v>=16;)w=p[m+0]&255|(p[m+1]&255)<<8,s2+=w&8191,R=p[m+2]&255|(p[m+3]&255)<<8,u2+=(w>>>13|R<<3)&8191,P=p[m+4]&255|(p[m+5]&255)<<8,Z+=(R>>>10|P<<6)&8191,z=p[m+6]&255|(p[m+7]&255)<<8,D+=(P>>>7|z<<9)&8191,Y=p[m+8]&255|(p[m+9]&255)<<8,U+=(z>>>4|Y<<12)&8191,q+=Y>>>1&8191,l2=p[m+10]&255|(p[m+11]&255)<<8,M+=(Y>>>14|l2<<2)&8191,t2=p[m+12]&255|(p[m+13]&255)<<8,j+=(l2>>>11|t2<<5)&8191,z2=p[m+14]&255|(p[m+15]&255)<<8,K+=(t2>>>8|z2<<8)&8191,d2+=z2>>>5|c,n2=0,v2=n2,v2+=s2*I2,v2+=u2*(5*L2),v2+=Z*(5*$2),v2+=D*(5*P2),v2+=U*(5*H2),n2=v2>>>13,v2&=8191,v2+=q*(5*j2),v2+=M*(5*O2),v2+=j*(5*B),v2+=K*(5*F2),v2+=d2*(5*k2),n2+=v2>>>13,v2&=8191,m2=n2,m2+=s2*k2,m2+=u2*I2,m2+=Z*(5*L2),m2+=D*(5*$2),m2+=U*(5*P2),n2=m2>>>13,m2&=8191,m2+=q*(5*H2),m2+=M*(5*j2),m2+=j*(5*O2),m2+=K*(5*B),m2+=d2*(5*F2),n2+=m2>>>13,m2&=8191,T2=n2,T2+=s2*F2,T2+=u2*k2,T2+=Z*I2,T2+=D*(5*L2),T2+=U*(5*$2),n2=T2>>>13,T2&=8191,T2+=q*(5*P2),T2+=M*(5*H2),T2+=j*(5*j2),T2+=K*(5*O2),T2+=d2*(5*B),n2+=T2>>>13,T2&=8191,C2=n2,C2+=s2*B,C2+=u2*F2,C2+=Z*k2,C2+=D*I2,C2+=U*(5*L2),n2=C2>>>13,C2&=8191,C2+=q*(5*$2),C2+=M*(5*P2),C2+=j*(5*H2),C2+=K*(5*j2),C2+=d2*(5*O2),n2+=C2>>>13,C2&=8191,x2=n2,x2+=s2*O2,x2+=u2*B,x2+=Z*F2,x2+=D*k2,x2+=U*I2,n2=x2>>>13,x2&=8191,x2+=q*(5*L2),x2+=M*(5*$2),x2+=j*(5*P2),x2+=K*(5*H2),x2+=d2*(5*j2),n2+=x2>>>13,x2&=8191,_2=n2,_2+=s2*j2,_2+=u2*O2,_2+=Z*B,_2+=D*F2,_2+=U*k2,n2=_2>>>13,_2&=8191,_2+=q*I2,_2+=M*(5*L2),_2+=j*(5*$2),_2+=K*(5*P2),_2+=d2*(5*H2),n2+=_2>>>13,_2&=8191,w2=n2,w2+=s2*H2,w2+=u2*j2,w2+=Z*O2,w2+=D*B,w2+=U*F2,n2=w2>>>13,w2&=8191,w2+=q*k2,w2+=M*I2,w2+=j*(5*L2),w2+=K*(5*$2),w2+=d2*(5*P2),n2+=w2>>>13,w2&=8191,o2=n2,o2+=s2*P2,o2+=u2*H2,o2+=Z*j2,o2+=D*O2,o2+=U*B,n2=o2>>>13,o2&=8191,o2+=q*F2,o2+=M*k2,o2+=j*I2,o2+=K*(5*L2),o2+=d2*(5*$2),n2+=o2>>>13,o2&=8191,c2=n2,c2+=s2*$2,c2+=u2*P2,c2+=Z*H2,c2+=D*j2,c2+=U*O2,n2=c2>>>13,c2&=8191,c2+=q*B,c2+=M*F2,c2+=j*k2,c2+=K*I2,c2+=d2*(5*L2),n2+=c2>>>13,c2&=8191,r2=n2,r2+=s2*L2,r2+=u2*$2,r2+=Z*P2,r2+=D*H2,r2+=U*j2,n2=r2>>>13,r2&=8191,r2+=q*O2,r2+=M*B,r2+=j*F2,r2+=K*k2,r2+=d2*I2,n2+=r2>>>13,r2&=8191,n2=(n2<<2)+n2|0,n2=n2+v2|0,v2=n2&8191,n2=n2>>>13,m2+=n2,s2=v2,u2=m2,Z=T2,D=C2,U=x2,q=_2,M=w2,j=o2,K=c2,d2=r2,m+=16,v-=16;this.h[0]=s2,this.h[1]=u2,this.h[2]=Z,this.h[3]=D,this.h[4]=U,this.h[5]=q,this.h[6]=M,this.h[7]=j,this.h[8]=K,this.h[9]=d2},a3.prototype.finish=function(p,m){var v=new Uint16Array(10),c,w,R,P;if(this.leftover){for(P=this.leftover,this.buffer[P++]=1;P<16;P++)this.buffer[P]=0;this.fin=1,this.blocks(this.buffer,0,16)}for(c=this.h[1]>>>13,this.h[1]&=8191,P=2;P<10;P++)this.h[P]+=c,c=this.h[P]>>>13,this.h[P]&=8191;for(this.h[0]+=c*5,c=this.h[0]>>>13,this.h[0]&=8191,this.h[1]+=c,c=this.h[1]>>>13,this.h[1]&=8191,this.h[2]+=c,v[0]=this.h[0]+5,c=v[0]>>>13,v[0]&=8191,P=1;P<10;P++)v[P]=this.h[P]+c,c=v[P]>>>13,v[P]&=8191;for(v[9]-=8192,w=(c^1)-1,P=0;P<10;P++)v[P]&=w;for(w=~w,P=0;P<10;P++)this.h[P]=this.h[P]&w|v[P];for(this.h[0]=(this.h[0]|this.h[1]<<13)&65535,this.h[1]=(this.h[1]>>>3|this.h[2]<<10)&65535,this.h[2]=(this.h[2]>>>6|this.h[3]<<7)&65535,this.h[3]=(this.h[3]>>>9|this.h[4]<<4)&65535,this.h[4]=(this.h[4]>>>12|this.h[5]<<1|this.h[6]<<14)&65535,this.h[5]=(this.h[6]>>>2|this.h[7]<<11)&65535,this.h[6]=(this.h[7]>>>5|this.h[8]<<8)&65535,this.h[7]=(this.h[8]>>>8|this.h[9]<<5)&65535,R=this.h[0]+this.pad[0],this.h[0]=R&65535,P=1;P<8;P++)R=(this.h[P]+this.pad[P]|0)+(R>>>16)|0,this.h[P]=R&65535;p[m+0]=this.h[0]>>>0&255,p[m+1]=this.h[0]>>>8&255,p[m+2]=this.h[1]>>>0&255,p[m+3]=this.h[1]>>>8&255,p[m+4]=this.h[2]>>>0&255,p[m+5]=this.h[2]>>>8&255,p[m+6]=this.h[3]>>>0&255,p[m+7]=this.h[3]>>>8&255,p[m+8]=this.h[4]>>>0&255,p[m+9]=this.h[4]>>>8&255,p[m+10]=this.h[5]>>>0&255,p[m+11]=this.h[5]>>>8&255,p[m+12]=this.h[6]>>>0&255,p[m+13]=this.h[6]>>>8&255,p[m+14]=this.h[7]>>>0&255,p[m+15]=this.h[7]>>>8&255},a3.prototype.update=function(p,m,v){var c,w;if(this.leftover){for(w=16-this.leftover,w>v&&(w=v),c=0;c<w;c++)this.buffer[this.leftover+c]=p[m+c];if(v-=w,m+=w,this.leftover+=w,this.leftover<16)return;this.blocks(this.buffer,0,16),this.leftover=0}if(v>=16&&(w=v-v%16,this.blocks(p,m,w),m+=w,v-=w),v){for(c=0;c<v;c++)this.buffer[this.leftover+c]=p[m+c];this.leftover+=v}};function k3(p,m,v,c,w,R){var P=new a3(R);return P.update(v,c,w),P.finish(p,m),0}function z3(p,m,v,c,w,R){var P=new Uint8Array(16);return k3(P,0,v,c,w,R),k(p,m,P,0)}function U0(p,m,v,c,w){var R;if(v<32)return-1;for(h2(p,0,m,0,v,c,w),k3(p,16,p,32,v-32,p),R=0;R<16;R++)p[R]=0;return 0}function N0(p,m,v,c,w){var R,P=new Uint8Array(32);if(v<32||(y2(P,0,32,c,w),z3(m,16,m,32,v-32,P)!==0))return-1;for(h2(p,0,m,0,v,c,w),R=0;R<32;R++)p[R]=0;return 0}function J3(p,m){var v;for(v=0;v<16;v++)p[v]=m[v]|0}function h4(p){var m,v,c=1;for(m=0;m<16;m++)v=p[m]+c+65535,c=Math.floor(v/65536),p[m]=v-c*65536;p[0]+=c-1+37*(c-1)}function X(p,m,v){for(var c,w=~(v-1),R=0;R<16;R++)c=w&(p[R]^m[R]),p[R]^=c,m[R]^=c}function p2(p,m){var v,c,w,R=r(),P=r();for(v=0;v<16;v++)P[v]=m[v];for(h4(P),h4(P),h4(P),c=0;c<2;c++){for(R[0]=P[0]-65517,v=1;v<15;v++)R[v]=P[v]-65535-(R[v-1]>>16&1),R[v-1]&=65535;R[15]=P[15]-32767-(R[14]>>16&1),w=R[15]>>16&1,R[14]&=65535,X(P,R,1-w)}for(v=0;v<16;v++)p[2*v]=P[v]&255,p[2*v+1]=P[v]>>8}function S2(p,m){var v=new Uint8Array(32),c=new Uint8Array(32);return p2(v,p),p2(c,m),S(v,0,c,0)}function b2(p){var m=new Uint8Array(32);return p2(m,p),m[0]&1}function D2(p,m){var v;for(v=0;v<16;v++)p[v]=m[2*v]+(m[2*v+1]<<8);p[15]&=32767}function b3(p,m,v){for(var c=0;c<16;c++)p[c]=m[c]+v[c]}function h3(p,m,v){for(var c=0;c<16;c++)p[c]=m[c]-v[c]}function B2(p,m,v){var c,w,R=0,P=0,z=0,Y=0,l2=0,t2=0,z2=0,n2=0,v2=0,m2=0,T2=0,C2=0,x2=0,_2=0,w2=0,o2=0,c2=0,r2=0,s2=0,u2=0,Z=0,D=0,U=0,q=0,M=0,j=0,K=0,d2=0,I2=0,k2=0,F2=0,B=v[0],O2=v[1],j2=v[2],H2=v[3],P2=v[4],$2=v[5],L2=v[6],_3=v[7],Y2=v[8],p3=v[9],y3=v[10],v3=v[11],C3=v[12],j3=v[13],H3=v[14],q3=v[15];c=m[0],R+=c*B,P+=c*O2,z+=c*j2,Y+=c*H2,l2+=c*P2,t2+=c*$2,z2+=c*L2,n2+=c*_3,v2+=c*Y2,m2+=c*p3,T2+=c*y3,C2+=c*v3,x2+=c*C3,_2+=c*j3,w2+=c*H3,o2+=c*q3,c=m[1],P+=c*B,z+=c*O2,Y+=c*j2,l2+=c*H2,t2+=c*P2,z2+=c*$2,n2+=c*L2,v2+=c*_3,m2+=c*Y2,T2+=c*p3,C2+=c*y3,x2+=c*v3,_2+=c*C3,w2+=c*j3,o2+=c*H3,c2+=c*q3,c=m[2],z+=c*B,Y+=c*O2,l2+=c*j2,t2+=c*H2,z2+=c*P2,n2+=c*$2,v2+=c*L2,m2+=c*_3,T2+=c*Y2,C2+=c*p3,x2+=c*y3,_2+=c*v3,w2+=c*C3,o2+=c*j3,c2+=c*H3,r2+=c*q3,c=m[3],Y+=c*B,l2+=c*O2,t2+=c*j2,z2+=c*H2,n2+=c*P2,v2+=c*$2,m2+=c*L2,T2+=c*_3,C2+=c*Y2,x2+=c*p3,_2+=c*y3,w2+=c*v3,o2+=c*C3,c2+=c*j3,r2+=c*H3,s2+=c*q3,c=m[4],l2+=c*B,t2+=c*O2,z2+=c*j2,n2+=c*H2,v2+=c*P2,m2+=c*$2,T2+=c*L2,C2+=c*_3,x2+=c*Y2,_2+=c*p3,w2+=c*y3,o2+=c*v3,c2+=c*C3,r2+=c*j3,s2+=c*H3,u2+=c*q3,c=m[5],t2+=c*B,z2+=c*O2,n2+=c*j2,v2+=c*H2,m2+=c*P2,T2+=c*$2,C2+=c*L2,x2+=c*_3,_2+=c*Y2,w2+=c*p3,o2+=c*y3,c2+=c*v3,r2+=c*C3,s2+=c*j3,u2+=c*H3,Z+=c*q3,c=m[6],z2+=c*B,n2+=c*O2,v2+=c*j2,m2+=c*H2,T2+=c*P2,C2+=c*$2,x2+=c*L2,_2+=c*_3,w2+=c*Y2,o2+=c*p3,c2+=c*y3,r2+=c*v3,s2+=c*C3,u2+=c*j3,Z+=c*H3,D+=c*q3,c=m[7],n2+=c*B,v2+=c*O2,m2+=c*j2,T2+=c*H2,C2+=c*P2,x2+=c*$2,_2+=c*L2,w2+=c*_3,o2+=c*Y2,c2+=c*p3,r2+=c*y3,s2+=c*v3,u2+=c*C3,Z+=c*j3,D+=c*H3,U+=c*q3,c=m[8],v2+=c*B,m2+=c*O2,T2+=c*j2,C2+=c*H2,x2+=c*P2,_2+=c*$2,w2+=c*L2,o2+=c*_3,c2+=c*Y2,r2+=c*p3,s2+=c*y3,u2+=c*v3,Z+=c*C3,D+=c*j3,U+=c*H3,q+=c*q3,c=m[9],m2+=c*B,T2+=c*O2,C2+=c*j2,x2+=c*H2,_2+=c*P2,w2+=c*$2,o2+=c*L2,c2+=c*_3,r2+=c*Y2,s2+=c*p3,u2+=c*y3,Z+=c*v3,D+=c*C3,U+=c*j3,q+=c*H3,M+=c*q3,c=m[10],T2+=c*B,C2+=c*O2,x2+=c*j2,_2+=c*H2,w2+=c*P2,o2+=c*$2,c2+=c*L2,r2+=c*_3,s2+=c*Y2,u2+=c*p3,Z+=c*y3,D+=c*v3,U+=c*C3,q+=c*j3,M+=c*H3,j+=c*q3,c=m[11],C2+=c*B,x2+=c*O2,_2+=c*j2,w2+=c*H2,o2+=c*P2,c2+=c*$2,r2+=c*L2,s2+=c*_3,u2+=c*Y2,Z+=c*p3,D+=c*y3,U+=c*v3,q+=c*C3,M+=c*j3,j+=c*H3,K+=c*q3,c=m[12],x2+=c*B,_2+=c*O2,w2+=c*j2,o2+=c*H2,c2+=c*P2,r2+=c*$2,s2+=c*L2,u2+=c*_3,Z+=c*Y2,D+=c*p3,U+=c*y3,q+=c*v3,M+=c*C3,j+=c*j3,K+=c*H3,d2+=c*q3,c=m[13],_2+=c*B,w2+=c*O2,o2+=c*j2,c2+=c*H2,r2+=c*P2,s2+=c*$2,u2+=c*L2,Z+=c*_3,D+=c*Y2,U+=c*p3,q+=c*y3,M+=c*v3,j+=c*C3,K+=c*j3,d2+=c*H3,I2+=c*q3,c=m[14],w2+=c*B,o2+=c*O2,c2+=c*j2,r2+=c*H2,s2+=c*P2,u2+=c*$2,Z+=c*L2,D+=c*_3,U+=c*Y2,q+=c*p3,M+=c*y3,j+=c*v3,K+=c*C3,d2+=c*j3,I2+=c*H3,k2+=c*q3,c=m[15],o2+=c*B,c2+=c*O2,r2+=c*j2,s2+=c*H2,u2+=c*P2,Z+=c*$2,D+=c*L2,U+=c*_3,q+=c*Y2,M+=c*p3,j+=c*y3,K+=c*v3,d2+=c*C3,I2+=c*j3,k2+=c*H3,F2+=c*q3,R+=38*c2,P+=38*r2,z+=38*s2,Y+=38*u2,l2+=38*Z,t2+=38*D,z2+=38*U,n2+=38*q,v2+=38*M,m2+=38*j,T2+=38*K,C2+=38*d2,x2+=38*I2,_2+=38*k2,w2+=38*F2,w=1,c=R+w+65535,w=Math.floor(c/65536),R=c-w*65536,c=P+w+65535,w=Math.floor(c/65536),P=c-w*65536,c=z+w+65535,w=Math.floor(c/65536),z=c-w*65536,c=Y+w+65535,w=Math.floor(c/65536),Y=c-w*65536,c=l2+w+65535,w=Math.floor(c/65536),l2=c-w*65536,c=t2+w+65535,w=Math.floor(c/65536),t2=c-w*65536,c=z2+w+65535,w=Math.floor(c/65536),z2=c-w*65536,c=n2+w+65535,w=Math.floor(c/65536),n2=c-w*65536,c=v2+w+65535,w=Math.floor(c/65536),v2=c-w*65536,c=m2+w+65535,w=Math.floor(c/65536),m2=c-w*65536,c=T2+w+65535,w=Math.floor(c/65536),T2=c-w*65536,c=C2+w+65535,w=Math.floor(c/65536),C2=c-w*65536,c=x2+w+65535,w=Math.floor(c/65536),x2=c-w*65536,c=_2+w+65535,w=Math.floor(c/65536),_2=c-w*65536,c=w2+w+65535,w=Math.floor(c/65536),w2=c-w*65536,c=o2+w+65535,w=Math.floor(c/65536),o2=c-w*65536,R+=w-1+37*(w-1),w=1,c=R+w+65535,w=Math.floor(c/65536),R=c-w*65536,c=P+w+65535,w=Math.floor(c/65536),P=c-w*65536,c=z+w+65535,w=Math.floor(c/65536),z=c-w*65536,c=Y+w+65535,w=Math.floor(c/65536),Y=c-w*65536,c=l2+w+65535,w=Math.floor(c/65536),l2=c-w*65536,c=t2+w+65535,w=Math.floor(c/65536),t2=c-w*65536,c=z2+w+65535,w=Math.floor(c/65536),z2=c-w*65536,c=n2+w+65535,w=Math.floor(c/65536),n2=c-w*65536,c=v2+w+65535,w=Math.floor(c/65536),v2=c-w*65536,c=m2+w+65535,w=Math.floor(c/65536),m2=c-w*65536,c=T2+w+65535,w=Math.floor(c/65536),T2=c-w*65536,c=C2+w+65535,w=Math.floor(c/65536),C2=c-w*65536,c=x2+w+65535,w=Math.floor(c/65536),x2=c-w*65536,c=_2+w+65535,w=Math.floor(c/65536),_2=c-w*65536,c=w2+w+65535,w=Math.floor(c/65536),w2=c-w*65536,c=o2+w+65535,w=Math.floor(c/65536),o2=c-w*65536,R+=w-1+37*(w-1),p[0]=R,p[1]=P,p[2]=z,p[3]=Y,p[4]=l2,p[5]=t2,p[6]=z2,p[7]=n2,p[8]=v2,p[9]=m2,p[10]=T2,p[11]=C2,p[12]=x2,p[13]=_2,p[14]=w2,p[15]=o2}function l3(p,m){B2(p,m,m)}function J0(p,m){var v=r(),c;for(c=0;c<16;c++)v[c]=m[c];for(c=253;c>=0;c--)l3(v,v),c!==2&&c!==4&&B2(v,v,m);for(c=0;c<16;c++)p[c]=v[c]}function p4(p,m){var v=r(),c;for(c=0;c<16;c++)v[c]=m[c];for(c=250;c>=0;c--)l3(v,v),c!==1&&B2(v,v,m);for(c=0;c<16;c++)p[c]=v[c]}function P4(p,m,v){var c=new Uint8Array(32),w=new Float64Array(80),R,P,z=r(),Y=r(),l2=r(),t2=r(),z2=r(),n2=r();for(P=0;P<31;P++)c[P]=m[P];for(c[31]=m[31]&127|64,c[0]&=248,D2(w,v),P=0;P<16;P++)Y[P]=w[P],t2[P]=z[P]=l2[P]=0;for(z[0]=t2[0]=1,P=254;P>=0;--P)R=c[P>>>3]>>>(P&7)&1,X(z,Y,R),X(l2,t2,R),b3(z2,z,l2),h3(z,z,l2),b3(l2,Y,t2),h3(Y,Y,t2),l3(t2,z2),l3(n2,z),B2(z,l2,z),B2(l2,Y,z2),b3(z2,z,l2),h3(z,z,l2),l3(Y,z),h3(l2,t2,n2),B2(z,l2,l),b3(z,z,t2),B2(l2,l2,z),B2(z,t2,n2),B2(t2,Y,w),l3(Y,z2),X(z,Y,R),X(l2,t2,R);for(P=0;P<16;P++)w[P+16]=z[P],w[P+32]=l2[P],w[P+48]=Y[P],w[P+64]=t2[P];var v2=w.subarray(32),m2=w.subarray(16);return J0(v2,v2),B2(m2,m2,v2),p2(p,m2),0}function x5(p,m){return P4(p,m,o)}function q8(p,m){return n(m,32),x5(p,m)}function w5(p,m,v){var c=new Uint8Array(32);return P4(c,v,m),H(p,i,c,W)}var y4=U0,_5=N0;function be(p,m,v,c,w,R){var P=new Uint8Array(32);return w5(P,w,R),y4(p,m,v,c,P)}function Ce(p,m,v,c,w,R){var P=new Uint8Array(32);return w5(P,w,R),_5(p,m,v,c,P)}var n1=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function W8(p,m,v,c){for(var w=new Int32Array(16),R=new Int32Array(16),P,z,Y,l2,t2,z2,n2,v2,m2,T2,C2,x2,_2,w2,o2,c2,r2,s2,u2,Z,D,U,q,M,j,K,d2=p[0],I2=p[1],k2=p[2],F2=p[3],B=p[4],O2=p[5],j2=p[6],H2=p[7],P2=m[0],$2=m[1],L2=m[2],_3=m[3],Y2=m[4],p3=m[5],y3=m[6],v3=m[7],C3=0;c>=128;){for(u2=0;u2<16;u2++)Z=8*u2+C3,w[u2]=v[Z+0]<<24|v[Z+1]<<16|v[Z+2]<<8|v[Z+3],R[u2]=v[Z+4]<<24|v[Z+5]<<16|v[Z+6]<<8|v[Z+7];for(u2=0;u2<80;u2++)if(P=d2,z=I2,Y=k2,l2=F2,t2=B,z2=O2,n2=j2,v2=H2,m2=P2,T2=$2,C2=L2,x2=_3,_2=Y2,w2=p3,o2=y3,c2=v3,D=H2,U=v3,q=U&65535,M=U>>>16,j=D&65535,K=D>>>16,D=(B>>>14|Y2<<32-14)^(B>>>18|Y2<<32-18)^(Y2>>>41-32|B<<32-(41-32)),U=(Y2>>>14|B<<32-14)^(Y2>>>18|B<<32-18)^(B>>>41-32|Y2<<32-(41-32)),q+=U&65535,M+=U>>>16,j+=D&65535,K+=D>>>16,D=B&O2^~B&j2,U=Y2&p3^~Y2&y3,q+=U&65535,M+=U>>>16,j+=D&65535,K+=D>>>16,D=n1[u2*2],U=n1[u2*2+1],q+=U&65535,M+=U>>>16,j+=D&65535,K+=D>>>16,D=w[u2%16],U=R[u2%16],q+=U&65535,M+=U>>>16,j+=D&65535,K+=D>>>16,M+=q>>>16,j+=M>>>16,K+=j>>>16,r2=j&65535|K<<16,s2=q&65535|M<<16,D=r2,U=s2,q=U&65535,M=U>>>16,j=D&65535,K=D>>>16,D=(d2>>>28|P2<<32-28)^(P2>>>34-32|d2<<32-(34-32))^(P2>>>39-32|d2<<32-(39-32)),U=(P2>>>28|d2<<32-28)^(d2>>>34-32|P2<<32-(34-32))^(d2>>>39-32|P2<<32-(39-32)),q+=U&65535,M+=U>>>16,j+=D&65535,K+=D>>>16,D=d2&I2^d2&k2^I2&k2,U=P2&$2^P2&L2^$2&L2,q+=U&65535,M+=U>>>16,j+=D&65535,K+=D>>>16,M+=q>>>16,j+=M>>>16,K+=j>>>16,v2=j&65535|K<<16,c2=q&65535|M<<16,D=l2,U=x2,q=U&65535,M=U>>>16,j=D&65535,K=D>>>16,D=r2,U=s2,q+=U&65535,M+=U>>>16,j+=D&65535,K+=D>>>16,M+=q>>>16,j+=M>>>16,K+=j>>>16,l2=j&65535|K<<16,x2=q&65535|M<<16,I2=P,k2=z,F2=Y,B=l2,O2=t2,j2=z2,H2=n2,d2=v2,$2=m2,L2=T2,_3=C2,Y2=x2,p3=_2,y3=w2,v3=o2,P2=c2,u2%16===15)for(Z=0;Z<16;Z++)D=w[Z],U=R[Z],q=U&65535,M=U>>>16,j=D&65535,K=D>>>16,D=w[(Z+9)%16],U=R[(Z+9)%16],q+=U&65535,M+=U>>>16,j+=D&65535,K+=D>>>16,r2=w[(Z+1)%16],s2=R[(Z+1)%16],D=(r2>>>1|s2<<32-1)^(r2>>>8|s2<<32-8)^r2>>>7,U=(s2>>>1|r2<<32-1)^(s2>>>8|r2<<32-8)^(s2>>>7|r2<<32-7),q+=U&65535,M+=U>>>16,j+=D&65535,K+=D>>>16,r2=w[(Z+14)%16],s2=R[(Z+14)%16],D=(r2>>>19|s2<<32-19)^(s2>>>61-32|r2<<32-(61-32))^r2>>>6,U=(s2>>>19|r2<<32-19)^(r2>>>61-32|s2<<32-(61-32))^(s2>>>6|r2<<32-6),q+=U&65535,M+=U>>>16,j+=D&65535,K+=D>>>16,M+=q>>>16,j+=M>>>16,K+=j>>>16,w[Z]=j&65535|K<<16,R[Z]=q&65535|M<<16;D=d2,U=P2,q=U&65535,M=U>>>16,j=D&65535,K=D>>>16,D=p[0],U=m[0],q+=U&65535,M+=U>>>16,j+=D&65535,K+=D>>>16,M+=q>>>16,j+=M>>>16,K+=j>>>16,p[0]=d2=j&65535|K<<16,m[0]=P2=q&65535|M<<16,D=I2,U=$2,q=U&65535,M=U>>>16,j=D&65535,K=D>>>16,D=p[1],U=m[1],q+=U&65535,M+=U>>>16,j+=D&65535,K+=D>>>16,M+=q>>>16,j+=M>>>16,K+=j>>>16,p[1]=I2=j&65535|K<<16,m[1]=$2=q&65535|M<<16,D=k2,U=L2,q=U&65535,M=U>>>16,j=D&65535,K=D>>>16,D=p[2],U=m[2],q+=U&65535,M+=U>>>16,j+=D&65535,K+=D>>>16,M+=q>>>16,j+=M>>>16,K+=j>>>16,p[2]=k2=j&65535|K<<16,m[2]=L2=q&65535|M<<16,D=F2,U=_3,q=U&65535,M=U>>>16,j=D&65535,K=D>>>16,D=p[3],U=m[3],q+=U&65535,M+=U>>>16,j+=D&65535,K+=D>>>16,M+=q>>>16,j+=M>>>16,K+=j>>>16,p[3]=F2=j&65535|K<<16,m[3]=_3=q&65535|M<<16,D=B,U=Y2,q=U&65535,M=U>>>16,j=D&65535,K=D>>>16,D=p[4],U=m[4],q+=U&65535,M+=U>>>16,j+=D&65535,K+=D>>>16,M+=q>>>16,j+=M>>>16,K+=j>>>16,p[4]=B=j&65535|K<<16,m[4]=Y2=q&65535|M<<16,D=O2,U=p3,q=U&65535,M=U>>>16,j=D&65535,K=D>>>16,D=p[5],U=m[5],q+=U&65535,M+=U>>>16,j+=D&65535,K+=D>>>16,M+=q>>>16,j+=M>>>16,K+=j>>>16,p[5]=O2=j&65535|K<<16,m[5]=p3=q&65535|M<<16,D=j2,U=y3,q=U&65535,M=U>>>16,j=D&65535,K=D>>>16,D=p[6],U=m[6],q+=U&65535,M+=U>>>16,j+=D&65535,K+=D>>>16,M+=q>>>16,j+=M>>>16,K+=j>>>16,p[6]=j2=j&65535|K<<16,m[6]=y3=q&65535|M<<16,D=H2,U=v3,q=U&65535,M=U>>>16,j=D&65535,K=D>>>16,D=p[7],U=m[7],q+=U&65535,M+=U>>>16,j+=D&65535,K+=D>>>16,M+=q>>>16,j+=M>>>16,K+=j>>>16,p[7]=H2=j&65535|K<<16,m[7]=v3=q&65535|M<<16,C3+=128,c-=128}return c}function v4(p,m,v){var c=new Int32Array(8),w=new Int32Array(8),R=new Uint8Array(256),P,z=v;for(c[0]=1779033703,c[1]=3144134277,c[2]=1013904242,c[3]=2773480762,c[4]=1359893119,c[5]=2600822924,c[6]=528734635,c[7]=1541459225,w[0]=4089235720,w[1]=2227873595,w[2]=4271175723,w[3]=1595750129,w[4]=2917565137,w[5]=725511199,w[6]=4215389547,w[7]=327033209,W8(c,w,m,v),v%=128,P=0;P<v;P++)R[P]=m[z-v+P];for(R[v]=128,v=256-128*(v<112?1:0),R[v-9]=0,C(R,v-8,z/536870912|0,z<<3),W8(c,w,R,v),P=0;P<8;P++)C(p,8*P,c[P],w[P]);return 0}function E5(p,m){var v=r(),c=r(),w=r(),R=r(),P=r(),z=r(),Y=r(),l2=r(),t2=r();h3(v,p[1],p[0]),h3(t2,m[1],m[0]),B2(v,v,t2),b3(c,p[0],p[1]),b3(t2,m[0],m[1]),B2(c,c,t2),B2(w,p[3],m[3]),B2(w,w,h),B2(R,p[2],m[2]),b3(R,R,R),h3(P,c,v),h3(z,R,w),b3(Y,R,w),b3(l2,c,v),B2(p[0],P,z),B2(p[1],l2,Y),B2(p[2],Y,z),B2(p[3],P,l2)}function S5(p,m,v){var c;for(c=0;c<4;c++)X(p[c],m[c],v)}function o0(p,m){var v=r(),c=r(),w=r();J0(w,m[2]),B2(v,m[0],w),B2(c,m[1],w),p2(p,c),p[31]^=b2(v)<<7}function b5(p,m,v){var c,w;for(J3(p[0],s),J3(p[1],a),J3(p[2],a),J3(p[3],s),w=255;w>=0;--w)c=v[w/8|0]>>(w&7)&1,S5(p,m,c),E5(m,p),E5(p,p),S5(p,m,c)}function i1(p,m){var v=[r(),r(),r(),r()];J3(v[0],y),J3(v[1],x),J3(v[2],a),B2(v[3],y,x),b5(p,v,m)}function S0(p,m,v){var c=new Uint8Array(64),w=[r(),r(),r(),r()],R;for(v||n(m,32),v4(c,m,32),c[0]&=248,c[31]&=127,c[31]|=64,i1(w,c),o0(p,w),R=0;R<32;R++)m[R+32]=p[R];return 0}var o1=new Float64Array([237,211,245,92,26,99,18,88,214,156,247,162,222,249,222,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16]);function g(p,m){var v,c,w,R;for(c=63;c>=32;--c){for(v=0,w=c-32,R=c-12;w<R;++w)m[w]+=v-16*m[c]*o1[w-(c-32)],v=Math.floor((m[w]+128)/256),m[w]-=v*256;m[w]+=v,m[c]=0}for(v=0,w=0;w<32;w++)m[w]+=v-(m[31]>>4)*o1[w],v=m[w]>>8,m[w]&=255;for(w=0;w<32;w++)m[w]-=v*o1[w];for(c=0;c<32;c++)m[c+1]+=m[c]>>8,p[c]=m[c]&255}function f(p){var m=new Float64Array(64),v;for(v=0;v<64;v++)m[v]=p[v];for(v=0;v<64;v++)p[v]=0;g(p,m)}function d(p,m,v,c){var w=new Uint8Array(64),R=new Uint8Array(64),P=new Uint8Array(64),z,Y,l2=new Float64Array(64),t2=[r(),r(),r(),r()];v4(w,c,32),w[0]&=248,w[31]&=127,w[31]|=64;var z2=v+64;for(z=0;z<v;z++)p[64+z]=m[z];for(z=0;z<32;z++)p[32+z]=w[32+z];for(v4(P,p.subarray(32),v+32),f(P),i1(t2,P),o0(p,t2),z=32;z<64;z++)p[z]=c[z];for(v4(R,p,v+64),f(R),z=0;z<64;z++)l2[z]=0;for(z=0;z<32;z++)l2[z]=P[z];for(z=0;z<32;z++)for(Y=0;Y<32;Y++)l2[z+Y]+=R[z]*w[Y];return g(p.subarray(32),l2),z2}function _(p,m){var v=r(),c=r(),w=r(),R=r(),P=r(),z=r(),Y=r();return J3(p[2],a),D2(p[1],m),l3(w,p[1]),B2(R,w,u),h3(w,w,p[2]),b3(R,p[2],R),l3(P,R),l3(z,P),B2(Y,z,P),B2(v,Y,w),B2(v,v,R),p4(v,v),B2(v,v,w),B2(v,v,R),B2(v,v,R),B2(p[0],v,R),l3(c,p[0]),B2(c,c,R),S2(c,w)&&B2(p[0],p[0],b),l3(c,p[0]),B2(c,c,R),S2(c,w)?-1:(b2(p[0])===m[31]>>7&&h3(p[0],s,p[0]),B2(p[3],p[0],p[1]),0)}function F(p,m,v,c){var w,R=new Uint8Array(32),P=new Uint8Array(64),z=[r(),r(),r(),r()],Y=[r(),r(),r(),r()];if(v<64||_(Y,c))return-1;for(w=0;w<v;w++)p[w]=m[w];for(w=0;w<32;w++)p[w+32]=c[w];if(v4(P,p,v),f(P),b5(z,Y,P),i1(Y,m.subarray(32)),E5(z,Y),o0(R,z),v-=64,S(m,0,R,0)){for(w=0;w<v;w++)p[w]=0;return-1}for(w=0;w<v;w++)p[w]=m[w+64];return v}var O=32,$=24,E2=32,Q2=16,V2=32,e3=32,M2=32,g6=32,Ae=32,yi=$,Hf=E2,qf=Q2,g4=64,C5=32,s1=64,Be=32,Te=64;t.lowlevel={crypto_core_hsalsa20:H,crypto_stream_xor:h2,crypto_stream:y2,crypto_stream_salsa20_xor:Q,crypto_stream_salsa20:V,crypto_onetimeauth:k3,crypto_onetimeauth_verify:z3,crypto_verify_16:k,crypto_verify_32:S,crypto_secretbox:U0,crypto_secretbox_open:N0,crypto_scalarmult:P4,crypto_scalarmult_base:x5,crypto_box_beforenm:w5,crypto_box_afternm:y4,crypto_box:be,crypto_box_open:Ce,crypto_box_keypair:q8,crypto_hash:v4,crypto_sign:d,crypto_sign_keypair:S0,crypto_sign_open:F,crypto_secretbox_KEYBYTES:O,crypto_secretbox_NONCEBYTES:$,crypto_secretbox_ZEROBYTES:E2,crypto_secretbox_BOXZEROBYTES:Q2,crypto_scalarmult_BYTES:V2,crypto_scalarmult_SCALARBYTES:e3,crypto_box_PUBLICKEYBYTES:M2,crypto_box_SECRETKEYBYTES:g6,crypto_box_BEFORENMBYTES:Ae,crypto_box_NONCEBYTES:yi,crypto_box_ZEROBYTES:Hf,crypto_box_BOXZEROBYTES:qf,crypto_sign_BYTES:g4,crypto_sign_PUBLICKEYBYTES:C5,crypto_sign_SECRETKEYBYTES:s1,crypto_sign_SEEDBYTES:Be,crypto_hash_BYTES:Te,gf:r,D:u,L:o1,pack25519:p2,unpack25519:D2,M:B2,A:b3,S:l3,Z:h3,pow2523:p4,add:E5,set25519:J3,modL:g,scalarmult:b5,scalarbase:i1};function vi(p,m){if(p.length!==O)throw new Error("bad key size");if(m.length!==$)throw new Error("bad nonce size")}function Wf(p,m){if(p.length!==M2)throw new Error("bad public key size");if(m.length!==g6)throw new Error("bad secret key size")}function d0(){for(var p=0;p<arguments.length;p++)if(!(arguments[p]instanceof Uint8Array))throw new TypeError("unexpected type, use Uint8Array")}function gi(p){for(var m=0;m<p.length;m++)p[m]=0}t.randomBytes=function(p){var m=new Uint8Array(p);return n(m,p),m},t.secretbox=function(p,m,v){d0(p,m,v),vi(v,m);for(var c=new Uint8Array(E2+p.length),w=new Uint8Array(c.length),R=0;R<p.length;R++)c[R+E2]=p[R];return U0(w,c,c.length,m,v),w.subarray(Q2)},t.secretbox.open=function(p,m,v){d0(p,m,v),vi(v,m);for(var c=new Uint8Array(Q2+p.length),w=new Uint8Array(c.length),R=0;R<p.length;R++)c[R+Q2]=p[R];return c.length<32||N0(w,c,c.length,m,v)!==0?null:w.subarray(E2)},t.secretbox.keyLength=O,t.secretbox.nonceLength=$,t.secretbox.overheadLength=Q2,t.scalarMult=function(p,m){if(d0(p,m),p.length!==e3)throw new Error("bad n size");if(m.length!==V2)throw new Error("bad p size");var v=new Uint8Array(V2);return P4(v,p,m),v},t.scalarMult.base=function(p){if(d0(p),p.length!==e3)throw new Error("bad n size");var m=new Uint8Array(V2);return x5(m,p),m},t.scalarMult.scalarLength=e3,t.scalarMult.groupElementLength=V2,t.box=function(p,m,v,c){var w=t.box.before(v,c);return t.secretbox(p,m,w)},t.box.before=function(p,m){d0(p,m),Wf(p,m);var v=new Uint8Array(Ae);return w5(v,p,m),v},t.box.after=t.secretbox,t.box.open=function(p,m,v,c){var w=t.box.before(v,c);return t.secretbox.open(p,m,w)},t.box.open.after=t.secretbox.open,t.box.keyPair=function(){var p=new Uint8Array(M2),m=new Uint8Array(g6);return q8(p,m),{publicKey:p,secretKey:m}},t.box.keyPair.fromSecretKey=function(p){if(d0(p),p.length!==g6)throw new Error("bad secret key size");var m=new Uint8Array(M2);return x5(m,p),{publicKey:m,secretKey:new Uint8Array(p)}},t.box.publicKeyLength=M2,t.box.secretKeyLength=g6,t.box.sharedKeyLength=Ae,t.box.nonceLength=yi,t.box.overheadLength=t.secretbox.overheadLength,t.sign=function(p,m){if(d0(p,m),m.length!==s1)throw new Error("bad secret key size");var v=new Uint8Array(g4+p.length);return d(v,p,p.length,m),v},t.sign.open=function(p,m){if(d0(p,m),m.length!==C5)throw new Error("bad public key size");var v=new Uint8Array(p.length),c=F(v,p,p.length,m);if(c<0)return null;for(var w=new Uint8Array(c),R=0;R<w.length;R++)w[R]=v[R];return w},t.sign.detached=function(p,m){for(var v=t.sign(p,m),c=new Uint8Array(g4),w=0;w<c.length;w++)c[w]=v[w];return c},t.sign.detached.verify=function(p,m,v){if(d0(p,m,v),m.length!==g4)throw new Error("bad signature size");if(v.length!==C5)throw new Error("bad public key size");var c=new Uint8Array(g4+p.length),w=new Uint8Array(g4+p.length),R;for(R=0;R<g4;R++)c[R]=m[R];for(R=0;R<p.length;R++)c[R+g4]=p[R];return F(w,c,c.length,v)>=0},t.sign.keyPair=function(){var p=new Uint8Array(C5),m=new Uint8Array(s1);return S0(p,m),{publicKey:p,secretKey:m}},t.sign.keyPair.fromSecretKey=function(p){if(d0(p),p.length!==s1)throw new Error("bad secret key size");for(var m=new Uint8Array(C5),v=0;v<m.length;v++)m[v]=p[32+v];return{publicKey:m,secretKey:new Uint8Array(p)}},t.sign.keyPair.fromSeed=function(p){if(d0(p),p.length!==Be)throw new Error("bad seed size");for(var m=new Uint8Array(C5),v=new Uint8Array(s1),c=0;c<32;c++)v[c]=p[c];return S0(m,v,!0),{publicKey:m,secretKey:v}},t.sign.publicKeyLength=C5,t.sign.secretKeyLength=s1,t.sign.seedLength=Be,t.sign.signatureLength=g4,t.hash=function(p){d0(p);var m=new Uint8Array(Te);return v4(m,p,p.length),m},t.hash.hashLength=Te,t.verify=function(p,m){return d0(p,m),p.length===0||m.length===0||p.length!==m.length?!1:T(p,0,m,0,p.length)===0},t.setPRNG=function(p){n=p},function(){var p=typeof self<"u"?self.crypto||self.msCrypto:null;if(p&&p.getRandomValues){var m=65536;t.setPRNG(function(v,c){var w,R=new Uint8Array(c);for(w=0;w<c;w+=m)p.getRandomValues(R.subarray(w,w+Math.min(c-w,m)));for(w=0;w<c;w++)v[w]=R[w];gi(R)})}else typeof Hw<"u"&&(p=Vw,p&&p.randomBytes&&t.setPRNG(function(v,c){var w,R=p.randomBytes(c);for(w=0;w<c;w++)v[w]=R[w];gi(R)}))}()})(e.exports?e.exports:self.nacl=self.nacl||{})})(Oc);var Kw=Oc.exports;const u1=m7(Kw),Gw=new Uint8Array([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3]);class Qw extends U7{constructor(t,r,n={},i,o,s){if(super(),this.blockLen=t,this.outputLen=r,this.length=0,this.pos=0,this.finished=!1,this.destroyed=!1,c4(t),c4(r),c4(i),r<0||r>i)throw new Error("outputLen bigger than keyLen");if(n.key!==void 0&&(n.key.length<1||n.key.length>i))throw new Error(`key must be up 1..${i} byte long or undefined`);if(n.salt!==void 0&&n.salt.length!==o)throw new Error(`salt must be ${o} byte long or undefined`);if(n.personalization!==void 0&&n.personalization.length!==s)throw new Error(`personalization must be ${s} byte long or undefined`);this.buffer32=v8(this.buffer=new Uint8Array(t))}update(t){p5(this);const{blockLen:r,buffer:n,buffer32:i}=this;t=G0(t);const o=t.length,s=t.byteOffset,a=t.buffer;for(let l=0;l<o;){this.pos===r&&(this.compress(i,0,!1),this.pos=0);const u=Math.min(r-this.pos,o-l),h=s+l;if(u===r&&!(h%4)&&l+u<o){const y=new Uint32Array(a,h,Math.floor((o-l)/4));for(let x=0;l+r<o;x+=i.length,l+=r)this.length+=r,this.compress(y,x,!1);continue}n.set(t.subarray(l,l+u),this.pos),this.pos+=u,this.length+=u,l+=u}return this}digestInto(t){p5(this),Hn(t,this);const{pos:r,buffer32:n}=this;this.finished=!0,this.buffer.subarray(r).fill(0),this.compress(n,0,!0);const i=v8(t);this.get().forEach((o,s)=>i[s]=o)}digest(){const{buffer:t,outputLen:r}=this;this.digestInto(t);const n=t.slice(0,r);return this.destroy(),n}_cloneInto(t){const{buffer:r,length:n,finished:i,destroyed:o,outputLen:s,pos:a}=this;return t||(t=new this.constructor({dkLen:s})),t.set(...this.get()),t.length=n,t.finished=i,t.destroyed=o,t.outputLen=s,t.buffer.set(r),t.pos=a,t}}const A3=new Uint32Array([4089235720,1779033703,2227873595,3144134277,4271175723,1013904242,1595750129,2773480762,2917565137,1359893119,725511199,2600822924,4215389547,528734635,327033209,1541459225]),e2=new Uint32Array(32);function L4(e,t,r,n,i,o){const s=i[o],a=i[o+1];let l=e2[2*e],u=e2[2*e+1],h=e2[2*t],y=e2[2*t+1],x=e2[2*r],b=e2[2*r+1],C=e2[2*n],T=e2[2*n+1],k=f2.add3L(l,h,s);u=f2.add3H(k,u,y,a),l=k|0,{Dh:T,Dl:C}={Dh:T^u,Dl:C^l},{Dh:T,Dl:C}={Dh:f2.rotr32H(T,C),Dl:f2.rotr32L(T,C)},{h:b,l:x}=f2.add(b,x,T,C),{Bh:y,Bl:h}={Bh:y^b,Bl:h^x},{Bh:y,Bl:h}={Bh:f2.rotrSH(y,h,24),Bl:f2.rotrSL(y,h,24)},e2[2*e]=l,e2[2*e+1]=u,e2[2*t]=h,e2[2*t+1]=y,e2[2*r]=x,e2[2*r+1]=b,e2[2*n]=C,e2[2*n+1]=T}function M4(e,t,r,n,i,o){const s=i[o],a=i[o+1];let l=e2[2*e],u=e2[2*e+1],h=e2[2*t],y=e2[2*t+1],x=e2[2*r],b=e2[2*r+1],C=e2[2*n],T=e2[2*n+1],k=f2.add3L(l,h,s);u=f2.add3H(k,u,y,a),l=k|0,{Dh:T,Dl:C}={Dh:T^u,Dl:C^l},{Dh:T,Dl:C}={Dh:f2.rotrSH(T,C,16),Dl:f2.rotrSL(T,C,16)},{h:b,l:x}=f2.add(b,x,T,C),{Bh:y,Bl:h}={Bh:y^b,Bl:h^x},{Bh:y,Bl:h}={Bh:f2.rotrBH(y,h,63),Bl:f2.rotrBL(y,h,63)},e2[2*e]=l,e2[2*e+1]=u,e2[2*t]=h,e2[2*t+1]=y,e2[2*r]=x,e2[2*r+1]=b,e2[2*n]=C,e2[2*n+1]=T}class Yw extends Qw{constructor(t={}){super(128,t.dkLen===void 0?64:t.dkLen,t,64,16,16),this.v0l=A3[0]|0,this.v0h=A3[1]|0,this.v1l=A3[2]|0,this.v1h=A3[3]|0,this.v2l=A3[4]|0,this.v2h=A3[5]|0,this.v3l=A3[6]|0,this.v3h=A3[7]|0,this.v4l=A3[8]|0,this.v4h=A3[9]|0,this.v5l=A3[10]|0,this.v5h=A3[11]|0,this.v6l=A3[12]|0,this.v6h=A3[13]|0,this.v7l=A3[14]|0,this.v7h=A3[15]|0;const r=t.key?t.key.length:0;if(this.v0l^=this.outputLen|r<<8|65536|1<<24,t.salt){const n=v8(G0(t.salt));this.v4l^=n[0],this.v4h^=n[1],this.v5l^=n[2],this.v5h^=n[3]}if(t.personalization){const n=v8(G0(t.personalization));this.v6l^=n[0],this.v6h^=n[1],this.v7l^=n[2],this.v7h^=n[3]}if(t.key){const n=new Uint8Array(this.blockLen);n.set(G0(t.key)),this.update(n)}}get(){let{v0l:t,v0h:r,v1l:n,v1h:i,v2l:o,v2h:s,v3l:a,v3h:l,v4l:u,v4h:h,v5l:y,v5h:x,v6l:b,v6h:C,v7l:T,v7h:k}=this;return[t,r,n,i,o,s,a,l,u,h,y,x,b,C,T,k]}set(t,r,n,i,o,s,a,l,u,h,y,x,b,C,T,k){this.v0l=t|0,this.v0h=r|0,this.v1l=n|0,this.v1h=i|0,this.v2l=o|0,this.v2h=s|0,this.v3l=a|0,this.v3h=l|0,this.v4l=u|0,this.v4h=h|0,this.v5l=y|0,this.v5h=x|0,this.v6l=b|0,this.v6h=C|0,this.v7l=T|0,this.v7h=k|0}compress(t,r,n){this.get().forEach((l,u)=>e2[u]=l),e2.set(A3,16);let{h:i,l:o}=f2.fromBig(BigInt(this.length));e2[24]=A3[8]^o,e2[25]=A3[9]^i,n&&(e2[28]=~e2[28],e2[29]=~e2[29]);let s=0;const a=Gw;for(let l=0;l<12;l++)L4(0,4,8,12,t,r+2*a[s++]),M4(0,4,8,12,t,r+2*a[s++]),L4(1,5,9,13,t,r+2*a[s++]),M4(1,5,9,13,t,r+2*a[s++]),L4(2,6,10,14,t,r+2*a[s++]),M4(2,6,10,14,t,r+2*a[s++]),L4(3,7,11,15,t,r+2*a[s++]),M4(3,7,11,15,t,r+2*a[s++]),L4(0,5,10,15,t,r+2*a[s++]),M4(0,5,10,15,t,r+2*a[s++]),L4(1,6,11,12,t,r+2*a[s++]),M4(1,6,11,12,t,r+2*a[s++]),L4(2,7,8,13,t,r+2*a[s++]),M4(2,7,8,13,t,r+2*a[s++]),L4(3,4,9,14,t,r+2*a[s++]),M4(3,4,9,14,t,r+2*a[s++]);this.v0l^=e2[0]^e2[16],this.v0h^=e2[1]^e2[17],this.v1l^=e2[2]^e2[18],this.v1h^=e2[3]^e2[19],this.v2l^=e2[4]^e2[20],this.v2h^=e2[5]^e2[21],this.v3l^=e2[6]^e2[22],this.v3h^=e2[7]^e2[23],this.v4l^=e2[8]^e2[24],this.v4h^=e2[9]^e2[25],this.v5l^=e2[10]^e2[26],this.v5h^=e2[11]^e2[27],this.v6l^=e2[12]^e2[28],this.v6h^=e2[13]^e2[29],this.v7l^=e2[14]^e2[30],this.v7h^=e2[15]^e2[31],e2.fill(0)}destroy(){this.destroyed=!0,this.buffer32.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}const Jw=Pp(e=>new Yw(e)),O9=32;class Dc extends Mw{constructor(t){if(super(),typeof t=="string"?this.data=Dp(t):t instanceof Uint8Array?this.data=t:this.data=Uint8Array.from(t),this.data.length!==O9)throw new Error(`Invalid public key input. Expected ${O9} bytes, got ${this.data.length}`)}equals(t){return super.equals(t)}toBytes(){return this.data}toRoochAddress(){const t=new Uint8Array(O9+1);return t.set([pr.ED25519]),t.set(this.toBytes(),1),c7(Ip(Jw(t,{dkLen:32})).slice(0,D7))}flag(){return pr.ED25519}}Dc.SIZE=O9;const Xw="ed25519 seed",Zw=2147483648,e_=/^m(\/[0-9]+')+$/,Uc=e=>e.replace("'",""),t_=e=>{const r=ve.create(Gn,Xw).update(zn(e)).digest(),n=r.slice(0,32),i=r.slice(32);return{key:n,chainCode:i}},r_=({key:e,chainCode:t},r)=>{const n=new ArrayBuffer(4);new DataView(n).setUint32(0,r);const o=new Uint8Array(1+e.length+n.byteLength);o.set(new Uint8Array(1).fill(0)),o.set(e,1),o.set(new Uint8Array(n,0,n.byteLength),e.length+1);const s=ve.create(Gn,t).update(o).digest(),a=s.slice(0,32),l=s.slice(32);return{key:a,chainCode:l}},n_=e=>e_.test(e)?!e.split("/").slice(1).map(Uc).some(Number.isNaN):!1,Fs=(e,t,r=Zw)=>{if(!n_(e))throw new Error("Invalid derivation path");const{key:n,chainCode:i}=t_(t);return e.split("/").slice(1).map(Uc).map(s=>parseInt(s,10)).reduce((s,a)=>r_(s,a+r),{key:n,chainCode:i})},Rs="m/44'/784'/0'/0'/0'";class C1 extends jw{constructor(t){super(),t?this.keypair=t:this.keypair=u1.sign.keyPair(),this.scheme="ED25519"}getKeyScheme(){return this.scheme}static generate(){return new C1(u1.sign.keyPair())}static fromSecretKey(t,r){const n=t.length;if(n!==ut)throw new Error(`Wrong secretKey size. Expected ${ut} bytes, got ${n}.`);const i=u1.sign.keyPair.fromSeed(t);if(!r||!r.skipValidation){const s=new TextEncoder().encode("rooch validation"),a=u1.sign.detached(s,i.secretKey);if(!u1.sign.detached.verify(s,a,i.publicKey))throw new Error("provided secretKey is invalid")}return new C1(i)}getPublicKey(){return new Dc(this.keypair.publicKey)}async sign(t){return this.signData(t)}signData(t){return u1.sign.detached(t,this.keypair.secretKey)}static deriveKeypair(t,r){const n=r??Rs;if(!Is(n))throw new Error("Invalid derivation path");const{key:i}=Fs(n,$w(t));return C1.fromSecretKey(i)}static deriveKeypairFromSeed(t,r){const n=r??Rs;if(!Is(n))throw new Error("Invalid derivation path");const{key:i}=Fs(n,t);return C1.fromSecretKey(i)}export(){return{schema:"ED25519",privateKey:ar(this.keypair.secretKey.slice(0,ut))}}}var A1={},Nc={},Qn={exports:{}},O1=typeof Reflect=="object"?Reflect:null,ks=O1&&typeof O1.apply=="function"?O1.apply:function(t,r,n){return Function.prototype.apply.call(t,r,n)},D9;O1&&typeof O1.ownKeys=="function"?D9=O1.ownKeys:Object.getOwnPropertySymbols?D9=function(t){return Object.getOwnPropertyNames(t).concat(Object.getOwnPropertySymbols(t))}:D9=function(t){return Object.getOwnPropertyNames(t)};function i_(e){console&&console.warn&&console.warn(e)}var $c=Number.isNaN||function(t){return t!==t};function Z2(){Z2.init.call(this)}Qn.exports=Z2;Qn.exports.once=u_;Z2.EventEmitter=Z2;Z2.prototype._events=void 0;Z2.prototype._eventsCount=0;Z2.prototype._maxListeners=void 0;var Ps=10;function ge(e){if(typeof e!="function")throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof e)}Object.defineProperty(Z2,"defaultMaxListeners",{enumerable:!0,get:function(){return Ps},set:function(e){if(typeof e!="number"||e<0||$c(e))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+e+".");Ps=e}});Z2.init=function(){(this._events===void 0||this._events===Object.getPrototypeOf(this)._events)&&(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0};Z2.prototype.setMaxListeners=function(t){if(typeof t!="number"||t<0||$c(t))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+t+".");return this._maxListeners=t,this};function Lc(e){return e._maxListeners===void 0?Z2.defaultMaxListeners:e._maxListeners}Z2.prototype.getMaxListeners=function(){return Lc(this)};Z2.prototype.emit=function(t){for(var r=[],n=1;n<arguments.length;n++)r.push(arguments[n]);var i=t==="error",o=this._events;if(o!==void 0)i=i&&o.error===void 0;else if(!i)return!1;if(i){var s;if(r.length>0&&(s=r[0]),s instanceof Error)throw s;var a=new Error("Unhandled error."+(s?" ("+s.message+")":""));throw a.context=s,a}var l=o[t];if(l===void 0)return!1;if(typeof l=="function")ks(l,this,r);else for(var u=l.length,h=qc(l,u),n=0;n<u;++n)ks(h[n],this,r);return!0};function Mc(e,t,r,n){var i,o,s;if(ge(r),o=e._events,o===void 0?(o=e._events=Object.create(null),e._eventsCount=0):(o.newListener!==void 0&&(e.emit("newListener",t,r.listener?r.listener:r),o=e._events),s=o[t]),s===void 0)s=o[t]=r,++e._eventsCount;else if(typeof s=="function"?s=o[t]=n?[r,s]:[s,r]:n?s.unshift(r):s.push(r),i=Lc(e),i>0&&s.length>i&&!s.warned){s.warned=!0;var a=new Error("Possible EventEmitter memory leak detected. "+s.length+" "+String(t)+" listeners added. Use emitter.setMaxListeners() to increase limit");a.name="MaxListenersExceededWarning",a.emitter=e,a.type=t,a.count=s.length,i_(a)}return e}Z2.prototype.addListener=function(t,r){return Mc(this,t,r,!1)};Z2.prototype.on=Z2.prototype.addListener;Z2.prototype.prependListener=function(t,r){return Mc(this,t,r,!0)};function o_(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,arguments.length===0?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function zc(e,t,r){var n={fired:!1,wrapFn:void 0,target:e,type:t,listener:r},i=o_.bind(n);return i.listener=r,n.wrapFn=i,i}Z2.prototype.once=function(t,r){return ge(r),this.on(t,zc(this,t,r)),this};Z2.prototype.prependOnceListener=function(t,r){return ge(r),this.prependListener(t,zc(this,t,r)),this};Z2.prototype.removeListener=function(t,r){var n,i,o,s,a;if(ge(r),i=this._events,i===void 0)return this;if(n=i[t],n===void 0)return this;if(n===r||n.listener===r)--this._eventsCount===0?this._events=Object.create(null):(delete i[t],i.removeListener&&this.emit("removeListener",t,n.listener||r));else if(typeof n!="function"){for(o=-1,s=n.length-1;s>=0;s--)if(n[s]===r||n[s].listener===r){a=n[s].listener,o=s;break}if(o<0)return this;o===0?n.shift():s_(n,o),n.length===1&&(i[t]=n[0]),i.removeListener!==void 0&&this.emit("removeListener",t,a||r)}return this};Z2.prototype.off=Z2.prototype.removeListener;Z2.prototype.removeAllListeners=function(t){var r,n,i;if(n=this._events,n===void 0)return this;if(n.removeListener===void 0)return arguments.length===0?(this._events=Object.create(null),this._eventsCount=0):n[t]!==void 0&&(--this._eventsCount===0?this._events=Object.create(null):delete n[t]),this;if(arguments.length===0){var o=Object.keys(n),s;for(i=0;i<o.length;++i)s=o[i],s!=="removeListener"&&this.removeAllListeners(s);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if(r=n[t],typeof r=="function")this.removeListener(t,r);else if(r!==void 0)for(i=r.length-1;i>=0;i--)this.removeListener(t,r[i]);return this};function jc(e,t,r){var n=e._events;if(n===void 0)return[];var i=n[t];return i===void 0?[]:typeof i=="function"?r?[i.listener||i]:[i]:r?a_(i):qc(i,i.length)}Z2.prototype.listeners=function(t){return jc(this,t,!0)};Z2.prototype.rawListeners=function(t){return jc(this,t,!1)};Z2.listenerCount=function(e,t){return typeof e.listenerCount=="function"?e.listenerCount(t):Hc.call(e,t)};Z2.prototype.listenerCount=Hc;function Hc(e){var t=this._events;if(t!==void 0){var r=t[e];if(typeof r=="function")return 1;if(r!==void 0)return r.length}return 0}Z2.prototype.eventNames=function(){return this._eventsCount>0?D9(this._events):[]};function qc(e,t){for(var r=new Array(t),n=0;n<t;++n)r[n]=e[n];return r}function s_(e,t){for(;t+1<e.length;t++)e[t]=e[t+1];e.pop()}function a_(e){for(var t=new Array(e.length),r=0;r<t.length;++r)t[r]=e[r].listener||e[r];return t}function u_(e,t){return new Promise(function(r,n){function i(s){e.removeListener(t,o),n(s)}function o(){typeof e.removeListener=="function"&&e.removeListener("error",i),r([].slice.call(arguments))}Wc(e,t,o,{once:!0}),t!=="error"&&l_(e,i,{once:!0})})}function l_(e,t,r){typeof e.on=="function"&&Wc(e,"error",t,r)}function Wc(e,t,r,n){if(typeof e.on=="function")n.once?e.once(t,r):e.on(t,r);else if(typeof e.addEventListener=="function")e.addEventListener(t,function i(o){n.once&&e.removeEventListener(t,i),r(o)});else throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type '+typeof e)}var Vc=Qn.exports;(function(e){var t=R2&&R2.__awaiter||function(o,s,a,l){function u(h){return h instanceof a?h:new a(function(y){y(h)})}return new(a||(a=Promise))(function(h,y){function x(T){try{C(l.next(T))}catch(k){y(k)}}function b(T){try{C(l.throw(T))}catch(k){y(k)}}function C(T){T.done?h(T.value):u(T.value).then(x,b)}C((l=l.apply(o,s||[])).next())})},r=R2&&R2.__generator||function(o,s){var a={label:0,sent:function(){if(h[0]&1)throw h[1];return h[1]},trys:[],ops:[]},l,u,h,y;return y={next:x(0),throw:x(1),return:x(2)},typeof Symbol=="function"&&(y[Symbol.iterator]=function(){return this}),y;function x(C){return function(T){return b([C,T])}}function b(C){if(l)throw new TypeError("Generator is already executing.");for(;a;)try{if(l=1,u&&(h=C[0]&2?u.return:C[0]?u.throw||((h=u.return)&&h.call(u),0):u.next)&&!(h=h.call(u,C[1])).done)return h;switch(u=0,h&&(C=[C[0]&2,h.value]),C[0]){case 0:case 1:h=C;break;case 4:return a.label++,{value:C[1],done:!1};case 5:a.label++,u=C[1],C=[0];continue;case 7:C=a.ops.pop(),a.trys.pop();continue;default:if(h=a.trys,!(h=h.length>0&&h[h.length-1])&&(C[0]===6||C[0]===2)){a=0;continue}if(C[0]===3&&(!h||C[1]>h[0]&&C[1]<h[3])){a.label=C[1];break}if(C[0]===6&&a.label<h[1]){a.label=h[1],h=C;break}if(h&&a.label<h[2]){a.label=h[2],a.ops.push(C);break}h[2]&&a.ops.pop(),a.trys.pop();continue}C=s.call(o,a)}catch(T){C=[6,T],u=0}finally{l=h=0}if(C[0]&5)throw C[1];return{value:C[0]?C[1]:void 0,done:!0}}};Object.defineProperty(e,"__esModule",{value:!0}),e.defaultNextRequest=void 0;var n=Vc;e.defaultNextRequest=function(){var o=-1;return function(){return++o}};var i=function(){function o(s,a){a===void 0&&(a=e.defaultNextRequest()),this.batch=[],this.batchStarted=!1,this.lastId=-1,this.transports=s,this.requests={},this.connectPromise=this.connect(),this.requestChannel=new n.EventEmitter,this.nextID=a}return o.prototype.connect=function(){var s=this;return Promise.all(this.transports.map(function(a){return t(s,void 0,void 0,function(){return r(this,function(l){switch(l.label){case 0:return a.subscribe("error",this.handleError.bind(this)),a.subscribe("notification",this.handleNotification.bind(this)),[4,a.connect()];case 1:return l.sent(),[2]}})})}))},o.prototype.getPrimaryTransport=function(){return this.transports[0]},o.prototype.request=function(s,a,l){return a===void 0&&(a=!1),t(this,void 0,void 0,function(){var u,h,y,x,b=this;return r(this,function(C){return u=this.nextID().toString(),h=a?null:u,y={request:this.makeRequest(s.method,s.params||[],h),internalID:u},this.batchStarted?(x=new Promise(function(T,k){b.batch.push({resolve:T,reject:k,request:y})}),[2,x]):[2,this.getPrimaryTransport().sendData(y,l)]})})},o.prototype.close=function(){this.requestChannel.removeAllListeners(),this.transports.forEach(function(s){s.unsubscribe(),s.close()})},o.prototype.startBatch=function(){this.batchStarted=!0},o.prototype.stopBatch=function(){if(this.batchStarted===!1)throw new Error("cannot end that which has never started");if(this.batch.length===0){this.batchStarted=!1;return}this.getPrimaryTransport().sendData(this.batch),this.batch=[],this.batchStarted=!1},o.prototype.makeRequest=function(s,a,l){return l?{jsonrpc:"2.0",id:l,method:s,params:a}:{jsonrpc:"2.0",method:s,params:a}},o.prototype.handleError=function(s){this.requestChannel.emit("error",s)},o.prototype.handleNotification=function(s){this.requestChannel.emit("notification",s)},o}();e.default=i})(Nc);var Yn={},m5={},me={},h6={};(function(e){var t=R2&&R2.__extends||function(){var n=function(i,o){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(s,a){s.__proto__=a}||function(s,a){for(var l in a)a.hasOwnProperty(l)&&(s[l]=a[l])},n(i,o)};return function(i,o){n(i,o);function s(){this.constructor=i}i.prototype=o===null?Object.create(o):(s.prototype=o.prototype,new s)}}();Object.defineProperty(e,"__esModule",{value:!0}),e.convertJSONToRPCError=e.JSONRPCError=e.ERR_UNKNOWN=e.ERR_MISSIING_ID=e.ERR_TIMEOUT=void 0,e.ERR_TIMEOUT=7777,e.ERR_MISSIING_ID=7878,e.ERR_UNKNOWN=7979;var r=function(n){t(i,n);function i(o,s,a){var l=this.constructor,u=n.call(this,o)||this;return u.message=o,u.code=s,u.data=a,Object.setPrototypeOf(u,l.prototype),u}return i}(Error);e.JSONRPCError=r,e.convertJSONToRPCError=function(n){if(n.error){var i=n.error,o=i.message,s=i.code,a=i.data;return new r(o,s,a)}return new r("Unknown error",e.ERR_UNKNOWN,n)}})(h6);Object.defineProperty(me,"__esModule",{value:!0});me.TransportRequestManager=void 0;var c_=Vc,l1=h6,f_=function(){function e(){this.pendingRequest={},this.pendingBatchRequest={},this.transportEventChannel=new c_.EventEmitter}return e.prototype.addRequest=function(t,r){return this.transportEventChannel.emit("pending",t),t instanceof Array?(this.addBatchReq(t,r),Promise.resolve()):this.addReq(t.internalID,r)},e.prototype.settlePendingRequest=function(t,r){var n=this;t.forEach(function(i){var o=n.pendingRequest[i.internalID];if(delete n.pendingBatchRequest[i.internalID],o!==void 0){if(r){o.reject(r);return}o.resolve(),(i.request.id===null||i.request.id===void 0)&&delete n.pendingRequest[i.internalID]}})},e.prototype.isPendingRequest=function(t){return this.pendingRequest.hasOwnProperty(t)},e.prototype.resolveResponse=function(t,r){r===void 0&&(r=!0);var n=t;try{return n=JSON.parse(t),this.checkJSONRPC(n)===!1?void 0:n instanceof Array?this.resolveBatch(n,r):this.resolveRes(n,r)}catch{var i=new l1.JSONRPCError("Bad response format",l1.ERR_UNKNOWN,t);return r&&this.transportEventChannel.emit("error",i),i}},e.prototype.addBatchReq=function(t,r){var n=this;return t.forEach(function(i){var o=i.resolve,s=i.reject,a=i.request.internalID;n.pendingBatchRequest[a]=!0,n.pendingRequest[a]={resolve:o,reject:s}}),Promise.resolve()},e.prototype.addReq=function(t,r){var n=this;return new Promise(function(i,o){r!==null&&r&&n.setRequestTimeout(t,r,o),n.pendingRequest[t]={resolve:i,reject:o}})},e.prototype.checkJSONRPC=function(t){var r=[t];return t instanceof Array&&(r=t),r.every(function(n){return n.result!==void 0||n.error!==void 0||n.method!==void 0})},e.prototype.processResult=function(t,r){if(t.error){var n=l1.convertJSONToRPCError(t);r.reject(n);return}r.resolve(t.result)},e.prototype.resolveBatch=function(t,r){var n=this,i=t.map(function(s){return n.resolveRes(s,r)}),o=i.filter(function(s){return s});if(o.length>0)return o[0]},e.prototype.resolveRes=function(t,r){var n=t.id,i=t.error,o=this.pendingRequest[n];if(o){delete this.pendingRequest[n],this.processResult(t,o),this.transportEventChannel.emit("response",t);return}if(n===void 0&&i===void 0){this.transportEventChannel.emit("notification",t);return}var s;return i&&(s=l1.convertJSONToRPCError(t)),r&&i&&s&&this.transportEventChannel.emit("error",s),s},e.prototype.setRequestTimeout=function(t,r,n){var i=this;setTimeout(function(){delete i.pendingRequest[t],n(new l1.JSONRPCError("Request timeout request took longer than "+r+" ms to resolve",l1.ERR_TIMEOUT))},r)},e}();me.TransportRequestManager=f_;Object.defineProperty(m5,"__esModule",{value:!0});m5.Transport=void 0;var d_=me,h_=function(){function e(){this.transportRequestManager=new d_.TransportRequestManager,this.transportRequestManager.transportEventChannel.on("error",function(){})}return e.prototype.subscribe=function(t,r){this.transportRequestManager.transportEventChannel.addListener(t,r)},e.prototype.unsubscribe=function(t,r){if(!t)return this.transportRequestManager.transportEventChannel.removeAllListeners();t&&r&&this.transportRequestManager.transportEventChannel.removeListener(t,r)},e.prototype.parseData=function(t){return t instanceof Array?t.map(function(r){return r.request.request}):t.request},e}();m5.Transport=h_;var p6={};(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.getNotifications=e.getBatchRequests=e.isNotification=void 0,e.isNotification=function(t){return t.request.id===void 0||t.request.id===null},e.getBatchRequests=function(t){return t instanceof Array?t.filter(function(r){var n=r.request.request.id;return n!=null}).map(function(r){return r.request}):[]},e.getNotifications=function(t){return t instanceof Array?t.filter(function(r){return e.isNotification(r.request)}).map(function(r){return r.request}):e.isNotification(t)?[t]:[]}})(p6);var p_=R2&&R2.__extends||function(){var e=function(t,r){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o in i)i.hasOwnProperty(o)&&(n[o]=i[o])},e(t,r)};return function(t,r){e(t,r);function n(){this.constructor=t}t.prototype=r===null?Object.create(r):(n.prototype=r.prototype,new n)}}();Object.defineProperty(Yn,"__esModule",{value:!0});var y_=m5,v_=p6,Os=h6,g_=function(e){p_(t,e);function t(r,n,i){var o=e.call(this)||this;return o.connection=r,o.reqUri=n,o.resUri=i,o}return t.prototype.connect=function(){var r=this;return this.connection.on(this.resUri,function(n){r.transportRequestManager.resolveResponse(n)}),Promise.resolve()},t.prototype.sendData=function(r,n){n===void 0&&(n=null);var i=this.transportRequestManager.addRequest(r,n),o=v_.getNotifications(r),s=this.parseData(r);try{return this.connection.emit(this.reqUri,s),this.transportRequestManager.settlePendingRequest(o),i}catch(l){var a=new Os.JSONRPCError(l.message,Os.ERR_UNKNOWN,l);return this.transportRequestManager.settlePendingRequest(o,a),Promise.reject(a)}},t.prototype.close=function(){this.connection.removeAllListeners()},t}(y_.Transport);Yn.default=g_;var H8={},N3=typeof globalThis<"u"&&globalThis||typeof self<"u"&&self||typeof global<"u"&&global||{},Z3={searchParams:"URLSearchParams"in N3,iterable:"Symbol"in N3&&"iterator"in Symbol,blob:"FileReader"in N3&&"Blob"in N3&&function(){try{return new Blob,!0}catch{return!1}}(),formData:"FormData"in N3,arrayBuffer:"ArrayBuffer"in N3};function m_(e){return e&&DataView.prototype.isPrototypeOf(e)}if(Z3.arrayBuffer)var x_=["[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]"],w_=ArrayBuffer.isView||function(e){return e&&x_.indexOf(Object.prototype.toString.call(e))>-1};function y6(e){if(typeof e!="string"&&(e=String(e)),/[^a-z0-9\-#$%&'*+.^_`|~!]/i.test(e)||e==="")throw new TypeError('Invalid character in header field name: "'+e+'"');return e.toLowerCase()}function Jn(e){return typeof e!="string"&&(e=String(e)),e}function Xn(e){var t={next:function(){var r=e.shift();return{done:r===void 0,value:r}}};return Z3.iterable&&(t[Symbol.iterator]=function(){return t}),t}function R3(e){this.map={},e instanceof R3?e.forEach(function(t,r){this.append(r,t)},this):Array.isArray(e)?e.forEach(function(t){if(t.length!=2)throw new TypeError("Headers constructor: expected name/value pair to be length 2, found"+t.length);this.append(t[0],t[1])},this):e&&Object.getOwnPropertyNames(e).forEach(function(t){this.append(t,e[t])},this)}R3.prototype.append=function(e,t){e=y6(e),t=Jn(t);var r=this.map[e];this.map[e]=r?r+", "+t:t};R3.prototype.delete=function(e){delete this.map[y6(e)]};R3.prototype.get=function(e){return e=y6(e),this.has(e)?this.map[e]:null};R3.prototype.has=function(e){return this.map.hasOwnProperty(y6(e))};R3.prototype.set=function(e,t){this.map[y6(e)]=Jn(t)};R3.prototype.forEach=function(e,t){for(var r in this.map)this.map.hasOwnProperty(r)&&e.call(t,this.map[r],r,this)};R3.prototype.keys=function(){var e=[];return this.forEach(function(t,r){e.push(r)}),Xn(e)};R3.prototype.values=function(){var e=[];return this.forEach(function(t){e.push(t)}),Xn(e)};R3.prototype.entries=function(){var e=[];return this.forEach(function(t,r){e.push([r,t])}),Xn(e)};Z3.iterable&&(R3.prototype[Symbol.iterator]=R3.prototype.entries);function lt(e){if(!e._noBody){if(e.bodyUsed)return Promise.reject(new TypeError("Already read"));e.bodyUsed=!0}}function Kc(e){return new Promise(function(t,r){e.onload=function(){t(e.result)},e.onerror=function(){r(e.error)}})}function __(e){var t=new FileReader,r=Kc(t);return t.readAsArrayBuffer(e),r}function E_(e){var t=new FileReader,r=Kc(t),n=/charset=([A-Za-z0-9_-]+)/.exec(e.type),i=n?n[1]:"utf-8";return t.readAsText(e,i),r}function S_(e){for(var t=new Uint8Array(e),r=new Array(t.length),n=0;n<t.length;n++)r[n]=String.fromCharCode(t[n]);return r.join("")}function Ds(e){if(e.slice)return e.slice(0);var t=new Uint8Array(e.byteLength);return t.set(new Uint8Array(e)),t.buffer}function Gc(){return this.bodyUsed=!1,this._initBody=function(e){this.bodyUsed=this.bodyUsed,this._bodyInit=e,e?typeof e=="string"?this._bodyText=e:Z3.blob&&Blob.prototype.isPrototypeOf(e)?this._bodyBlob=e:Z3.formData&&FormData.prototype.isPrototypeOf(e)?this._bodyFormData=e:Z3.searchParams&&URLSearchParams.prototype.isPrototypeOf(e)?this._bodyText=e.toString():Z3.arrayBuffer&&Z3.blob&&m_(e)?(this._bodyArrayBuffer=Ds(e.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer])):Z3.arrayBuffer&&(ArrayBuffer.prototype.isPrototypeOf(e)||w_(e))?this._bodyArrayBuffer=Ds(e):this._bodyText=e=Object.prototype.toString.call(e):(this._noBody=!0,this._bodyText=""),this.headers.get("content-type")||(typeof e=="string"?this.headers.set("content-type","text/plain;charset=UTF-8"):this._bodyBlob&&this._bodyBlob.type?this.headers.set("content-type",this._bodyBlob.type):Z3.searchParams&&URLSearchParams.prototype.isPrototypeOf(e)&&this.headers.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"))},Z3.blob&&(this.blob=function(){var e=lt(this);if(e)return e;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(new Blob([this._bodyArrayBuffer]));if(this._bodyFormData)throw new Error("could not read FormData body as blob");return Promise.resolve(new Blob([this._bodyText]))}),this.arrayBuffer=function(){if(this._bodyArrayBuffer){var e=lt(this);return e||(ArrayBuffer.isView(this._bodyArrayBuffer)?Promise.resolve(this._bodyArrayBuffer.buffer.slice(this._bodyArrayBuffer.byteOffset,this._bodyArrayBuffer.byteOffset+this._bodyArrayBuffer.byteLength)):Promise.resolve(this._bodyArrayBuffer))}else{if(Z3.blob)return this.blob().then(__);throw new Error("could not read as ArrayBuffer")}},this.text=function(){var e=lt(this);if(e)return e;if(this._bodyBlob)return E_(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(S_(this._bodyArrayBuffer));if(this._bodyFormData)throw new Error("could not read FormData body as text");return Promise.resolve(this._bodyText)},Z3.formData&&(this.formData=function(){return this.text().then(A_)}),this.json=function(){return this.text().then(JSON.parse)},this}var b_=["CONNECT","DELETE","GET","HEAD","OPTIONS","PATCH","POST","PUT","TRACE"];function C_(e){var t=e.toUpperCase();return b_.indexOf(t)>-1?t:e}function e1(e,t){if(!(this instanceof e1))throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');t=t||{};var r=t.body;if(e instanceof e1){if(e.bodyUsed)throw new TypeError("Already read");this.url=e.url,this.credentials=e.credentials,t.headers||(this.headers=new R3(e.headers)),this.method=e.method,this.mode=e.mode,this.signal=e.signal,!r&&e._bodyInit!=null&&(r=e._bodyInit,e.bodyUsed=!0)}else this.url=String(e);if(this.credentials=t.credentials||this.credentials||"same-origin",(t.headers||!this.headers)&&(this.headers=new R3(t.headers)),this.method=C_(t.method||this.method||"GET"),this.mode=t.mode||this.mode||null,this.signal=t.signal||this.signal||function(){if("AbortController"in N3){var o=new AbortController;return o.signal}}(),this.referrer=null,(this.method==="GET"||this.method==="HEAD")&&r)throw new TypeError("Body not allowed for GET or HEAD requests");if(this._initBody(r),(this.method==="GET"||this.method==="HEAD")&&(t.cache==="no-store"||t.cache==="no-cache")){var n=/([?&])_=[^&]*/;if(n.test(this.url))this.url=this.url.replace(n,"$1_="+new Date().getTime());else{var i=/\?/;this.url+=(i.test(this.url)?"&":"?")+"_="+new Date().getTime()}}}e1.prototype.clone=function(){return new e1(this,{body:this._bodyInit})};function A_(e){var t=new FormData;return e.trim().split("&").forEach(function(r){if(r){var n=r.split("="),i=n.shift().replace(/\+/g," "),o=n.join("=").replace(/\+/g," ");t.append(decodeURIComponent(i),decodeURIComponent(o))}}),t}function B_(e){var t=new R3,r=e.replace(/\r?\n[\t ]+/g," ");return r.split("\r").map(function(n){return n.indexOf(`
`)===0?n.substr(1,n.length):n}).forEach(function(n){var i=n.split(":"),o=i.shift().trim();if(o){var s=i.join(":").trim();try{t.append(o,s)}catch(a){console.warn("Response "+a.message)}}}),t}Gc.call(e1.prototype);function d4(e,t){if(!(this instanceof d4))throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');if(t||(t={}),this.type="default",this.status=t.status===void 0?200:t.status,this.status<200||this.status>599)throw new RangeError("Failed to construct 'Response': The status provided (0) is outside the range [200, 599].");this.ok=this.status>=200&&this.status<300,this.statusText=t.statusText===void 0?"":""+t.statusText,this.headers=new R3(t.headers),this.url=t.url||"",this._initBody(e)}Gc.call(d4.prototype);d4.prototype.clone=function(){return new d4(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new R3(this.headers),url:this.url})};d4.error=function(){var e=new d4(null,{status:200,statusText:""});return e.status=0,e.type="error",e};var T_=[301,302,303,307,308];d4.redirect=function(e,t){if(T_.indexOf(t)===-1)throw new RangeError("Invalid status code");return new d4(null,{status:t,headers:{location:e}})};var O5=N3.DOMException;try{new O5}catch{O5=function(t,r){this.message=t,this.name=r;var n=Error(t);this.stack=n.stack},O5.prototype=Object.create(Error.prototype),O5.prototype.constructor=O5}function Qc(e,t){return new Promise(function(r,n){var i=new e1(e,t);if(i.signal&&i.signal.aborted)return n(new O5("Aborted","AbortError"));var o=new XMLHttpRequest;function s(){o.abort()}o.onload=function(){var u={statusText:o.statusText,headers:B_(o.getAllResponseHeaders()||"")};i.url.startsWith("file://")&&(o.status<200||o.status>599)?u.status=200:u.status=o.status,u.url="responseURL"in o?o.responseURL:u.headers.get("X-Request-URL");var h="response"in o?o.response:o.responseText;setTimeout(function(){r(new d4(h,u))},0)},o.onerror=function(){setTimeout(function(){n(new TypeError("Network request failed"))},0)},o.ontimeout=function(){setTimeout(function(){n(new TypeError("Network request failed"))},0)},o.onabort=function(){setTimeout(function(){n(new O5("Aborted","AbortError"))},0)};function a(u){try{return u===""&&N3.location.href?N3.location.href:u}catch{return u}}if(o.open(i.method,a(i.url),!0),i.credentials==="include"?o.withCredentials=!0:i.credentials==="omit"&&(o.withCredentials=!1),"responseType"in o&&(Z3.blob?o.responseType="blob":Z3.arrayBuffer&&(o.responseType="arraybuffer")),t&&typeof t.headers=="object"&&!(t.headers instanceof R3||N3.Headers&&t.headers instanceof N3.Headers)){var l=[];Object.getOwnPropertyNames(t.headers).forEach(function(u){l.push(y6(u)),o.setRequestHeader(u,Jn(t.headers[u]))}),i.headers.forEach(function(u,h){l.indexOf(h)===-1&&o.setRequestHeader(h,u)})}else i.headers.forEach(function(u,h){o.setRequestHeader(h,u)});i.signal&&(i.signal.addEventListener("abort",s),o.onreadystatechange=function(){o.readyState===4&&i.signal.removeEventListener("abort",s)}),o.send(typeof i._bodyInit>"u"?null:i._bodyInit)})}Qc.polyfill=!0;N3.fetch||(N3.fetch=Qc,N3.Headers=R3,N3.Request=e1,N3.Response=d4);var I_=self.fetch.bind(self),F_=R2&&R2.__extends||function(){var e=function(t,r){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o in i)i.hasOwnProperty(o)&&(n[o]=i[o])},e(t,r)};return function(t,r){e(t,r);function n(){this.constructor=t}t.prototype=r===null?Object.create(r):(n.prototype=r.prototype,new n)}}(),R_=R2&&R2.__awaiter||function(e,t,r,n){function i(o){return o instanceof r?o:new r(function(s){s(o)})}return new(r||(r=Promise))(function(o,s){function a(h){try{u(n.next(h))}catch(y){s(y)}}function l(h){try{u(n.throw(h))}catch(y){s(y)}}function u(h){h.done?o(h.value):i(h.value).then(a,l)}u((n=n.apply(e,t||[])).next())})},k_=R2&&R2.__generator||function(e,t){var r={label:0,sent:function(){if(o[0]&1)throw o[1];return o[1]},trys:[],ops:[]},n,i,o,s;return s={next:a(0),throw:a(1),return:a(2)},typeof Symbol=="function"&&(s[Symbol.iterator]=function(){return this}),s;function a(u){return function(h){return l([u,h])}}function l(u){if(n)throw new TypeError("Generator is already executing.");for(;r;)try{if(n=1,i&&(o=u[0]&2?i.return:u[0]?i.throw||((o=i.return)&&o.call(i),0):i.next)&&!(o=o.call(i,u[1])).done)return o;switch(i=0,o&&(u=[u[0]&2,o.value]),u[0]){case 0:case 1:o=u;break;case 4:return r.label++,{value:u[1],done:!1};case 5:r.label++,i=u[1],u=[0];continue;case 7:u=r.ops.pop(),r.trys.pop();continue;default:if(o=r.trys,!(o=o.length>0&&o[o.length-1])&&(u[0]===6||u[0]===2)){r=0;continue}if(u[0]===3&&(!o||u[1]>o[0]&&u[1]<o[3])){r.label=u[1];break}if(u[0]===6&&r.label<o[1]){r.label=o[1],o=u;break}if(o&&r.label<o[2]){r.label=o[2],r.ops.push(u);break}o[2]&&r.ops.pop(),r.trys.pop();continue}u=t.call(e,r)}catch(h){u=[6,h],i=0}finally{n=o=0}if(u[0]&5)throw u[1];return{value:u[0]?u[1]:void 0,done:!0}}},P_=R2&&R2.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(H8,"__esModule",{value:!0});H8.HTTPTransport=void 0;var O_=P_(I_),D_=m5,ct=p6,Us=h6,Yc=function(e){F_(t,e);function t(r,n){var i=e.call(this)||this;return i.onlyNotifications=function(o){return o instanceof Array?o.every(function(s){return s.request.request.id===null||s.request.request.id===void 0}):o.request.id===null||o.request.id===void 0},i.uri=r,i.credentials=n&&n.credentials,i.headers=t.setupHeaders(n&&n.headers),i.injectedFetcher=n==null?void 0:n.fetcher,i}return t.prototype.connect=function(){return Promise.resolve()},t.prototype.sendData=function(r,n){return n===void 0&&(n=null),R_(this,void 0,void 0,function(){var i,o,s,a,l,u,y,h,y;return k_(this,function(x){switch(x.label){case 0:i=this.transportRequestManager.addRequest(r,n),o=ct.getNotifications(r),s=ct.getBatchRequests(r),a=this.injectedFetcher||O_.default,x.label=1;case 1:return x.trys.push([1,4,,5]),[4,a(this.uri,{method:"POST",headers:this.headers,body:JSON.stringify(this.parseData(r)),credentials:this.credentials})];case 2:return l=x.sent(),this.transportRequestManager.settlePendingRequest(o),this.onlyNotifications(r)?[2,Promise.resolve()]:[4,l.text()];case 3:return u=x.sent(),y=this.transportRequestManager.resolveResponse(u),y?(this.transportRequestManager.settlePendingRequest(s,y),[2,Promise.reject(y)]):[3,5];case 4:return h=x.sent(),y=new Us.JSONRPCError(h.message,Us.ERR_UNKNOWN,h),this.transportRequestManager.settlePendingRequest(o,y),this.transportRequestManager.settlePendingRequest(ct.getBatchRequests(r),y),[2,Promise.reject(y)];case 5:return[2,i]}})})},t.prototype.close=function(){},t.setupHeaders=function(r){var n=new Headers(r);return n.set("Content-Type","application/json"),n},t}(D_.Transport);H8.HTTPTransport=Yc;H8.default=Yc;var Zn={},d1=null;typeof WebSocket<"u"?d1=WebSocket:typeof MozWebSocket<"u"?d1=MozWebSocket:typeof global<"u"?d1=global.WebSocket||global.MozWebSocket:typeof window<"u"?d1=window.WebSocket||window.MozWebSocket:typeof self<"u"&&(d1=self.WebSocket||self.MozWebSocket);const U_=d1,N_=Object.freeze(Object.defineProperty({__proto__:null,default:U_},Symbol.toStringTag,{value:"Module"})),$_=Rr(N_);var L_=R2&&R2.__extends||function(){var e=function(t,r){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o in i)i.hasOwnProperty(o)&&(n[o]=i[o])},e(t,r)};return function(t,r){e(t,r);function n(){this.constructor=t}t.prototype=r===null?Object.create(r):(n.prototype=r.prototype,new n)}}(),M_=R2&&R2.__awaiter||function(e,t,r,n){function i(o){return o instanceof r?o:new r(function(s){s(o)})}return new(r||(r=Promise))(function(o,s){function a(h){try{u(n.next(h))}catch(y){s(y)}}function l(h){try{u(n.throw(h))}catch(y){s(y)}}function u(h){h.done?o(h.value):i(h.value).then(a,l)}u((n=n.apply(e,t||[])).next())})},z_=R2&&R2.__generator||function(e,t){var r={label:0,sent:function(){if(o[0]&1)throw o[1];return o[1]},trys:[],ops:[]},n,i,o,s;return s={next:a(0),throw:a(1),return:a(2)},typeof Symbol=="function"&&(s[Symbol.iterator]=function(){return this}),s;function a(u){return function(h){return l([u,h])}}function l(u){if(n)throw new TypeError("Generator is already executing.");for(;r;)try{if(n=1,i&&(o=u[0]&2?i.return:u[0]?i.throw||((o=i.return)&&o.call(i),0):i.next)&&!(o=o.call(i,u[1])).done)return o;switch(i=0,o&&(u=[u[0]&2,o.value]),u[0]){case 0:case 1:o=u;break;case 4:return r.label++,{value:u[1],done:!1};case 5:r.label++,i=u[1],u=[0];continue;case 7:u=r.ops.pop(),r.trys.pop();continue;default:if(o=r.trys,!(o=o.length>0&&o[o.length-1])&&(u[0]===6||u[0]===2)){r=0;continue}if(u[0]===3&&(!o||u[1]>o[0]&&u[1]<o[3])){r.label=u[1];break}if(u[0]===6&&r.label<o[1]){r.label=o[1],o=u;break}if(o&&r.label<o[2]){r.label=o[2],r.ops.push(u);break}o[2]&&r.ops.pop(),r.trys.pop();continue}u=t.call(e,r)}catch(h){u=[6,h],i=0}finally{n=o=0}if(u[0]&5)throw u[1];return{value:u[0]?u[1]:void 0,done:!0}}},j_=R2&&R2.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(Zn,"__esModule",{value:!0});var H_=j_($_),q_=m5,Ns=p6,$s=h6,W_=function(e){L_(t,e);function t(r){var n=e.call(this)||this;return n.uri=r,n.connection=new H_.default(r),n}return t.prototype.connect=function(){var r=this;return new Promise(function(n,i){var o=function(){r.connection.removeEventListener("open",o),n()};r.connection.addEventListener("open",o),r.connection.addEventListener("message",function(s){var a=s.data;r.transportRequestManager.resolveResponse(a)})})},t.prototype.sendData=function(r,n){return n===void 0&&(n=5e3),M_(this,void 0,void 0,function(){var i,o,s;return z_(this,function(a){i=this.transportRequestManager.addRequest(r,n),o=Ns.getNotifications(r);try{this.connection.send(JSON.stringify(this.parseData(r))),this.transportRequestManager.settlePendingRequest(o)}catch(l){s=new $s.JSONRPCError(l.message,$s.ERR_UNKNOWN,l),this.transportRequestManager.settlePendingRequest(o,s),this.transportRequestManager.settlePendingRequest(Ns.getBatchRequests(r),s),i=Promise.reject(s)}return[2,i]})})},t.prototype.close=function(){this.connection.close()},t}(q_.Transport);Zn.default=W_;var ei={},V_=R2&&R2.__extends||function(){var e=function(t,r){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o in i)i.hasOwnProperty(o)&&(n[o]=i[o])},e(t,r)};return function(t,r){e(t,r);function n(){this.constructor=t}t.prototype=r===null?Object.create(r):(n.prototype=r.prototype,new n)}}(),Ls=R2&&R2.__awaiter||function(e,t,r,n){function i(o){return o instanceof r?o:new r(function(s){s(o)})}return new(r||(r=Promise))(function(o,s){function a(h){try{u(n.next(h))}catch(y){s(y)}}function l(h){try{u(n.throw(h))}catch(y){s(y)}}function u(h){h.done?o(h.value):i(h.value).then(a,l)}u((n=n.apply(e,t||[])).next())})},Ms=R2&&R2.__generator||function(e,t){var r={label:0,sent:function(){if(o[0]&1)throw o[1];return o[1]},trys:[],ops:[]},n,i,o,s;return s={next:a(0),throw:a(1),return:a(2)},typeof Symbol=="function"&&(s[Symbol.iterator]=function(){return this}),s;function a(u){return function(h){return l([u,h])}}function l(u){if(n)throw new TypeError("Generator is already executing.");for(;r;)try{if(n=1,i&&(o=u[0]&2?i.return:u[0]?i.throw||((o=i.return)&&o.call(i),0):i.next)&&!(o=o.call(i,u[1])).done)return o;switch(i=0,o&&(u=[u[0]&2,o.value]),u[0]){case 0:case 1:o=u;break;case 4:return r.label++,{value:u[1],done:!1};case 5:r.label++,i=u[1],u=[0];continue;case 7:u=r.ops.pop(),r.trys.pop();continue;default:if(o=r.trys,!(o=o.length>0&&o[o.length-1])&&(u[0]===6||u[0]===2)){r=0;continue}if(u[0]===3&&(!o||u[1]>o[0]&&u[1]<o[3])){r.label=u[1];break}if(u[0]===6&&r.label<o[1]){r.label=o[1],o=u;break}if(o&&r.label<o[2]){r.label=o[2],r.ops.push(u);break}o[2]&&r.ops.pop(),r.trys.pop();continue}u=t.call(e,r)}catch(h){u=[6,h],i=0}finally{n=o=0}if(u[0]&5)throw u[1];return{value:u[0]?u[1]:void 0,done:!0}}};Object.defineProperty(ei,"__esModule",{value:!0});var K_=m5,G_=p6,Q_=function(e){var t=400,r=window.screen.height,n=0,i=0;return window.open(e,"inspector:popup","left="+n+",top="+i+",width="+t+",height="+r+",resizable,scrollbars=yes,status=1")},Y_=function(e){V_(t,e);function t(r){var n=e.call(this)||this;return n.messageHandler=function(i){n.transportRequestManager.resolveResponse(JSON.stringify(i.data))},n.uri=r,n.postMessageID="post-message-transport-"+Math.random(),n}return t.prototype.createWindow=function(r){return new Promise(function(n,i){var o;o=Q_(r),setTimeout(function(){n(o)},3e3)})},t.prototype.connect=function(){var r=this,n=/^(http|https):\/\/.*$/;return new Promise(function(i,o){return Ls(r,void 0,void 0,function(){var s;return Ms(this,function(a){switch(a.label){case 0:return n.test(this.uri)||o(new Error("Bad URI")),s=this,[4,this.createWindow(this.uri)];case 1:return s.frame=a.sent(),window.addEventListener("message",this.messageHandler),i(),[2]}})})})},t.prototype.sendData=function(r,n){return Ls(this,void 0,void 0,function(){var i,o;return Ms(this,function(s){return i=this.transportRequestManager.addRequest(r,null),o=G_.getNotifications(r),this.frame&&(this.frame.postMessage(r.request,this.uri),this.transportRequestManager.settlePendingRequest(o)),[2,i]})})},t.prototype.close=function(){this.frame&&(window.removeEventListener("message",this.messageHandler),this.frame.close())},t}(K_.Transport);ei.default=Y_;var ti={},J_=R2&&R2.__extends||function(){var e=function(t,r){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o in i)i.hasOwnProperty(o)&&(n[o]=i[o])},e(t,r)};return function(t,r){e(t,r);function n(){this.constructor=t}t.prototype=r===null?Object.create(r):(n.prototype=r.prototype,new n)}}(),zs=R2&&R2.__awaiter||function(e,t,r,n){function i(o){return o instanceof r?o:new r(function(s){s(o)})}return new(r||(r=Promise))(function(o,s){function a(h){try{u(n.next(h))}catch(y){s(y)}}function l(h){try{u(n.throw(h))}catch(y){s(y)}}function u(h){h.done?o(h.value):i(h.value).then(a,l)}u((n=n.apply(e,t||[])).next())})},js=R2&&R2.__generator||function(e,t){var r={label:0,sent:function(){if(o[0]&1)throw o[1];return o[1]},trys:[],ops:[]},n,i,o,s;return s={next:a(0),throw:a(1),return:a(2)},typeof Symbol=="function"&&(s[Symbol.iterator]=function(){return this}),s;function a(u){return function(h){return l([u,h])}}function l(u){if(n)throw new TypeError("Generator is already executing.");for(;r;)try{if(n=1,i&&(o=u[0]&2?i.return:u[0]?i.throw||((o=i.return)&&o.call(i),0):i.next)&&!(o=o.call(i,u[1])).done)return o;switch(i=0,o&&(u=[u[0]&2,o.value]),u[0]){case 0:case 1:o=u;break;case 4:return r.label++,{value:u[1],done:!1};case 5:r.label++,i=u[1],u=[0];continue;case 7:u=r.ops.pop(),r.trys.pop();continue;default:if(o=r.trys,!(o=o.length>0&&o[o.length-1])&&(u[0]===6||u[0]===2)){r=0;continue}if(u[0]===3&&(!o||u[1]>o[0]&&u[1]<o[3])){r.label=u[1];break}if(u[0]===6&&r.label<o[1]){r.label=o[1],o=u;break}if(o&&r.label<o[2]){r.label=o[2],r.ops.push(u);break}o[2]&&r.ops.pop(),r.trys.pop();continue}u=t.call(e,r)}catch(h){u=[6,h],i=0}finally{n=o=0}if(u[0]&5)throw u[1];return{value:u[0]?u[1]:void 0,done:!0}}};Object.defineProperty(ti,"__esModule",{value:!0});var X_=m5,Z_=p6,eE=function(e){J_(t,e);function t(r){var n=e.call(this)||this;return n.messageHandler=function(i){n.transportRequestManager.resolveResponse(JSON.stringify(i.data))},n.uri=r,n.postMessageID="post-message-transport-"+Math.random(),n}return t.prototype.createWindow=function(r){var n=this;return new Promise(function(i,o){var s,a=document.createElement("iframe");a.setAttribute("id",n.postMessageID),a.setAttribute("width","0px"),a.setAttribute("height","0px"),a.setAttribute("style","visiblity:hidden;border:none;outline:none;"),a.addEventListener("load",function(){i(s)}),a.setAttribute("src",r),window.document.body.appendChild(a),s=a.contentWindow})},t.prototype.connect=function(){var r=this,n=/^(http|https):\/\/.*$/;return new Promise(function(i,o){return zs(r,void 0,void 0,function(){var s;return js(this,function(a){switch(a.label){case 0:return n.test(this.uri)||o(new Error("Bad URI")),s=this,[4,this.createWindow(this.uri)];case 1:return s.frame=a.sent(),window.addEventListener("message",this.messageHandler),i(),[2]}})})})},t.prototype.sendData=function(r,n){return zs(this,void 0,void 0,function(){var i,o;return js(this,function(s){return i=this.transportRequestManager.addRequest(r,null),o=Z_.getNotifications(r),this.frame&&(this.frame.postMessage(r.request,"*"),this.transportRequestManager.settlePendingRequest(o)),[2,i]})})},t.prototype.close=function(){var r=document.getElementById(this.postMessageID);r==null||r.remove(),window.removeEventListener("message",this.messageHandler)},t}(X_.Transport);ti.default=eE;var ri={},Hs=R2&&R2.__awaiter||function(e,t,r,n){function i(o){return o instanceof r?o:new r(function(s){s(o)})}return new(r||(r=Promise))(function(o,s){function a(h){try{u(n.next(h))}catch(y){s(y)}}function l(h){try{u(n.throw(h))}catch(y){s(y)}}function u(h){h.done?o(h.value):i(h.value).then(a,l)}u((n=n.apply(e,t||[])).next())})},qs=R2&&R2.__generator||function(e,t){var r={label:0,sent:function(){if(o[0]&1)throw o[1];return o[1]},trys:[],ops:[]},n,i,o,s;return s={next:a(0),throw:a(1),return:a(2)},typeof Symbol=="function"&&(s[Symbol.iterator]=function(){return this}),s;function a(u){return function(h){return l([u,h])}}function l(u){if(n)throw new TypeError("Generator is already executing.");for(;r;)try{if(n=1,i&&(o=u[0]&2?i.return:u[0]?i.throw||((o=i.return)&&o.call(i),0):i.next)&&!(o=o.call(i,u[1])).done)return o;switch(i=0,o&&(u=[u[0]&2,o.value]),u[0]){case 0:case 1:o=u;break;case 4:return r.label++,{value:u[1],done:!1};case 5:r.label++,i=u[1],u=[0];continue;case 7:u=r.ops.pop(),r.trys.pop();continue;default:if(o=r.trys,!(o=o.length>0&&o[o.length-1])&&(u[0]===6||u[0]===2)){r=0;continue}if(u[0]===3&&(!o||u[1]>o[0]&&u[1]<o[3])){r.label=u[1];break}if(u[0]===6&&r.label<o[1]){r.label=o[1],o=u;break}if(o&&r.label<o[2]){r.label=o[2],r.ops.push(u);break}o[2]&&r.ops.pop(),r.trys.pop();continue}u=t.call(e,r)}catch(h){u=[6,h],i=0}finally{n=o=0}if(u[0]&5)throw u[1];return{value:u[0]?u[1]:void 0,done:!0}}};Object.defineProperty(ri,"__esModule",{value:!0});var tE=function(){function e(t){this.requestManager=t}return e.prototype.startBatch=function(){return this.requestManager.startBatch()},e.prototype.stopBatch=function(){return this.requestManager.stopBatch()},e.prototype.request=function(t,r){return Hs(this,void 0,void 0,function(){return qs(this,function(n){switch(n.label){case 0:return this.requestManager.connectPromise?[4,this.requestManager.connectPromise]:[3,2];case 1:n.sent(),n.label=2;case 2:return[2,this.requestManager.request(t,!1,r)]}})})},e.prototype.notify=function(t){return Hs(this,void 0,void 0,function(){return qs(this,function(r){switch(r.label){case 0:return this.requestManager.connectPromise?[4,this.requestManager.connectPromise]:[3,2];case 1:r.sent(),r.label=2;case 2:return[2,this.requestManager.request(t,!0,null)]}})})},e.prototype.onNotification=function(t){this.requestManager.requestChannel.addListener("notification",t)},e.prototype.onError=function(t){this.requestManager.requestChannel.addListener("error",t)},e.prototype.close=function(){this.requestManager.close()},e}();ri.default=tE;(function(e){var t=R2&&R2.__importDefault||function(h){return h&&h.__esModule?h:{default:h}};Object.defineProperty(e,"__esModule",{value:!0}),e.PostMessageIframeTransport=e.PostMessageWindowTransport=e.JSONRPCError=e.WebSocketTransport=e.EventEmitterTransport=e.HTTPTransport=e.RequestManager=e.Client=void 0;var r=t(Nc);e.RequestManager=r.default;var n=t(Yn);e.EventEmitterTransport=n.default;var i=t(H8);e.HTTPTransport=i.default;var o=t(Zn);e.WebSocketTransport=o.default;var s=t(ei);e.PostMessageWindowTransport=s.default;var a=t(ti);e.PostMessageIframeTransport=a.default;var l=h6;Object.defineProperty(e,"JSONRPCError",{enumerable:!0,get:function(){return l.JSONRPCError}});var u=t(ri);e.Client=u.default,e.default=u.default})(A1);class Ws extends A1.Client{constructor(t){super(t)}async getRpcApiVersion(){return(await this.request({method:"rpc.discover",params:[]})).info.version}async btc_queryInscriptions(t,r,n,i){return await this.request({method:"btc_queryInscriptions",params:[t,r,n,i]})}async btc_queryUTXOs(t,r,n,i){return await this.request({method:"btc_queryUTXOs",params:[t,r,n,i]})}async rooch_executeRawTransaction(t,r){const n=t?`0x${Array.from(t).map(o=>o.toString(16).padStart(2,"0")).join("")}`:null;return await this.request({method:"rooch_executeRawTransaction",params:[n,r]})}async rooch_executeViewFunction(t){return await this.request({method:"rooch_executeViewFunction",params:[t]})}async rooch_getBalance(t,r){return await this.request({method:"rooch_getBalance",params:[t,r]})}async rooch_getBalances(t,r,n){return await this.request({method:"rooch_getBalances",params:[t,r,n]})}async rooch_getChainID(){return await this.request({method:"rooch_getChainID",params:[]})}async rooch_getEventsByEventHandle(t,r,n,i,o){return await this.request({method:"rooch_getEventsByEventHandle",params:[t,r,n,i,o]})}async rooch_getStates(t,r){return await this.request({method:"rooch_getStates",params:[t,r]})}async rooch_getTransactionsByHash(t){return await this.request({method:"rooch_getTransactionsByHash",params:[t]})}async rooch_getTransactionsByOrder(t,r,n){return await this.request({method:"rooch_getTransactionsByOrder",params:[t,r,n]})}async rooch_listStates(t,r,n,i){return await this.request({method:"rooch_listStates",params:[t,r,n,i]})}async rooch_queryEvents(t,r,n,i){return await this.request({method:"rooch_queryEvents",params:[t,r,n,i]})}async rooch_queryFieldStates(t,r,n,i){return await this.request({method:"rooch_queryFieldStates",params:[t,r,n,i]})}async rooch_queryGlobalStates(t,r,n,i){return await this.request({method:"rooch_queryGlobalStates",params:[t,r,n,i]})}async rooch_queryObjectStates(t,r,n,i){return await this.request({method:"rooch_queryObjectStates",params:[t,r,n,i]})}async rooch_queryTableStates(t,r,n,i){return await this.request({method:"rooch_queryTableStates",params:[t,r,n,i]})}async rooch_queryTransactions(t,r,n,i){return await this.request({method:"rooch_queryTransactions",params:[t,r,n,i]})}async rooch_sendRawTransaction(t){const r=t?`0x${Array.from(t).map(i=>i.toString(16).padStart(2,"0")).join("")}`:null;return await this.request({method:"rooch_sendRawTransaction",params:[r]})}}const rE=Symbol.for("@roochnetwork/rooch-sdk");function nE(e){return typeof e=="object"&&e!==null&&e[rE]===!0}const Vs={versionCacheTimeoutInSeconds:600};class iE{constructor(t=Tn,r=Vs){this.options=r,this.network=t;const n={...Vs,...r};this.options=n,this.client=new Ws(new A1.RequestManager([new A1.HTTPTransport(t.options.url,{headers:{"Content-Type":"application/json"},fetcher:n.fetcher})]))}switchChain(t){this.client.close(),this.network=t,this.client=new Ws(new A1.RequestManager([new A1.HTTPTransport(t.url,{headers:{"Content-Type":"application/json"},fetcher:this.options.fetcher})]))}ChainInfo(){return this.network.info}getChainId(){return this.network.id}async getRpcApiVersion(){if(this.rpcApiVersion&&this.cacheExpiry&&this.cacheExpiry<=Date.now())return this.rpcApiVersion;try{return this.rpcApiVersion=await this.client.getRpcApiVersion(),this.cacheExpiry=Date.now()+(this.options.versionCacheTimeoutInSeconds??0)*1e3,this.rpcApiVersion}catch{return}}async executeViewFunction(t){var i,o;const r=(i=t.tyArgs)==null?void 0:i.map(s=>dr(s)),n=(o=t.args)==null?void 0:o.map(s=>yc(hr(s)));return this.client.rooch_executeViewFunction({function_id:mw(t.funcId),ty_args:r??[],args:n??[]})}async sendRawTransaction(t){if(t instanceof Uint8Array)return this.client.rooch_sendRawTransaction(t);if(typeof t=="object"&&t!==null&&"authorizer"in t&&"data"in t){const{data:k,authorizer:S}=t,E=(()=>{const W=new b4;return k.serialize(W),W.getBytes()})(),A=await S.auth(E),N=new g8(k,A),H=(()=>{const W=new b4;return N.serialize(W),W.getBytes()})();return this.client.rooch_sendRawTransaction(H)}const{address:r,authorizer:n,args:i,funcId:o,tyArgs:s,opts:a}=t,l=await this.getSequenceNumber(r),u=(i==null?void 0:i.map(k=>hr(k)))??[],h=Tc(o,s??[],u),y=new j8(new Y0(Kn(r)),BigInt(l),BigInt(this.getChainId()),BigInt((a==null?void 0:a.maxGasAmount)??Ul),h),x=(()=>{const k=new b4;return y.serialize(k),k.getBytes()})(),b=await n.auth(x),C=new g8(y,b),T=(()=>{const k=new b4;return C.serialize(k),k.getBytes()})();return this.client.rooch_sendRawTransaction(T)}async getTransactionsByHashes(t){return await this.client.rooch_getTransactionsByHash(t)}async getTransactions(t){return this.client.rooch_getTransactionsByOrder(t.cursor.toString(),t.limit.toString(),t.descending_order)}async getEvents(t){return await this.client.rooch_getEventsByEventHandle(t.eventHandleType,t.cursor.toString(),t.limit.toString(),t.descending_order,{decode:!0})}async getStates(t){return await this.client.rooch_getStates(t,{decode:!0})}async listStates(t){return await this.client.rooch_listStates(t.accessPath,t.cursor,t.limit.toString(),{decode:!0})}async queryGlobalStates(t){return await this.client.rooch_queryGlobalStates(t.filter,t.cursor,t.limit.toString(),t.descending_order)}async queryObjectStates(t){return await this.client.rooch_queryObjectStates(t.filter,t.cursor,t.limit.toString(),t.descending_order)}async queryFieldStates(t){return await this.client.rooch_queryFieldStates(t.filter,t.cursor,t.limit.toString(),t.descending_order)}async queryTableStates(t){return await this.client.rooch_queryTableStates(t.filter,t.cursor,t.limit.toString(),t.descending_order)}async queryInscriptions(t){return await this.client.btc_queryInscriptions(t.filter,t.cursor,t.limit.toString(),t.descending_order)}async queryUTXOs(t){return await this.client.btc_queryUTXOs(t.filter,t.cursor,t.limit.toString(),t.descending_order)}async queryTransactions(t){return await this.client.rooch_queryTransactions(t.filter,t.cursor,t.limit,t.descending_order)}async queryEvents(t){return await this.client.rooch_queryEvents(t.filter,t.cursor,t.limit,t.descending_order)}async getBalance(t){return await this.client.rooch_getBalance(t.address,t.coinType)}async getBalances(t){return await this.client.rooch_getBalances(t.address,t.cursor,t.limit)}async getSequenceNumber(t){const r=await this.executeViewFunction({funcId:"0x2::account::sequence_number",tyArgs:[],args:[{type:"Address",value:t}]});return r&&r.return_values?r.return_values[0].decoded_value:0}async querySessionKeys(t,r,n){const i=`/resource/${t}/0x3::session_key::SessionKeys`,o=await this.getStates(i);if(!o||Array.isArray(o)&&o.length===0)throw new Error("not found state");const l=`/table/${o[0].decoded_value.value.keys.value.handle.value.id}`,u=await this.listStates({accessPath:l,cursor:r,limit:n}),h=x=>{const b=new Array;for(const C of x)b.push(`${C.module_name}::${C.module_address}::${C.function_name}`);return b};return{data:(()=>{const x=new Array;for(const b of u.data){const C=b==null?void 0:b.state.decoded_value;if(C){const T=C.value;x.push({authentication_key:T.authentication_key,scopes:h(T.scopes),create_time:parseInt(T.create_time),last_active_time:parseInt(T.last_active_time),max_inactive_interval:parseInt(T.max_inactive_interval)})}}return x})(),nextCursor:u.next_cursor,hasNextPage:u.has_next_page}}async sessionIsExpired(t,r){const n=await this.executeViewFunction({funcId:"0x3::session_key::is_expired_session_key",tyArgs:[],args:[{type:"Address",value:t},{type:{Vector:"U8"},value:X6(r)}]});if(n&&n.vm_status!=="Executed")throw new Error("view 0x3::session_key::is_expired_session_key fail");return n.return_values[0].decoded_value}async gasCoinBalance(t){const r=await this.executeViewFunction({funcId:"0x3::gas_coin::balance",tyArgs:[],args:[{type:"Address",value:t}]});if(r&&r.vm_status!=="Executed")throw new Error("view 0x3::gas_coin::balance fail");return BigInt(r.return_values[0].decoded_value)}async resoleRoochAddress(t){const r=new Nx(BigInt(t.multiChainID),X6(t.address)),n=await this.executeViewFunction({funcId:"0x3::address_mapping::resolve_or_generate",tyArgs:[],args:[{type:{Struct:{address:"0x3",module:"address_mapping",name:"MultiChainAddress"}},value:r}]});if(n&&n.vm_status==="Executed"&&n.return_values)return n.return_values[0].decoded_value;throw new Error("resolve rooch address fail")}}const oE=0;class sE{constructor(t){this.pk=t}async auth(t,r){const n=await this.pk.signMessage(t);return new z8(BigInt(oE),Rc(n.signature))}}class aE{constructor(t,r){this.client=t,this.keypair=r??C1.generate()}getKeypar(){return this.keypair}getAddress(){return this.address||(this.address=this.keypair.getPublicKey().toRoochAddress()),this.address}getAuthorizer(){return this.authorizer||(this.authorizer=new sE(this.keypair)),this.authorizer}async sendTransaction(t,r,n,i){return this.client.sendRawTransaction({address:this.getAddress(),authorizer:this.getAuthorizer(),funcId:t,args:r,tyArgs:n,opts:i})}async getBalance(t){return this.client.getBalance({address:this.getAddress(),coinType:t})}async getBalances(t,r){return this.client.getBalances({address:this.getAddress(),cursor:t,limit:r})}}const uE=3,Ks=0,Gs=1,Qs=2,Ys="0x3::session_key::remove_session_key_entry";class ni{constructor(t,r,n,i,o){this.client=t,this.account=r,this.scopes=n,this.maxInactiveInterval=i,this.localCreateSessionTime=Date.now()/1e3,this.sessionAccount=new aE(this.client),this.authInfo=o,this.scopes.find(s=>s==="0x3::*::*"||s===Ys)||this.scopes.push(Ys)}static async CREATE(t,r,n,i,o){return new ni(t,r,n,i).build(o)}async build(t){const[r,n,i]=this.scopes.map(h=>{const y=h.split("::");if(y.length!==uE)throw new Error("invalid scope");const x=y[Gs],b=y[Ks],C=y[Qs];return[x,b,C]}).reduce((h,y)=>(h[0].push(y[Gs]),h[1].push(y[Ks]),h[2].push(y[Qs]),h),[[],[],[]]),o=[{type:{Vector:"U8"},value:X6(this.getAuthKey())},{type:{Vector:"Address"},value:r},{type:{Vector:"Ascii"},value:n},{type:{Vector:"Ascii"},value:i},{type:"U64",value:BigInt(this.maxInactiveInterval)}],s=await this.client.getSequenceNumber(this.getAddress()),a=o.map(h=>hr(h)),l=Tc("0x3::session_key::create_session_key_with_multi_scope_entry",[],a),u=new j8(new Y0(Kn(this.getAddress())),BigInt(s),BigInt(this.client.getChainId()),BigInt((t==null?void 0:t.maxGasAmount)??Ul),l);return this.register(u)}async register(t){const r=await this.client.sendRawTransaction({authorizer:this.account.getAuthorizer(),data:t});return console.log(r),this}getAuthKey(){return this.sessionAccount.getAddress()}getAddress(){return this.account.getAddress()}getAuthorizer(){return this.sessionAccount.getAuthorizer()}async sendTransaction(t,r,n,i){return this.client.sendRawTransaction({address:this.getAddress(),authorizer:this.getAuthorizer(),funcId:t,args:r,tyArgs:n,opts:i})}async isExpired(){return this.client.sessionIsExpired(this.account.getAddress(),this.getAuthKey())}async getSessionKey(){return this.client.executeViewFunction({funcId:"0x3::session_key::get_session_key",tyArgs:[],args:[{type:"Address",value:this.getAddress()},{type:{Vector:"U8"},value:X6(this.getAuthKey())}]})}async querySessionKeys(t,r){return this.client.querySessionKeys(this.getAddress(),t,r)}async destroy(t){return await this.client.sendRawTransaction({funcId:"0x3::session_key::remove_session_key_entry",args:[{type:{Vector:"U8"},value:X6(this.getAuthKey())}],tyArgs:[],address:this.getAddress(),authorizer:this.getAuthorizer(),opts:t})}}const Js=e=>{let t;const r=new Set,n=(l,u)=>{const h=typeof l=="function"?l(t):l;if(!Object.is(h,t)){const y=t;t=u??(typeof h!="object"||h===null)?h:Object.assign({},t,h),r.forEach(x=>x(t,y))}},i=()=>t,a={setState:n,getState:i,subscribe:l=>(r.add(l),()=>r.delete(l)),destroy:()=>{r.clear()}};return t=e(n,i,a),a},ii=e=>e?Js(e):Js;var Jc={exports:{}},Xc={},Zc={exports:{}},ef={};/**
 * @license React
 * use-sync-external-store-shim.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var s6=L;function lE(e,t){return e===t&&(e!==0||1/e===1/t)||e!==e&&t!==t}var cE=typeof Object.is=="function"?Object.is:lE,fE=s6.useState,dE=s6.useEffect,hE=s6.useLayoutEffect,pE=s6.useDebugValue;function yE(e,t){var r=t(),n=fE({inst:{value:r,getSnapshot:t}}),i=n[0].inst,o=n[1];return hE(function(){i.value=r,i.getSnapshot=t,ft(i)&&o({inst:i})},[e,r,t]),dE(function(){return ft(i)&&o({inst:i}),e(function(){ft(i)&&o({inst:i})})},[e]),pE(r),r}function ft(e){var t=e.getSnapshot;e=e.value;try{var r=t();return!cE(e,r)}catch{return!0}}function vE(e,t){return t()}var gE=typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"?vE:yE;ef.useSyncExternalStore=s6.useSyncExternalStore!==void 0?s6.useSyncExternalStore:gE;Zc.exports=ef;var mE=Zc.exports;/**
 * @license React
 * use-sync-external-store-shim/with-selector.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var xe=L,xE=mE;function wE(e,t){return e===t&&(e!==0||1/e===1/t)||e!==e&&t!==t}var _E=typeof Object.is=="function"?Object.is:wE,EE=xE.useSyncExternalStore,SE=xe.useRef,bE=xe.useEffect,CE=xe.useMemo,AE=xe.useDebugValue;Xc.useSyncExternalStoreWithSelector=function(e,t,r,n,i){var o=SE(null);if(o.current===null){var s={hasValue:!1,value:null};o.current=s}else s=o.current;o=CE(function(){function l(b){if(!u){if(u=!0,h=b,b=n(b),i!==void 0&&s.hasValue){var C=s.value;if(i(C,b))return y=C}return y=b}if(C=y,_E(h,b))return C;var T=n(b);return i!==void 0&&i(C,T)?C:(h=b,y=T)}var u=!1,h,y,x=r===void 0?null:r;return[function(){return l(t())},x===null?void 0:function(){return l(x())}]},[t,r,n,i]);var a=EE(e,o[0],o[1]);return bE(function(){s.hasValue=!0,s.value=a},[a]),AE(a),a};Jc.exports=Xc;var BE=Jc.exports;const TE=m7(BE),{useDebugValue:IE}=Ra,{useSyncExternalStoreWithSelector:FE}=TE;function RE(e,t=e.getState,r){const n=FE(e.subscribe,e.getState,e.getServerState||e.getState,t,r);return IE(n),n}function we(e,t){let r;try{r=e()}catch{return}return{getItem:i=>{var o;const s=l=>l===null?null:JSON.parse(l,t==null?void 0:t.reviver),a=(o=r.getItem(i))!=null?o:null;return a instanceof Promise?a.then(s):s(a)},setItem:(i,o)=>r.setItem(i,JSON.stringify(o,t==null?void 0:t.replacer)),removeItem:i=>r.removeItem(i)}}const m8=e=>t=>{try{const r=e(t);return r instanceof Promise?r:{then(n){return m8(n)(r)},catch(n){return this}}}catch(r){return{then(n){return this},catch(n){return m8(n)(r)}}}},kE=(e,t)=>(r,n,i)=>{let o={getStorage:()=>localStorage,serialize:JSON.stringify,deserialize:JSON.parse,partialize:k=>k,version:0,merge:(k,S)=>({...S,...k}),...t},s=!1;const a=new Set,l=new Set;let u;try{u=o.getStorage()}catch{}if(!u)return e((...k)=>{console.warn(`[zustand persist middleware] Unable to update item '${o.name}', the given storage is currently unavailable.`),r(...k)},n,i);const h=m8(o.serialize),y=()=>{const k=o.partialize({...n()});let S;const E=h({state:k,version:o.version}).then(A=>u.setItem(o.name,A)).catch(A=>{S=A});if(S)throw S;return E},x=i.setState;i.setState=(k,S)=>{x(k,S),y()};const b=e((...k)=>{r(...k),y()},n,i);let C;const T=()=>{var k;if(!u)return;s=!1,a.forEach(E=>E(n()));const S=((k=o.onRehydrateStorage)==null?void 0:k.call(o,n()))||void 0;return m8(u.getItem.bind(u))(o.name).then(E=>{if(E)return o.deserialize(E)}).then(E=>{if(E)if(typeof E.version=="number"&&E.version!==o.version){if(o.migrate)return o.migrate(E.state,E.version);console.error("State loaded from storage couldn't be migrated since no migrate function was provided")}else return E.state}).then(E=>{var A;return C=o.merge(E,(A=n())!=null?A:b),r(C,!0),y()}).then(()=>{S==null||S(C,void 0),s=!0,l.forEach(E=>E(C))}).catch(E=>{S==null||S(void 0,E)})};return i.persist={setOptions:k=>{o={...o,...k},k.getStorage&&(u=k.getStorage())},clearStorage:()=>{u==null||u.removeItem(o.name)},getOptions:()=>o,rehydrate:()=>T(),hasHydrated:()=>s,onHydrate:k=>(a.add(k),()=>{a.delete(k)}),onFinishHydration:k=>(l.add(k),()=>{l.delete(k)})},T(),C||b},PE=(e,t)=>(r,n,i)=>{let o={storage:we(()=>localStorage),partialize:T=>T,version:0,merge:(T,k)=>({...k,...T}),...t},s=!1;const a=new Set,l=new Set;let u=o.storage;if(!u)return e((...T)=>{console.warn(`[zustand persist middleware] Unable to update item '${o.name}', the given storage is currently unavailable.`),r(...T)},n,i);const h=()=>{const T=o.partialize({...n()});return u.setItem(o.name,{state:T,version:o.version})},y=i.setState;i.setState=(T,k)=>{y(T,k),h()};const x=e((...T)=>{r(...T),h()},n,i);let b;const C=()=>{var T,k;if(!u)return;s=!1,a.forEach(E=>{var A;return E((A=n())!=null?A:x)});const S=((k=o.onRehydrateStorage)==null?void 0:k.call(o,(T=n())!=null?T:x))||void 0;return m8(u.getItem.bind(u))(o.name).then(E=>{if(E)if(typeof E.version=="number"&&E.version!==o.version){if(o.migrate)return o.migrate(E.state,E.version);console.error("State loaded from storage couldn't be migrated since no migrate function was provided")}else return E.state}).then(E=>{var A;return b=o.merge(E,(A=n())!=null?A:x),r(b,!0),h()}).then(()=>{S==null||S(b,void 0),b=n(),s=!0,l.forEach(E=>E(b))}).catch(E=>{S==null||S(void 0,E)})};return i.persist={setOptions:T=>{o={...o,...T},T.storage&&(u=T.storage)},clearStorage:()=>{u==null||u.removeItem(o.name)},getOptions:()=>o,rehydrate:()=>C(),hasHydrated:()=>s,onHydrate:T=>(a.add(T),()=>{a.delete(T)}),onFinishHydration:T=>(l.add(T),()=>{l.delete(T)})},o.skipHydration||C(),b||x},OE=(e,t)=>"getStorage"in t||"serialize"in t||"deserialize"in t?kE(e,t):PE(e,t),oi=OE;var v6=class{constructor(){this.listeners=new Set,this.subscribe=this.subscribe.bind(this)}subscribe(e){return this.listeners.add(e),this.onSubscribe(),()=>{this.listeners.delete(e),this.onUnsubscribe()}}hasListeners(){return this.listeners.size>0}onSubscribe(){}onUnsubscribe(){}},a6=typeof window>"u"||"Deno"in window;function I0(){}function DE(e,t){return typeof e=="function"?e(t):e}function yr(e){return typeof e=="number"&&e>=0&&e!==1/0}function tf(e,t){return Math.max(e+(t||0)-Date.now(),0)}function Xs(e,t){const{type:r="all",exact:n,fetchStatus:i,predicate:o,queryKey:s,stale:a}=e;if(s){if(n){if(t.queryHash!==si(s,t.options))return!1}else if(!w8(t.queryKey,s))return!1}if(r!=="all"){const l=t.isActive();if(r==="active"&&!l||r==="inactive"&&l)return!1}return!(typeof a=="boolean"&&t.isStale()!==a||typeof i<"u"&&i!==t.state.fetchStatus||o&&!o(t))}function Zs(e,t){const{exact:r,status:n,predicate:i,mutationKey:o}=e;if(o){if(!t.options.mutationKey)return!1;if(r){if(x8(t.options.mutationKey)!==x8(o))return!1}else if(!w8(t.options.mutationKey,o))return!1}return!(n&&t.state.status!==n||i&&!i(t))}function si(e,t){return((t==null?void 0:t.queryKeyHashFn)||x8)(e)}function x8(e){return JSON.stringify(e,(t,r)=>vr(r)?Object.keys(r).sort().reduce((n,i)=>(n[i]=r[i],n),{}):r)}function w8(e,t){return e===t?!0:typeof e!=typeof t?!1:e&&t&&typeof e=="object"&&typeof t=="object"?!Object.keys(t).some(r=>!w8(e[r],t[r])):!1}function rf(e,t){if(e===t)return e;const r=ea(e)&&ea(t);if(r||vr(e)&&vr(t)){const n=r?e.length:Object.keys(e).length,i=r?t:Object.keys(t),o=i.length,s=r?[]:{};let a=0;for(let l=0;l<o;l++){const u=r?l:i[l];s[u]=rf(e[u],t[u]),s[u]===e[u]&&a++}return n===o&&a===n?e:s}return t}function f7(e,t){if(e&&!t||t&&!e)return!1;for(const r in e)if(e[r]!==t[r])return!1;return!0}function ea(e){return Array.isArray(e)&&e.length===Object.keys(e).length}function vr(e){if(!ta(e))return!1;const t=e.constructor;if(typeof t>"u")return!0;const r=t.prototype;return!(!ta(r)||!r.hasOwnProperty("isPrototypeOf"))}function ta(e){return Object.prototype.toString.call(e)==="[object Object]"}function nf(e){return new Promise(t=>{setTimeout(t,e)})}function ra(e){nf(0).then(e)}function gr(e,t,r){return typeof r.structuralSharing=="function"?r.structuralSharing(e,t):r.structuralSharing!==!1?rf(e,t):t}function UE(e,t,r=0){const n=[...e,t];return r&&n.length>r?n.slice(1):n}function NE(e,t,r=0){const n=[t,...e];return r&&n.length>r?n.slice(0,-1):n}var $5,G4,U1,da,$E=(da=class extends v6{constructor(){super();a2(this,$5,void 0);a2(this,G4,void 0);a2(this,U1,void 0);J(this,U1,t=>{if(!a6&&window.addEventListener){const r=()=>t();return window.addEventListener("visibilitychange",r,!1),()=>{window.removeEventListener("visibilitychange",r)}}})}onSubscribe(){I(this,G4)||this.setEventListener(I(this,U1))}onUnsubscribe(){var t;this.hasListeners()||((t=I(this,G4))==null||t.call(this),J(this,G4,void 0))}setEventListener(t){var r;J(this,U1,t),(r=I(this,G4))==null||r.call(this),J(this,G4,t(n=>{typeof n=="boolean"?this.setFocused(n):this.onFocus()}))}setFocused(t){I(this,$5)!==t&&(J(this,$5,t),this.onFocus())}onFocus(){this.listeners.forEach(t=>{t()})}isFocused(){var t;return typeof I(this,$5)=="boolean"?I(this,$5):((t=globalThis.document)==null?void 0:t.visibilityState)!=="hidden"}},$5=new WeakMap,G4=new WeakMap,U1=new WeakMap,da),d7=new $E,N1,Q4,$1,ha,LE=(ha=class extends v6{constructor(){super();a2(this,N1,!0);a2(this,Q4,void 0);a2(this,$1,void 0);J(this,$1,t=>{if(!a6&&window.addEventListener){const r=()=>t(!0),n=()=>t(!1);return window.addEventListener("online",r,!1),window.addEventListener("offline",n,!1),()=>{window.removeEventListener("online",r),window.removeEventListener("offline",n)}}})}onSubscribe(){I(this,Q4)||this.setEventListener(I(this,$1))}onUnsubscribe(){var t;this.hasListeners()||((t=I(this,Q4))==null||t.call(this),J(this,Q4,void 0))}setEventListener(t){var r;J(this,$1,t),(r=I(this,Q4))==null||r.call(this),J(this,Q4,t(this.setOnline.bind(this)))}setOnline(t){I(this,N1)!==t&&(J(this,N1,t),this.listeners.forEach(n=>{n(t)}))}isOnline(){return I(this,N1)}},N1=new WeakMap,Q4=new WeakMap,$1=new WeakMap,ha),h7=new LE;function ME(e){return Math.min(1e3*2**e,3e4)}function _e(e){return(e??"online")==="online"?h7.isOnline():!0}var of=class{constructor(e){this.revert=e==null?void 0:e.revert,this.silent=e==null?void 0:e.silent}};function dt(e){return e instanceof of}function sf(e){let t=!1,r=0,n=!1,i,o,s;const a=new Promise((k,S)=>{o=k,s=S}),l=k=>{var S;n||(b(new of(k)),(S=e.abort)==null||S.call(e))},u=()=>{t=!0},h=()=>{t=!1},y=()=>!d7.isFocused()||e.networkMode!=="always"&&!h7.isOnline(),x=k=>{var S;n||(n=!0,(S=e.onSuccess)==null||S.call(e,k),i==null||i(),o(k))},b=k=>{var S;n||(n=!0,(S=e.onError)==null||S.call(e,k),i==null||i(),s(k))},C=()=>new Promise(k=>{var S;i=E=>{const A=n||!y();return A&&k(E),A},(S=e.onPause)==null||S.call(e)}).then(()=>{var k;i=void 0,n||(k=e.onContinue)==null||k.call(e)}),T=()=>{if(n)return;let k;try{k=e.fn()}catch(S){k=Promise.reject(S)}Promise.resolve(k).then(x).catch(S=>{var W;if(n)return;const E=e.retry??(a6?0:3),A=e.retryDelay??ME,N=typeof A=="function"?A(r,S):A,H=E===!0||typeof E=="number"&&r<E||typeof E=="function"&&E(r,S);if(t||!H){b(S);return}r++,(W=e.onFail)==null||W.call(e,r,S),nf(N).then(()=>{if(y())return C()}).then(()=>{t?b(S):T()})})};return _e(e.networkMode)?T():C().then(T),{promise:a,cancel:l,continue:()=>(i==null?void 0:i())?a:Promise.resolve(),cancelRetry:u,continueRetry:h}}function zE(){let e=[],t=0,r=h=>{h()},n=h=>{h()};const i=h=>{let y;t++;try{y=h()}finally{t--,t||a()}return y},o=h=>{t?e.push(h):ra(()=>{r(h)})},s=h=>(...y)=>{o(()=>{h(...y)})},a=()=>{const h=e;e=[],h.length&&ra(()=>{n(()=>{h.forEach(y=>{r(y)})})})};return{batch:i,batchCalls:s,schedule:o,setNotifyFunction:h=>{r=h},setBatchNotifyFunction:h=>{n=h}}}var I3=zE(),L5,pa,af=(pa=class{constructor(){a2(this,L5,void 0)}destroy(){this.clearGcTimeout()}scheduleGc(){this.clearGcTimeout(),yr(this.gcTime)&&J(this,L5,setTimeout(()=>{this.optionalRemove()},this.gcTime))}updateGcTime(e){this.gcTime=Math.max(this.gcTime||0,e??(a6?1/0:5*60*1e3))}clearGcTimeout(){I(this,L5)&&(clearTimeout(I(this,L5)),J(this,L5,void 0))}},L5=new WeakMap,pa),L1,M1,C0,Y4,A0,P3,S8,M5,z1,U9,j0,m4,ya,jE=(ya=class extends af{constructor(t){super();a2(this,z1);a2(this,j0);a2(this,L1,void 0);a2(this,M1,void 0);a2(this,C0,void 0);a2(this,Y4,void 0);a2(this,A0,void 0);a2(this,P3,void 0);a2(this,S8,void 0);a2(this,M5,void 0);J(this,M5,!1),J(this,S8,t.defaultOptions),A2(this,z1,U9).call(this,t.options),J(this,P3,[]),J(this,C0,t.cache),this.queryKey=t.queryKey,this.queryHash=t.queryHash,J(this,L1,t.state||HE(this.options)),this.state=I(this,L1),this.scheduleGc()}get meta(){return this.options.meta}optionalRemove(){!I(this,P3).length&&this.state.fetchStatus==="idle"&&I(this,C0).remove(this)}setData(t,r){const n=gr(this.state.data,t,this.options);return A2(this,j0,m4).call(this,{data:n,type:"success",dataUpdatedAt:r==null?void 0:r.updatedAt,manual:r==null?void 0:r.manual}),n}setState(t,r){A2(this,j0,m4).call(this,{type:"setState",state:t,setStateOptions:r})}cancel(t){var n;const r=I(this,Y4);return(n=I(this,A0))==null||n.cancel(t),r?r.then(I0).catch(I0):Promise.resolve()}destroy(){super.destroy(),this.cancel({silent:!0})}reset(){this.destroy(),this.setState(I(this,L1))}isActive(){return I(this,P3).some(t=>t.options.enabled!==!1)}isDisabled(){return this.getObserversCount()>0&&!this.isActive()}isStale(){return this.state.isInvalidated||!this.state.dataUpdatedAt||I(this,P3).some(t=>t.getCurrentResult().isStale)}isStaleByTime(t=0){return this.state.isInvalidated||!this.state.dataUpdatedAt||!tf(this.state.dataUpdatedAt,t)}onFocus(){var r;const t=I(this,P3).find(n=>n.shouldFetchOnWindowFocus());t==null||t.refetch({cancelRefetch:!1}),(r=I(this,A0))==null||r.continue()}onOnline(){var r;const t=I(this,P3).find(n=>n.shouldFetchOnReconnect());t==null||t.refetch({cancelRefetch:!1}),(r=I(this,A0))==null||r.continue()}addObserver(t){I(this,P3).includes(t)||(I(this,P3).push(t),this.clearGcTimeout(),I(this,C0).notify({type:"observerAdded",query:this,observer:t}))}removeObserver(t){I(this,P3).includes(t)&&(J(this,P3,I(this,P3).filter(r=>r!==t)),I(this,P3).length||(I(this,A0)&&(I(this,M5)?I(this,A0).cancel({revert:!0}):I(this,A0).cancelRetry()),this.scheduleGc()),I(this,C0).notify({type:"observerRemoved",query:this,observer:t}))}getObserversCount(){return I(this,P3).length}invalidate(){this.state.isInvalidated||A2(this,j0,m4).call(this,{type:"invalidate"})}fetch(t,r){var u,h,y,x;if(this.state.fetchStatus!=="idle"){if(this.state.dataUpdatedAt&&(r!=null&&r.cancelRefetch))this.cancel({silent:!0});else if(I(this,Y4))return(u=I(this,A0))==null||u.continueRetry(),I(this,Y4)}if(t&&A2(this,z1,U9).call(this,t),!this.options.queryFn){const b=I(this,P3).find(C=>C.options.queryFn);b&&A2(this,z1,U9).call(this,b.options)}const n=new AbortController,i={queryKey:this.queryKey,meta:this.meta},o=b=>{Object.defineProperty(b,"signal",{enumerable:!0,get:()=>(J(this,M5,!0),n.signal)})};o(i);const s=()=>this.options.queryFn?(J(this,M5,!1),this.options.persister?this.options.persister(this.options.queryFn,i,this):this.options.queryFn(i)):Promise.reject(new Error(`Missing queryFn: '${this.options.queryHash}'`)),a={fetchOptions:r,options:this.options,queryKey:this.queryKey,state:this.state,fetchFn:s};o(a),(h=this.options.behavior)==null||h.onFetch(a,this),J(this,M1,this.state),(this.state.fetchStatus==="idle"||this.state.fetchMeta!==((y=a.fetchOptions)==null?void 0:y.meta))&&A2(this,j0,m4).call(this,{type:"fetch",meta:(x=a.fetchOptions)==null?void 0:x.meta});const l=b=>{var C,T,k,S;dt(b)&&b.silent||A2(this,j0,m4).call(this,{type:"error",error:b}),dt(b)||((T=(C=I(this,C0).config).onError)==null||T.call(C,b,this),(S=(k=I(this,C0).config).onSettled)==null||S.call(k,this.state.data,b,this)),this.isFetchingOptimistic||this.scheduleGc(),this.isFetchingOptimistic=!1};return J(this,A0,sf({fn:a.fetchFn,abort:n.abort.bind(n),onSuccess:b=>{var C,T,k,S;if(typeof b>"u"){l(new Error(`${this.queryHash} data is undefined`));return}this.setData(b),(T=(C=I(this,C0).config).onSuccess)==null||T.call(C,b,this),(S=(k=I(this,C0).config).onSettled)==null||S.call(k,b,this.state.error,this),this.isFetchingOptimistic||this.scheduleGc(),this.isFetchingOptimistic=!1},onError:l,onFail:(b,C)=>{A2(this,j0,m4).call(this,{type:"failed",failureCount:b,error:C})},onPause:()=>{A2(this,j0,m4).call(this,{type:"pause"})},onContinue:()=>{A2(this,j0,m4).call(this,{type:"continue"})},retry:a.options.retry,retryDelay:a.options.retryDelay,networkMode:a.options.networkMode})),J(this,Y4,I(this,A0).promise),I(this,Y4)}},L1=new WeakMap,M1=new WeakMap,C0=new WeakMap,Y4=new WeakMap,A0=new WeakMap,P3=new WeakMap,S8=new WeakMap,M5=new WeakMap,z1=new WeakSet,U9=function(t){this.options={...I(this,S8),...t},this.updateGcTime(this.options.gcTime)},j0=new WeakSet,m4=function(t){const r=n=>{switch(t.type){case"failed":return{...n,fetchFailureCount:t.failureCount,fetchFailureReason:t.error};case"pause":return{...n,fetchStatus:"paused"};case"continue":return{...n,fetchStatus:"fetching"};case"fetch":return{...n,fetchFailureCount:0,fetchFailureReason:null,fetchMeta:t.meta??null,fetchStatus:_e(this.options.networkMode)?"fetching":"paused",...!n.dataUpdatedAt&&{error:null,status:"pending"}};case"success":return{...n,data:t.data,dataUpdateCount:n.dataUpdateCount+1,dataUpdatedAt:t.dataUpdatedAt??Date.now(),error:null,isInvalidated:!1,status:"success",...!t.manual&&{fetchStatus:"idle",fetchFailureCount:0,fetchFailureReason:null}};case"error":const i=t.error;return dt(i)&&i.revert&&I(this,M1)?{...I(this,M1),fetchStatus:"idle"}:{...n,error:i,errorUpdateCount:n.errorUpdateCount+1,errorUpdatedAt:Date.now(),fetchFailureCount:n.fetchFailureCount+1,fetchFailureReason:i,fetchStatus:"idle",status:"error"};case"invalidate":return{...n,isInvalidated:!0};case"setState":return{...n,...t.state}}};this.state=r(this.state),I3.batch(()=>{I(this,P3).forEach(n=>{n.onQueryUpdate()}),I(this,C0).notify({query:this,type:"updated",action:t})})},ya);function HE(e){const t=typeof e.initialData=="function"?e.initialData():e.initialData,r=typeof t<"u",n=r?typeof e.initialDataUpdatedAt=="function"?e.initialDataUpdatedAt():e.initialDataUpdatedAt:0;return{data:t,dataUpdateCount:0,dataUpdatedAt:r?n??Date.now():0,error:null,errorUpdateCount:0,errorUpdatedAt:0,fetchFailureCount:0,fetchFailureReason:null,fetchMeta:null,isInvalidated:!1,status:r?"success":"pending",fetchStatus:"idle"}}var t4,va,qE=(va=class extends v6{constructor(t={}){super();a2(this,t4,void 0);this.config=t,J(this,t4,new Map)}build(t,r,n){const i=r.queryKey,o=r.queryHash??si(i,r);let s=this.get(o);return s||(s=new jE({cache:this,queryKey:i,queryHash:o,options:t.defaultQueryOptions(r),state:n,defaultOptions:t.getQueryDefaults(i)}),this.add(s)),s}add(t){I(this,t4).has(t.queryHash)||(I(this,t4).set(t.queryHash,t),this.notify({type:"added",query:t}))}remove(t){const r=I(this,t4).get(t.queryHash);r&&(t.destroy(),r===t&&I(this,t4).delete(t.queryHash),this.notify({type:"removed",query:t}))}clear(){I3.batch(()=>{this.getAll().forEach(t=>{this.remove(t)})})}get(t){return I(this,t4).get(t)}getAll(){return[...I(this,t4).values()]}find(t){const r={exact:!0,...t};return this.getAll().find(n=>Xs(r,n))}findAll(t={}){const r=this.getAll();return Object.keys(t).length>0?r.filter(n=>Xs(t,n)):r}notify(t){I3.batch(()=>{this.listeners.forEach(r=>{r(t)})})}onFocus(){I3.batch(()=>{this.getAll().forEach(t=>{t.onFocus()})})}onOnline(){I3.batch(()=>{this.getAll().forEach(t=>{t.onOnline()})})}},t4=new WeakMap,va),r4,b8,h0,j1,n4,j4,ga,WE=(ga=class extends af{constructor(t){super();a2(this,n4);a2(this,r4,void 0);a2(this,b8,void 0);a2(this,h0,void 0);a2(this,j1,void 0);this.mutationId=t.mutationId,J(this,b8,t.defaultOptions),J(this,h0,t.mutationCache),J(this,r4,[]),this.state=t.state||uf(),this.setOptions(t.options),this.scheduleGc()}setOptions(t){this.options={...I(this,b8),...t},this.updateGcTime(this.options.gcTime)}get meta(){return this.options.meta}addObserver(t){I(this,r4).includes(t)||(I(this,r4).push(t),this.clearGcTimeout(),I(this,h0).notify({type:"observerAdded",mutation:this,observer:t}))}removeObserver(t){J(this,r4,I(this,r4).filter(r=>r!==t)),this.scheduleGc(),I(this,h0).notify({type:"observerRemoved",mutation:this,observer:t})}optionalRemove(){I(this,r4).length||(this.state.status==="pending"?this.scheduleGc():I(this,h0).remove(this))}continue(){var t;return((t=I(this,j1))==null?void 0:t.continue())??this.execute(this.state.variables)}async execute(t){var i,o,s,a,l,u,h,y,x,b,C,T,k,S,E,A,N,H,W,Q;const r=()=>(J(this,j1,sf({fn:()=>this.options.mutationFn?this.options.mutationFn(t):Promise.reject(new Error("No mutationFn found")),onFail:(V,y2)=>{A2(this,n4,j4).call(this,{type:"failed",failureCount:V,error:y2})},onPause:()=>{A2(this,n4,j4).call(this,{type:"pause"})},onContinue:()=>{A2(this,n4,j4).call(this,{type:"continue"})},retry:this.options.retry??0,retryDelay:this.options.retryDelay,networkMode:this.options.networkMode})),I(this,j1).promise),n=this.state.status==="pending";try{if(!n){A2(this,n4,j4).call(this,{type:"pending",variables:t}),await((o=(i=I(this,h0).config).onMutate)==null?void 0:o.call(i,t,this));const y2=await((a=(s=this.options).onMutate)==null?void 0:a.call(s,t));y2!==this.state.context&&A2(this,n4,j4).call(this,{type:"pending",context:y2,variables:t})}const V=await r();return await((u=(l=I(this,h0).config).onSuccess)==null?void 0:u.call(l,V,t,this.state.context,this)),await((y=(h=this.options).onSuccess)==null?void 0:y.call(h,V,t,this.state.context)),await((b=(x=I(this,h0).config).onSettled)==null?void 0:b.call(x,V,null,this.state.variables,this.state.context,this)),await((T=(C=this.options).onSettled)==null?void 0:T.call(C,V,null,t,this.state.context)),A2(this,n4,j4).call(this,{type:"success",data:V}),V}catch(V){try{throw await((S=(k=I(this,h0).config).onError)==null?void 0:S.call(k,V,t,this.state.context,this)),await((A=(E=this.options).onError)==null?void 0:A.call(E,V,t,this.state.context)),await((H=(N=I(this,h0).config).onSettled)==null?void 0:H.call(N,void 0,V,this.state.variables,this.state.context,this)),await((Q=(W=this.options).onSettled)==null?void 0:Q.call(W,void 0,V,t,this.state.context)),V}finally{A2(this,n4,j4).call(this,{type:"error",error:V})}}}},r4=new WeakMap,b8=new WeakMap,h0=new WeakMap,j1=new WeakMap,n4=new WeakSet,j4=function(t){const r=n=>{switch(t.type){case"failed":return{...n,failureCount:t.failureCount,failureReason:t.error};case"pause":return{...n,isPaused:!0};case"continue":return{...n,isPaused:!1};case"pending":return{...n,context:t.context,data:void 0,failureCount:0,failureReason:null,error:null,isPaused:!_e(this.options.networkMode),status:"pending",variables:t.variables,submittedAt:Date.now()};case"success":return{...n,data:t.data,failureCount:0,failureReason:null,error:null,status:"success",isPaused:!1};case"error":return{...n,data:void 0,error:t.error,failureCount:n.failureCount+1,failureReason:t.error,isPaused:!1,status:"error"}}};this.state=r(this.state),I3.batch(()=>{I(this,r4).forEach(n=>{n.onMutationUpdate(t)}),I(this,h0).notify({mutation:this,type:"updated",action:t})})},ga);function uf(){return{context:void 0,data:void 0,error:null,failureCount:0,failureReason:null,isPaused:!1,status:"idle",variables:void 0,submittedAt:0}}var B0,C8,z5,ma,VE=(ma=class extends v6{constructor(t={}){super();a2(this,B0,void 0);a2(this,C8,void 0);a2(this,z5,void 0);this.config=t,J(this,B0,[]),J(this,C8,0)}build(t,r,n){const i=new WE({mutationCache:this,mutationId:++V8(this,C8)._,options:t.defaultMutationOptions(r),state:n});return this.add(i),i}add(t){I(this,B0).push(t),this.notify({type:"added",mutation:t})}remove(t){J(this,B0,I(this,B0).filter(r=>r!==t)),this.notify({type:"removed",mutation:t})}clear(){I3.batch(()=>{I(this,B0).forEach(t=>{this.remove(t)})})}getAll(){return I(this,B0)}find(t){const r={exact:!0,...t};return I(this,B0).find(n=>Zs(r,n))}findAll(t={}){return I(this,B0).filter(r=>Zs(t,r))}notify(t){I3.batch(()=>{this.listeners.forEach(r=>{r(t)})})}resumePausedMutations(){return J(this,z5,(I(this,z5)??Promise.resolve()).then(()=>{const t=I(this,B0).filter(r=>r.state.isPaused);return I3.batch(()=>t.reduce((r,n)=>r.then(()=>n.continue().catch(I0)),Promise.resolve()))}).then(()=>{J(this,z5,void 0)})),I(this,z5)}},B0=new WeakMap,C8=new WeakMap,z5=new WeakMap,ma);function KE(e){return{onFetch:(t,r)=>{const n=async()=>{var C,T,k,S,E;const i=t.options,o=(k=(T=(C=t.fetchOptions)==null?void 0:C.meta)==null?void 0:T.fetchMore)==null?void 0:k.direction,s=((S=t.state.data)==null?void 0:S.pages)||[],a=((E=t.state.data)==null?void 0:E.pageParams)||[],l={pages:[],pageParams:[]};let u=!1;const h=A=>{Object.defineProperty(A,"signal",{enumerable:!0,get:()=>(t.signal.aborted?u=!0:t.signal.addEventListener("abort",()=>{u=!0}),t.signal)})},y=t.options.queryFn||(()=>Promise.reject(new Error(`Missing queryFn: '${t.options.queryHash}'`))),x=async(A,N,H)=>{if(u)return Promise.reject();if(N==null&&A.pages.length)return Promise.resolve(A);const W={queryKey:t.queryKey,pageParam:N,direction:H?"backward":"forward",meta:t.options.meta};h(W);const Q=await y(W),{maxPages:V}=t.options,y2=H?NE:UE;return{pages:y2(A.pages,Q,V),pageParams:y2(A.pageParams,N,V)}};let b;if(o&&s.length){const A=o==="backward",N=A?GE:na,H={pages:s,pageParams:a},W=N(i,H);b=await x(H,W,A)}else{b=await x(l,a[0]??i.initialPageParam);const A=e??s.length;for(let N=1;N<A;N++){const H=na(i,b);b=await x(b,H)}}return b};t.options.persister?t.fetchFn=()=>{var i,o;return(o=(i=t.options).persister)==null?void 0:o.call(i,n,{queryKey:t.queryKey,meta:t.options.meta,signal:t.signal},r)}:t.fetchFn=n}}}function na(e,{pages:t,pageParams:r}){const n=t.length-1;return e.getNextPageParam(t[n],t,r[n],r)}function GE(e,{pages:t,pageParams:r}){var n;return(n=e.getPreviousPageParam)==null?void 0:n.call(e,t[0],t,r[0],r)}var B3,J4,X4,H1,q1,Z4,W1,V1,xa,QE=(xa=class{constructor(e={}){a2(this,B3,void 0);a2(this,J4,void 0);a2(this,X4,void 0);a2(this,H1,void 0);a2(this,q1,void 0);a2(this,Z4,void 0);a2(this,W1,void 0);a2(this,V1,void 0);J(this,B3,e.queryCache||new qE),J(this,J4,e.mutationCache||new VE),J(this,X4,e.defaultOptions||{}),J(this,H1,new Map),J(this,q1,new Map),J(this,Z4,0)}mount(){V8(this,Z4)._++,I(this,Z4)===1&&(J(this,W1,d7.subscribe(()=>{d7.isFocused()&&(this.resumePausedMutations(),I(this,B3).onFocus())})),J(this,V1,h7.subscribe(()=>{h7.isOnline()&&(this.resumePausedMutations(),I(this,B3).onOnline())})))}unmount(){var e,t;V8(this,Z4)._--,I(this,Z4)===0&&((e=I(this,W1))==null||e.call(this),J(this,W1,void 0),(t=I(this,V1))==null||t.call(this),J(this,V1,void 0))}isFetching(e){return I(this,B3).findAll({...e,fetchStatus:"fetching"}).length}isMutating(e){return I(this,J4).findAll({...e,status:"pending"}).length}getQueryData(e){var t;return(t=I(this,B3).find({queryKey:e}))==null?void 0:t.state.data}ensureQueryData(e){const t=this.getQueryData(e.queryKey);return t!==void 0?Promise.resolve(t):this.fetchQuery(e)}getQueriesData(e){return this.getQueryCache().findAll(e).map(({queryKey:t,state:r})=>{const n=r.data;return[t,n]})}setQueryData(e,t,r){const n=I(this,B3).find({queryKey:e}),i=n==null?void 0:n.state.data,o=DE(t,i);if(typeof o>"u")return;const s=this.defaultQueryOptions({queryKey:e});return I(this,B3).build(this,s).setData(o,{...r,manual:!0})}setQueriesData(e,t,r){return I3.batch(()=>this.getQueryCache().findAll(e).map(({queryKey:n})=>[n,this.setQueryData(n,t,r)]))}getQueryState(e){var t;return(t=I(this,B3).find({queryKey:e}))==null?void 0:t.state}removeQueries(e){const t=I(this,B3);I3.batch(()=>{t.findAll(e).forEach(r=>{t.remove(r)})})}resetQueries(e,t){const r=I(this,B3),n={type:"active",...e};return I3.batch(()=>(r.findAll(e).forEach(i=>{i.reset()}),this.refetchQueries(n,t)))}cancelQueries(e={},t={}){const r={revert:!0,...t},n=I3.batch(()=>I(this,B3).findAll(e).map(i=>i.cancel(r)));return Promise.all(n).then(I0).catch(I0)}invalidateQueries(e={},t={}){return I3.batch(()=>{if(I(this,B3).findAll(e).forEach(n=>{n.invalidate()}),e.refetchType==="none")return Promise.resolve();const r={...e,type:e.refetchType??e.type??"active"};return this.refetchQueries(r,t)})}refetchQueries(e={},t){const r={...t,cancelRefetch:(t==null?void 0:t.cancelRefetch)??!0},n=I3.batch(()=>I(this,B3).findAll(e).filter(i=>!i.isDisabled()).map(i=>{let o=i.fetch(void 0,r);return r.throwOnError||(o=o.catch(I0)),i.state.fetchStatus==="paused"?Promise.resolve():o}));return Promise.all(n).then(I0)}fetchQuery(e){const t=this.defaultQueryOptions(e);typeof t.retry>"u"&&(t.retry=!1);const r=I(this,B3).build(this,t);return r.isStaleByTime(t.staleTime)?r.fetch(t):Promise.resolve(r.state.data)}prefetchQuery(e){return this.fetchQuery(e).then(I0).catch(I0)}fetchInfiniteQuery(e){return e.behavior=KE(e.pages),this.fetchQuery(e)}prefetchInfiniteQuery(e){return this.fetchInfiniteQuery(e).then(I0).catch(I0)}resumePausedMutations(){return I(this,J4).resumePausedMutations()}getQueryCache(){return I(this,B3)}getMutationCache(){return I(this,J4)}getDefaultOptions(){return I(this,X4)}setDefaultOptions(e){J(this,X4,e)}setQueryDefaults(e,t){I(this,H1).set(x8(e),{queryKey:e,defaultOptions:t})}getQueryDefaults(e){const t=[...I(this,H1).values()];let r={};return t.forEach(n=>{w8(e,n.queryKey)&&(r={...r,...n.defaultOptions})}),r}setMutationDefaults(e,t){I(this,q1).set(x8(e),{mutationKey:e,defaultOptions:t})}getMutationDefaults(e){const t=[...I(this,q1).values()];let r={};return t.forEach(n=>{w8(e,n.mutationKey)&&(r={...r,...n.defaultOptions})}),r}defaultQueryOptions(e){if(e!=null&&e._defaulted)return e;const t={...I(this,X4).queries,...(e==null?void 0:e.queryKey)&&this.getQueryDefaults(e.queryKey),...e,_defaulted:!0};return t.queryHash||(t.queryHash=si(t.queryKey,t)),typeof t.refetchOnReconnect>"u"&&(t.refetchOnReconnect=t.networkMode!=="always"),typeof t.throwOnError>"u"&&(t.throwOnError=!!t.suspense),typeof t.networkMode>"u"&&t.persister&&(t.networkMode="offlineFirst"),t}defaultMutationOptions(e){return e!=null&&e._defaulted?e:{...I(this,X4).mutations,...(e==null?void 0:e.mutationKey)&&this.getMutationDefaults(e.mutationKey),...e,_defaulted:!0}}clear(){I(this,B3).clear(),I(this,J4).clear()}},B3=new WeakMap,J4=new WeakMap,X4=new WeakMap,H1=new WeakMap,q1=new WeakMap,Z4=new WeakMap,W1=new WeakMap,V1=new WeakMap,xa),s0,r3,K1,G3,j5,G1,i4,A8,Q1,Y1,H5,q5,e5,W5,V5,z6,B8,mr,T8,xr,I8,wr,F8,_r,R8,Er,k8,Sr,P8,br,g7,lf,wa,YE=(wa=class extends v6{constructor(t,r){super();a2(this,V5);a2(this,B8);a2(this,T8);a2(this,I8);a2(this,F8);a2(this,R8);a2(this,k8);a2(this,P8);a2(this,g7);a2(this,s0,void 0);a2(this,r3,void 0);a2(this,K1,void 0);a2(this,G3,void 0);a2(this,j5,void 0);a2(this,G1,void 0);a2(this,i4,void 0);a2(this,A8,void 0);a2(this,Q1,void 0);a2(this,Y1,void 0);a2(this,H5,void 0);a2(this,q5,void 0);a2(this,e5,void 0);a2(this,W5,void 0);J(this,r3,void 0),J(this,K1,void 0),J(this,G3,void 0),J(this,W5,new Set),J(this,s0,t),this.options=r,J(this,i4,null),this.bindMethods(),this.setOptions(r)}bindMethods(){this.refetch=this.refetch.bind(this)}onSubscribe(){this.listeners.size===1&&(I(this,r3).addObserver(this),ia(I(this,r3),this.options)?A2(this,V5,z6).call(this):this.updateResult(),A2(this,F8,_r).call(this))}onUnsubscribe(){this.hasListeners()||this.destroy()}shouldFetchOnReconnect(){return Cr(I(this,r3),this.options,this.options.refetchOnReconnect)}shouldFetchOnWindowFocus(){return Cr(I(this,r3),this.options,this.options.refetchOnWindowFocus)}destroy(){this.listeners=new Set,A2(this,R8,Er).call(this),A2(this,k8,Sr).call(this),I(this,r3).removeObserver(this)}setOptions(t,r){const n=this.options,i=I(this,r3);if(this.options=I(this,s0).defaultQueryOptions(t),f7(n,this.options)||I(this,s0).getQueryCache().notify({type:"observerOptionsUpdated",query:I(this,r3),observer:this}),typeof this.options.enabled<"u"&&typeof this.options.enabled!="boolean")throw new Error("Expected enabled to be a boolean");this.options.queryKey||(this.options.queryKey=n.queryKey),A2(this,P8,br).call(this);const o=this.hasListeners();o&&oa(I(this,r3),i,this.options,n)&&A2(this,V5,z6).call(this),this.updateResult(r),o&&(I(this,r3)!==i||this.options.enabled!==n.enabled||this.options.staleTime!==n.staleTime)&&A2(this,B8,mr).call(this);const s=A2(this,T8,xr).call(this);o&&(I(this,r3)!==i||this.options.enabled!==n.enabled||s!==I(this,e5))&&A2(this,I8,wr).call(this,s)}getOptimisticResult(t){const r=I(this,s0).getQueryCache().build(I(this,s0),t),n=this.createResult(r,t);return XE(this,n)&&(J(this,G3,n),J(this,G1,this.options),J(this,j5,I(this,r3).state)),n}getCurrentResult(){return I(this,G3)}trackResult(t){const r={};return Object.keys(t).forEach(n=>{Object.defineProperty(r,n,{configurable:!1,enumerable:!0,get:()=>(I(this,W5).add(n),t[n])})}),r}getCurrentQuery(){return I(this,r3)}refetch({...t}={}){return this.fetch({...t})}fetchOptimistic(t){const r=I(this,s0).defaultQueryOptions(t),n=I(this,s0).getQueryCache().build(I(this,s0),r);return n.isFetchingOptimistic=!0,n.fetch().then(()=>this.createResult(n,r))}fetch(t){return A2(this,V5,z6).call(this,{...t,cancelRefetch:t.cancelRefetch??!0}).then(()=>(this.updateResult(),I(this,G3)))}createResult(t,r){var W;const n=I(this,r3),i=this.options,o=I(this,G3),s=I(this,j5),a=I(this,G1),u=t!==n?t.state:I(this,K1),{state:h}=t;let{error:y,errorUpdatedAt:x,fetchStatus:b,status:C}=h,T=!1,k;if(r._optimisticResults){const Q=this.hasListeners(),V=!Q&&ia(t,r),y2=Q&&oa(t,n,r,i);(V||y2)&&(b=_e(t.options.networkMode)?"fetching":"paused",h.dataUpdatedAt||(C="pending")),r._optimisticResults==="isRestoring"&&(b="idle")}if(r.select&&typeof h.data<"u")if(o&&h.data===(s==null?void 0:s.data)&&r.select===I(this,A8))k=I(this,Q1);else try{J(this,A8,r.select),k=r.select(h.data),k=gr(o==null?void 0:o.data,k,r),J(this,Q1,k),J(this,i4,null)}catch(Q){J(this,i4,Q)}else k=h.data;if(typeof r.placeholderData<"u"&&typeof k>"u"&&C==="pending"){let Q;if(o!=null&&o.isPlaceholderData&&r.placeholderData===(a==null?void 0:a.placeholderData))Q=o.data;else if(Q=typeof r.placeholderData=="function"?r.placeholderData((W=I(this,Y1))==null?void 0:W.state.data,I(this,Y1)):r.placeholderData,r.select&&typeof Q<"u")try{Q=r.select(Q),J(this,i4,null)}catch(V){J(this,i4,V)}typeof Q<"u"&&(C="success",k=gr(o==null?void 0:o.data,Q,r),T=!0)}I(this,i4)&&(y=I(this,i4),k=I(this,Q1),x=Date.now(),C="error");const S=b==="fetching",E=C==="pending",A=C==="error",N=E&&S;return{status:C,fetchStatus:b,isPending:E,isSuccess:C==="success",isError:A,isInitialLoading:N,isLoading:N,data:k,dataUpdatedAt:h.dataUpdatedAt,error:y,errorUpdatedAt:x,failureCount:h.fetchFailureCount,failureReason:h.fetchFailureReason,errorUpdateCount:h.errorUpdateCount,isFetched:h.dataUpdateCount>0||h.errorUpdateCount>0,isFetchedAfterMount:h.dataUpdateCount>u.dataUpdateCount||h.errorUpdateCount>u.errorUpdateCount,isFetching:S,isRefetching:S&&!E,isLoadingError:A&&h.dataUpdatedAt===0,isPaused:b==="paused",isPlaceholderData:T,isRefetchError:A&&h.dataUpdatedAt!==0,isStale:ai(t,r),refetch:this.refetch}}updateResult(t){const r=I(this,G3),n=this.createResult(I(this,r3),this.options);if(J(this,j5,I(this,r3).state),J(this,G1,this.options),I(this,j5).data!==void 0&&J(this,Y1,I(this,r3)),f7(n,r))return;J(this,G3,n);const i={},o=()=>{if(!r)return!0;const{notifyOnChangeProps:s}=this.options,a=typeof s=="function"?s():s;if(a==="all"||!a&&!I(this,W5).size)return!0;const l=new Set(a??I(this,W5));return this.options.throwOnError&&l.add("error"),Object.keys(I(this,G3)).some(u=>{const h=u;return I(this,G3)[h]!==r[h]&&l.has(h)})};(t==null?void 0:t.listeners)!==!1&&o()&&(i.listeners=!0),A2(this,g7,lf).call(this,{...i,...t})}onQueryUpdate(){this.updateResult(),this.hasListeners()&&A2(this,F8,_r).call(this)}},s0=new WeakMap,r3=new WeakMap,K1=new WeakMap,G3=new WeakMap,j5=new WeakMap,G1=new WeakMap,i4=new WeakMap,A8=new WeakMap,Q1=new WeakMap,Y1=new WeakMap,H5=new WeakMap,q5=new WeakMap,e5=new WeakMap,W5=new WeakMap,V5=new WeakSet,z6=function(t){A2(this,P8,br).call(this);let r=I(this,r3).fetch(this.options,t);return t!=null&&t.throwOnError||(r=r.catch(I0)),r},B8=new WeakSet,mr=function(){if(A2(this,R8,Er).call(this),a6||I(this,G3).isStale||!yr(this.options.staleTime))return;const r=tf(I(this,G3).dataUpdatedAt,this.options.staleTime)+1;J(this,H5,setTimeout(()=>{I(this,G3).isStale||this.updateResult()},r))},T8=new WeakSet,xr=function(){return(typeof this.options.refetchInterval=="function"?this.options.refetchInterval(I(this,r3)):this.options.refetchInterval)??!1},I8=new WeakSet,wr=function(t){A2(this,k8,Sr).call(this),J(this,e5,t),!(a6||this.options.enabled===!1||!yr(I(this,e5))||I(this,e5)===0)&&J(this,q5,setInterval(()=>{(this.options.refetchIntervalInBackground||d7.isFocused())&&A2(this,V5,z6).call(this)},I(this,e5)))},F8=new WeakSet,_r=function(){A2(this,B8,mr).call(this),A2(this,I8,wr).call(this,A2(this,T8,xr).call(this))},R8=new WeakSet,Er=function(){I(this,H5)&&(clearTimeout(I(this,H5)),J(this,H5,void 0))},k8=new WeakSet,Sr=function(){I(this,q5)&&(clearInterval(I(this,q5)),J(this,q5,void 0))},P8=new WeakSet,br=function(){const t=I(this,s0).getQueryCache().build(I(this,s0),this.options);if(t===I(this,r3))return;const r=I(this,r3);J(this,r3,t),J(this,K1,t.state),this.hasListeners()&&(r==null||r.removeObserver(this),t.addObserver(this))},g7=new WeakSet,lf=function(t){I3.batch(()=>{t.listeners&&this.listeners.forEach(r=>{r(I(this,G3))}),I(this,s0).getQueryCache().notify({query:I(this,r3),type:"observerResultsUpdated"})})},wa);function JE(e,t){return t.enabled!==!1&&!e.state.dataUpdatedAt&&!(e.state.status==="error"&&t.retryOnMount===!1)}function ia(e,t){return JE(e,t)||e.state.dataUpdatedAt>0&&Cr(e,t,t.refetchOnMount)}function Cr(e,t,r){if(t.enabled!==!1){const n=typeof r=="function"?r(e):r;return n==="always"||n!==!1&&ai(e,t)}return!1}function oa(e,t,r,n){return r.enabled!==!1&&(e!==t||n.enabled===!1)&&(!r.suspense||e.state.status!=="error")&&ai(e,r)}function ai(e,t){return e.isStaleByTime(t.staleTime)}function XE(e,t){return!f7(e.getCurrentResult(),t)}var t5,X3,T0,_4,J1,N9,O8,Ar,_a,ZE=(_a=class extends v6{constructor(r,n){super();a2(this,J1);a2(this,O8);a2(this,t5,void 0);a2(this,X3,void 0);a2(this,T0,void 0);a2(this,_4,void 0);J(this,X3,void 0),J(this,t5,r),this.setOptions(n),this.bindMethods(),A2(this,J1,N9).call(this)}bindMethods(){this.mutate=this.mutate.bind(this),this.reset=this.reset.bind(this)}setOptions(r){var i;const n=this.options;this.options=I(this,t5).defaultMutationOptions(r),f7(n,this.options)||I(this,t5).getMutationCache().notify({type:"observerOptionsUpdated",mutation:I(this,T0),observer:this}),(i=I(this,T0))==null||i.setOptions(this.options)}onUnsubscribe(){var r;this.hasListeners()||(r=I(this,T0))==null||r.removeObserver(this)}onMutationUpdate(r){A2(this,J1,N9).call(this),A2(this,O8,Ar).call(this,r)}getCurrentResult(){return I(this,X3)}reset(){J(this,T0,void 0),A2(this,J1,N9).call(this),A2(this,O8,Ar).call(this)}mutate(r,n){var i;return J(this,_4,n),(i=I(this,T0))==null||i.removeObserver(this),J(this,T0,I(this,t5).getMutationCache().build(I(this,t5),this.options)),I(this,T0).addObserver(this),I(this,T0).execute(r)}},t5=new WeakMap,X3=new WeakMap,T0=new WeakMap,_4=new WeakMap,J1=new WeakSet,N9=function(){var n;const r=((n=I(this,T0))==null?void 0:n.state)??uf();J(this,X3,{...r,isPending:r.status==="pending",isSuccess:r.status==="success",isError:r.status==="error",isIdle:r.status==="idle",mutate:this.mutate,reset:this.reset})},O8=new WeakSet,Ar=function(r){I3.batch(()=>{var n,i,o,s,a,l,u,h;I(this,_4)&&this.hasListeners()&&((r==null?void 0:r.type)==="success"?((i=(n=I(this,_4)).onSuccess)==null||i.call(n,r.data,I(this,X3).variables,I(this,X3).context),(s=(o=I(this,_4)).onSettled)==null||s.call(o,r.data,null,I(this,X3).variables,I(this,X3).context)):(r==null?void 0:r.type)==="error"&&((l=(a=I(this,_4)).onError)==null||l.call(a,r.error,I(this,X3).variables,I(this,X3).context),(h=(u=I(this,_4)).onSettled)==null||h.call(u,void 0,r.error,I(this,X3).variables,I(this,X3).context))),this.listeners.forEach(y=>{y(I(this,X3))})})},_a),cf=L.createContext(void 0),ff=e=>{const t=L.useContext(cf);if(e)return e;if(!t)throw new Error("No QueryClient set, use QueryClientProvider to set one");return t},eS=({client:e,children:t})=>(L.useEffect(()=>(e.mount(),()=>{e.unmount()}),[e]),L.createElement(cf.Provider,{value:e},t)),df=L.createContext(!1),tS=()=>L.useContext(df);df.Provider;function rS(){let e=!1;return{clearReset:()=>{e=!1},reset:()=>{e=!0},isReset:()=>e}}var nS=L.createContext(rS()),iS=()=>L.useContext(nS);function hf(e,t){return typeof e=="function"?e(...t):!!e}var oS=(e,t)=>{(e.suspense||e.throwOnError)&&(t.isReset()||(e.retryOnMount=!1))},sS=e=>{L.useEffect(()=>{e.clearReset()},[e])},aS=({result:e,errorResetBoundary:t,throwOnError:r,query:n})=>e.isError&&!t.isReset()&&!e.isFetching&&hf(r,[e.error,n]),uS=e=>{e.suspense&&typeof e.staleTime!="number"&&(e.staleTime=1e3)},lS=(e,t)=>(e==null?void 0:e.suspense)&&t.isPending,cS=(e,t,r)=>t.fetchOptimistic(e).catch(()=>{r.clearReset()});function fS(e,t,r){const n=ff(r),i=tS(),o=iS(),s=n.defaultQueryOptions(e);s._optimisticResults=i?"isRestoring":"optimistic",uS(s),oS(s,o),sS(o);const[a]=L.useState(()=>new t(n,s)),l=a.getOptimisticResult(s);if(L.useSyncExternalStore(L.useCallback(u=>{const h=i?()=>{}:a.subscribe(I3.batchCalls(u));return a.updateResult(),h},[a,i]),()=>a.getCurrentResult(),()=>a.getCurrentResult()),L.useEffect(()=>{a.setOptions(s,{listeners:!1})},[s,a]),lS(s,l))throw a.setOptions(s,{listeners:!1}),cS(s,a,o);if(aS({result:l,errorResetBoundary:o,throwOnError:s.throwOnError,query:a.getCurrentQuery()}))throw l.error;return s.notifyOnChangeProps?l:a.trackResult(l)}function dS(e,t){return fS(e,YE,t)}function pf(e,t){const r=ff(t),[n]=L.useState(()=>new ZE(r,e));L.useEffect(()=>{n.setOptions(e)},[n,e]);const i=L.useSyncExternalStore(L.useCallback(s=>n.subscribe(I3.batchCalls(s)),[n]),()=>n.getCurrentResult(),()=>n.getCurrentResult()),o=L.useCallback((s,a)=>{n.mutate(s,a).catch(hS)},[n]);if(i.error&&hf(n.options.throwOnError,[i.error]))throw i.error;return{...i,mutate:o,mutateAsync:i.mutate}}function hS(){}const pS="123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz";var yf=pS;const yS=yf,vS=e=>{if(!e||typeof e!="string")throw new Error(`Expected base58 string but got “${e}”`);if(e.match(/[IOl0]/gmu))throw new Error(`Invalid base58 character “${e.match(/[IOl0]/gmu)}”`);const t=e.match(/^1+/gmu),r=t?t[0].length:0,n=(e.length-r)*(Math.log(58)/Math.log(256))+1>>>0;return new Uint8Array([...new Uint8Array(r),...e.match(/.{1}/gmu).map(i=>yS.indexOf(i)).reduce((i,o)=>(i=i.map(s=>{const a=s*58+o;return o=a>>8,a}),i),new Uint8Array(n)).reverse().filter((i=>o=>i=i||o)(!1))])};var gS=vS;const sa=yf,mS=()=>{const e=Array(256).fill(-1);for(let t=0;t<sa.length;++t)e[sa.charCodeAt(t)]=t;return e};var xS=mS;const wS=xS;wS();var _S=gS,_8={};Object.defineProperty(_8,"__esModule",{value:!0});var vf=_8.bech32m=E8=_8.bech32=void 0;const p7="qpzry9x8gf2tvdw0s3jn54khce6mua7l",gf={};for(let e=0;e<p7.length;e++){const t=p7.charAt(e);gf[t]=e}function D1(e){const t=e>>25;return(e&33554431)<<5^-(t>>0&1)&996825010^-(t>>1&1)&642813549^-(t>>2&1)&513874426^-(t>>3&1)&1027748829^-(t>>4&1)&705979059}function aa(e){let t=1;for(let r=0;r<e.length;++r){const n=e.charCodeAt(r);if(n<33||n>126)return"Invalid prefix ("+e+")";t=D1(t)^n>>5}t=D1(t);for(let r=0;r<e.length;++r){const n=e.charCodeAt(r);t=D1(t)^n&31}return t}function ui(e,t,r,n){let i=0,o=0;const s=(1<<r)-1,a=[];for(let l=0;l<e.length;++l)for(i=i<<t|e[l],o+=t;o>=r;)o-=r,a.push(i>>o&s);if(n)o>0&&a.push(i<<r-o&s);else{if(o>=t)return"Excess padding";if(i<<r-o&s)return"Non-zero padding"}return a}function ES(e){return ui(e,8,5,!0)}function SS(e){const t=ui(e,5,8,!1);if(Array.isArray(t))return t}function bS(e){const t=ui(e,5,8,!1);if(Array.isArray(t))return t;throw new Error(t)}function mf(e){let t;e==="bech32"?t=1:t=734539939;function r(s,a,l){if(l=l||90,s.length+7+a.length>l)throw new TypeError("Exceeds length limit");s=s.toLowerCase();let u=aa(s);if(typeof u=="string")throw new Error(u);let h=s+"1";for(let y=0;y<a.length;++y){const x=a[y];if(x>>5)throw new Error("Non 5-bit word");u=D1(u)^x,h+=p7.charAt(x)}for(let y=0;y<6;++y)u=D1(u);u^=t;for(let y=0;y<6;++y){const x=u>>(5-y)*5&31;h+=p7.charAt(x)}return h}function n(s,a){if(a=a||90,s.length<8)return s+" too short";if(s.length>a)return"Exceeds length limit";const l=s.toLowerCase(),u=s.toUpperCase();if(s!==l&&s!==u)return"Mixed-case string "+s;s=l;const h=s.lastIndexOf("1");if(h===-1)return"No separator character for "+s;if(h===0)return"Missing prefix for "+s;const y=s.slice(0,h),x=s.slice(h+1);if(x.length<6)return"Data too short";let b=aa(y);if(typeof b=="string")return b;const C=[];for(let T=0;T<x.length;++T){const k=x.charAt(T),S=gf[k];if(S===void 0)return"Unknown character "+k;b=D1(b)^S,!(T+6>=x.length)&&C.push(S)}return b!==t?"Invalid checksum for "+s:{prefix:y,words:C}}function i(s,a){const l=n(s,a);if(typeof l=="object")return l}function o(s,a){const l=n(s,a);if(typeof l=="object")return l;throw new Error(l)}return{decodeUnsafe:i,decode:o,encode:r,toWords:ES,fromWordsUnsafe:SS,fromWords:bS}}var E8=_8.bech32=mf("bech32");vf=_8.bech32m=mf("bech32m");const CS=[1116352408,1899447441,-1245643825,-373957723,961987163,1508970993,-1841331548,-1424204075,-670586216,310598401,607225278,1426881987,1925078388,-2132889090,-1680079193,-1046744716,-459576895,-272742522,264347078,604807628,770255983,1249150122,1555081692,1996064986,-1740746414,-1473132947,-1341970488,-1084653625,-958395405,-710438585,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,-2117940946,-1838011259,-1564481375,-1474664885,-1035236496,-949202525,-778901479,-694614492,-200395387,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,-2067236844,-1933114872,-1866530822,-1538233109,-1090935817,-965641998],ua={sha256:1};function AS(e){if(e&&!ua[e]&&!ua[e.toLowerCase()])throw new Error("Digest method not supported");return new BS}class BS{constructor(){this.A=1779033703,this.B=-1150833019,this.C=1013904242,this.D=-1521486534,this.E=1359893119,this.F=-1694144372,this.G=528734635,this.H=1541459225,this._size=0,this._sp=0,(!g9||D6>=8e3)&&(g9=new ArrayBuffer(8e3),D6=0),this._byte=new Uint8Array(g9,D6,80),this._word=new Int32Array(g9,D6,20),D6+=80}update(t){if(typeof t=="string")return this._utf8(t);if(t==null)throw new TypeError("Invalid type: "+typeof t);const r=t.byteOffset,n=t.byteLength;let i=n/64|0,o=0;if(i&&!(r&3)&&!(this._size%64)){const a=new Int32Array(t.buffer,r,i*16);for(;i--;)this._int32(a,o>>2),o+=64;this._size+=o}if(t.BYTES_PER_ELEMENT!==1&&t.buffer){const a=new Uint8Array(t.buffer,r+o,n-o);return this._uint8(a)}return o===n?this:this._uint8(t,o)}_uint8(t,r){const{_byte:n,_word:i}=this,o=t.length;for(r=r|0;r<o;){const s=this._size%64;let a=s;for(;r<o&&a<64;)n[a++]=t[r++];a>=64&&this._int32(i),this._size+=a-s}return this}_utf8(t){const{_byte:r,_word:n}=this,i=t.length;let o=this._sp;for(let s=0;s<i;){const a=this._size%64;let l=a;for(;s<i&&l<64;){let u=t.charCodeAt(s++)|0;u<128?r[l++]=u:u<2048?(r[l++]=192|u>>>6,r[l++]=128|u&63):u<55296||u>57343?(r[l++]=224|u>>>12,r[l++]=128|u>>>6&63,r[l++]=128|u&63):o?(u=((o&1023)<<10)+(u&1023)+65536,r[l++]=240|u>>>18,r[l++]=128|u>>>12&63,r[l++]=128|u>>>6&63,r[l++]=128|u&63,o=0):o=u}l>=64&&(this._int32(n),n[0]=n[16]),this._size+=l-a}return this._sp=o,this}_int32(t,r){let{A:n,B:i,C:o,D:s,E:a,F:l,G:u,H:h}=this,y=0;for(r=r|0;y<16;)I5[y++]=L0(t[r++]);for(y=16;y<64;y++)I5[y]=DS(I5[y-2])+I5[y-7]+OS(I5[y-15])+I5[y-16]|0;for(y=0;y<64;y++){const x=h+PS(a)+FS(a,l,u)+CS[y]+I5[y]|0,b=kS(n)+RS(n,i,o)|0;h=u,u=l,l=a,a=s+x|0,s=o,o=i,i=n,n=x+b|0}this.A=n+this.A|0,this.B=i+this.B|0,this.C=o+this.C|0,this.D=s+this.D|0,this.E=a+this.E|0,this.F=l+this.F|0,this.G=u+this.G|0,this.H=h+this.H|0}digest(t){const{_byte:r,_word:n}=this;let i=this._size%64|0;for(r[i++]=128;i&3;)r[i++]=0;if(i>>=2,i>14){for(;i<16;)n[i++]=0;i=0,this._int32(n)}for(;i<16;)n[i++]=0;const o=this._size*8,s=(o&4294967295)>>>0,a=(o-s)/4294967296;return a&&(n[14]=L0(a)),s&&(n[15]=L0(s)),this._int32(n),t==="hex"?this._hex():this._bin()}_hex(){const{A:t,B:r,C:n,D:i,E:o,F:s,G:a,H:l}=this;return z4(t)+z4(r)+z4(n)+z4(i)+z4(o)+z4(s)+z4(a)+z4(l)}_bin(){const{A:t,B:r,C:n,D:i,E:o,F:s,G:a,H:l,_byte:u,_word:h}=this;return h[0]=L0(t),h[1]=L0(r),h[2]=L0(n),h[3]=L0(i),h[4]=L0(o),h[5]=L0(s),h[6]=L0(a),h[7]=L0(l),u.slice(0,32)}}const I5=new Int32Array(64);let g9,D6=0;const z4=e=>(e+4294967296).toString(16).substr(-8),TS=e=>e<<24&4278190080|e<<8&16711680|e>>8&65280|e>>24&255,IS=e=>e,L0=US()?IS:TS,FS=(e,t,r)=>r^e&(t^r),RS=(e,t,r)=>e&t|r&(e|t),kS=e=>(e>>>2|e<<30)^(e>>>13|e<<19)^(e>>>22|e<<10),PS=e=>(e>>>6|e<<26)^(e>>>11|e<<21)^(e>>>25|e<<7),OS=e=>(e>>>7|e<<25)^(e>>>18|e<<14)^e>>>3,DS=e=>(e>>>17|e<<15)^(e>>>19|e<<13)^e>>>10;function US(){return new Uint8Array(new Uint16Array([65279]).buffer)[0]===254}var o4={},Ee={};Ee.byteLength=LS;Ee.toByteArray=zS;Ee.fromByteArray=qS;var a4=[],b0=[],NS=typeof Uint8Array<"u"?Uint8Array:Array,ht="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";for(var c1=0,$S=ht.length;c1<$S;++c1)a4[c1]=ht[c1],b0[ht.charCodeAt(c1)]=c1;b0["-".charCodeAt(0)]=62;b0["_".charCodeAt(0)]=63;function xf(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var r=e.indexOf("=");r===-1&&(r=t);var n=r===t?0:4-r%4;return[r,n]}function LS(e){var t=xf(e),r=t[0],n=t[1];return(r+n)*3/4-n}function MS(e,t,r){return(t+r)*3/4-r}function zS(e){var t,r=xf(e),n=r[0],i=r[1],o=new NS(MS(e,n,i)),s=0,a=i>0?n-4:n,l;for(l=0;l<a;l+=4)t=b0[e.charCodeAt(l)]<<18|b0[e.charCodeAt(l+1)]<<12|b0[e.charCodeAt(l+2)]<<6|b0[e.charCodeAt(l+3)],o[s++]=t>>16&255,o[s++]=t>>8&255,o[s++]=t&255;return i===2&&(t=b0[e.charCodeAt(l)]<<2|b0[e.charCodeAt(l+1)]>>4,o[s++]=t&255),i===1&&(t=b0[e.charCodeAt(l)]<<10|b0[e.charCodeAt(l+1)]<<4|b0[e.charCodeAt(l+2)]>>2,o[s++]=t>>8&255,o[s++]=t&255),o}function jS(e){return a4[e>>18&63]+a4[e>>12&63]+a4[e>>6&63]+a4[e&63]}function HS(e,t,r){for(var n,i=[],o=t;o<r;o+=3)n=(e[o]<<16&16711680)+(e[o+1]<<8&65280)+(e[o+2]&255),i.push(jS(n));return i.join("")}function qS(e){for(var t,r=e.length,n=r%3,i=[],o=16383,s=0,a=r-n;s<a;s+=o)i.push(HS(e,s,s+o>a?a:s+o));return n===1?(t=e[r-1],i.push(a4[t>>2]+a4[t<<4&63]+"==")):n===2&&(t=(e[r-2]<<8)+e[r-1],i.push(a4[t>>10]+a4[t>>4&63]+a4[t<<2&63]+"=")),i.join("")}var li={};/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */li.read=function(e,t,r,n,i){var o,s,a=i*8-n-1,l=(1<<a)-1,u=l>>1,h=-7,y=r?i-1:0,x=r?-1:1,b=e[t+y];for(y+=x,o=b&(1<<-h)-1,b>>=-h,h+=a;h>0;o=o*256+e[t+y],y+=x,h-=8);for(s=o&(1<<-h)-1,o>>=-h,h+=n;h>0;s=s*256+e[t+y],y+=x,h-=8);if(o===0)o=1-u;else{if(o===l)return s?NaN:(b?-1:1)*(1/0);s=s+Math.pow(2,n),o=o-u}return(b?-1:1)*s*Math.pow(2,o-n)};li.write=function(e,t,r,n,i,o){var s,a,l,u=o*8-i-1,h=(1<<u)-1,y=h>>1,x=i===23?Math.pow(2,-24)-Math.pow(2,-77):0,b=n?0:o-1,C=n?1:-1,T=t<0||t===0&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(a=isNaN(t)?1:0,s=h):(s=Math.floor(Math.log(t)/Math.LN2),t*(l=Math.pow(2,-s))<1&&(s--,l*=2),s+y>=1?t+=x/l:t+=x*Math.pow(2,1-y),t*l>=2&&(s++,l/=2),s+y>=h?(a=0,s=h):s+y>=1?(a=(t*l-1)*Math.pow(2,i),s=s+y):(a=t*Math.pow(2,y-1)*Math.pow(2,i),s=0));i>=8;e[r+b]=a&255,b+=C,a/=256,i-=8);for(s=s<<i|a,u+=i;u>0;e[r+b]=s&255,b+=C,s/=256,u-=8);e[r+b-C]|=T*128};/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */(function(e){const t=Ee,r=li,n=typeof Symbol=="function"&&typeof Symbol.for=="function"?Symbol.for("nodejs.util.inspect.custom"):null;e.Buffer=a,e.SlowBuffer=E,e.INSPECT_MAX_BYTES=50;const i=2147483647;e.kMaxLength=i,a.TYPED_ARRAY_SUPPORT=o(),!a.TYPED_ARRAY_SUPPORT&&typeof console<"u"&&typeof console.error=="function"&&console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");function o(){try{const g=new Uint8Array(1),f={foo:function(){return 42}};return Object.setPrototypeOf(f,Uint8Array.prototype),Object.setPrototypeOf(g,f),g.foo()===42}catch{return!1}}Object.defineProperty(a.prototype,"parent",{enumerable:!0,get:function(){if(a.isBuffer(this))return this.buffer}}),Object.defineProperty(a.prototype,"offset",{enumerable:!0,get:function(){if(a.isBuffer(this))return this.byteOffset}});function s(g){if(g>i)throw new RangeError('The value "'+g+'" is invalid for option "size"');const f=new Uint8Array(g);return Object.setPrototypeOf(f,a.prototype),f}function a(g,f,d){if(typeof g=="number"){if(typeof f=="string")throw new TypeError('The "string" argument must be of type string. Received type number');return y(g)}return l(g,f,d)}a.poolSize=8192;function l(g,f,d){if(typeof g=="string")return x(g,f);if(ArrayBuffer.isView(g))return C(g);if(g==null)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof g);if(o0(g,ArrayBuffer)||g&&o0(g.buffer,ArrayBuffer)||typeof SharedArrayBuffer<"u"&&(o0(g,SharedArrayBuffer)||g&&o0(g.buffer,SharedArrayBuffer)))return T(g,f,d);if(typeof g=="number")throw new TypeError('The "value" argument must not be of type number. Received type number');const _=g.valueOf&&g.valueOf();if(_!=null&&_!==g)return a.from(_,f,d);const F=k(g);if(F)return F;if(typeof Symbol<"u"&&Symbol.toPrimitive!=null&&typeof g[Symbol.toPrimitive]=="function")return a.from(g[Symbol.toPrimitive]("string"),f,d);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof g)}a.from=function(g,f,d){return l(g,f,d)},Object.setPrototypeOf(a.prototype,Uint8Array.prototype),Object.setPrototypeOf(a,Uint8Array);function u(g){if(typeof g!="number")throw new TypeError('"size" argument must be of type number');if(g<0)throw new RangeError('The value "'+g+'" is invalid for option "size"')}function h(g,f,d){return u(g),g<=0?s(g):f!==void 0?typeof d=="string"?s(g).fill(f,d):s(g).fill(f):s(g)}a.alloc=function(g,f,d){return h(g,f,d)};function y(g){return u(g),s(g<0?0:S(g)|0)}a.allocUnsafe=function(g){return y(g)},a.allocUnsafeSlow=function(g){return y(g)};function x(g,f){if((typeof f!="string"||f==="")&&(f="utf8"),!a.isEncoding(f))throw new TypeError("Unknown encoding: "+f);const d=A(g,f)|0;let _=s(d);const F=_.write(g,f);return F!==d&&(_=_.slice(0,F)),_}function b(g){const f=g.length<0?0:S(g.length)|0,d=s(f);for(let _=0;_<f;_+=1)d[_]=g[_]&255;return d}function C(g){if(o0(g,Uint8Array)){const f=new Uint8Array(g);return T(f.buffer,f.byteOffset,f.byteLength)}return b(g)}function T(g,f,d){if(f<0||g.byteLength<f)throw new RangeError('"offset" is outside of buffer bounds');if(g.byteLength<f+(d||0))throw new RangeError('"length" is outside of buffer bounds');let _;return f===void 0&&d===void 0?_=new Uint8Array(g):d===void 0?_=new Uint8Array(g,f):_=new Uint8Array(g,f,d),Object.setPrototypeOf(_,a.prototype),_}function k(g){if(a.isBuffer(g)){const f=S(g.length)|0,d=s(f);return d.length===0||g.copy(d,0,0,f),d}if(g.length!==void 0)return typeof g.length!="number"||b5(g.length)?s(0):b(g);if(g.type==="Buffer"&&Array.isArray(g.data))return b(g.data)}function S(g){if(g>=i)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+i.toString(16)+" bytes");return g|0}function E(g){return+g!=g&&(g=0),a.alloc(+g)}a.isBuffer=function(f){return f!=null&&f._isBuffer===!0&&f!==a.prototype},a.compare=function(f,d){if(o0(f,Uint8Array)&&(f=a.from(f,f.offset,f.byteLength)),o0(d,Uint8Array)&&(d=a.from(d,d.offset,d.byteLength)),!a.isBuffer(f)||!a.isBuffer(d))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(f===d)return 0;let _=f.length,F=d.length;for(let O=0,$=Math.min(_,F);O<$;++O)if(f[O]!==d[O]){_=f[O],F=d[O];break}return _<F?-1:F<_?1:0},a.isEncoding=function(f){switch(String(f).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},a.concat=function(f,d){if(!Array.isArray(f))throw new TypeError('"list" argument must be an Array of Buffers');if(f.length===0)return a.alloc(0);let _;if(d===void 0)for(d=0,_=0;_<f.length;++_)d+=f[_].length;const F=a.allocUnsafe(d);let O=0;for(_=0;_<f.length;++_){const $=f[_];if(o0($,Uint8Array))Uint8Array.prototype.set.call(F,$,O);else if(a.isBuffer($))$.copy(F,O);else throw new TypeError('"list" argument must be an Array of Buffers');O+=$.length}return F};function A(g,f){if(a.isBuffer(g))return g.length;if(ArrayBuffer.isView(g)||o0(g,ArrayBuffer))return g.byteLength;if(typeof g!="string")throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof g);const d=g.length,_=arguments.length>2&&arguments[2]===!0;if(!_&&d===0)return 0;let F=!1;for(;;)switch(f){case"ascii":case"latin1":case"binary":return d;case"utf8":case"utf-8":return n1(g).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return d*2;case"hex":return d>>>1;case"base64":return E5(g).length;default:if(F)return _?-1:n1(g).length;f=(""+f).toLowerCase(),F=!0}}a.byteLength=A;function N(g,f,d){let _=!1;if((f===void 0||f<0)&&(f=0),f>this.length||((d===void 0||d>this.length)&&(d=this.length),d<=0)||(d>>>=0,f>>>=0,d<=f))return"";for(g||(g="utf8");;)switch(g){case"hex":return p2(this,f,d);case"utf8":case"utf-8":return U0(this,f,d);case"ascii":return h4(this,f,d);case"latin1":case"binary":return X(this,f,d);case"base64":return z3(this,f,d);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return S2(this,f,d);default:if(_)throw new TypeError("Unknown encoding: "+g);g=(g+"").toLowerCase(),_=!0}}a.prototype._isBuffer=!0;function H(g,f,d){const _=g[f];g[f]=g[d],g[d]=_}a.prototype.swap16=function(){const f=this.length;if(f%2!==0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let d=0;d<f;d+=2)H(this,d,d+1);return this},a.prototype.swap32=function(){const f=this.length;if(f%4!==0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let d=0;d<f;d+=4)H(this,d,d+3),H(this,d+1,d+2);return this},a.prototype.swap64=function(){const f=this.length;if(f%8!==0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let d=0;d<f;d+=8)H(this,d,d+7),H(this,d+1,d+6),H(this,d+2,d+5),H(this,d+3,d+4);return this},a.prototype.toString=function(){const f=this.length;return f===0?"":arguments.length===0?U0(this,0,f):N.apply(this,arguments)},a.prototype.toLocaleString=a.prototype.toString,a.prototype.equals=function(f){if(!a.isBuffer(f))throw new TypeError("Argument must be a Buffer");return this===f?!0:a.compare(this,f)===0},a.prototype.inspect=function(){let f="";const d=e.INSPECT_MAX_BYTES;return f=this.toString("hex",0,d).replace(/(.{2})/g,"$1 ").trim(),this.length>d&&(f+=" ... "),"<Buffer "+f+">"},n&&(a.prototype[n]=a.prototype.inspect),a.prototype.compare=function(f,d,_,F,O){if(o0(f,Uint8Array)&&(f=a.from(f,f.offset,f.byteLength)),!a.isBuffer(f))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof f);if(d===void 0&&(d=0),_===void 0&&(_=f?f.length:0),F===void 0&&(F=0),O===void 0&&(O=this.length),d<0||_>f.length||F<0||O>this.length)throw new RangeError("out of range index");if(F>=O&&d>=_)return 0;if(F>=O)return-1;if(d>=_)return 1;if(d>>>=0,_>>>=0,F>>>=0,O>>>=0,this===f)return 0;let $=O-F,E2=_-d;const Q2=Math.min($,E2),V2=this.slice(F,O),e3=f.slice(d,_);for(let M2=0;M2<Q2;++M2)if(V2[M2]!==e3[M2]){$=V2[M2],E2=e3[M2];break}return $<E2?-1:E2<$?1:0};function W(g,f,d,_,F){if(g.length===0)return-1;if(typeof d=="string"?(_=d,d=0):d>2147483647?d=2147483647:d<-2147483648&&(d=-2147483648),d=+d,b5(d)&&(d=F?0:g.length-1),d<0&&(d=g.length+d),d>=g.length){if(F)return-1;d=g.length-1}else if(d<0)if(F)d=0;else return-1;if(typeof f=="string"&&(f=a.from(f,_)),a.isBuffer(f))return f.length===0?-1:Q(g,f,d,_,F);if(typeof f=="number")return f=f&255,typeof Uint8Array.prototype.indexOf=="function"?F?Uint8Array.prototype.indexOf.call(g,f,d):Uint8Array.prototype.lastIndexOf.call(g,f,d):Q(g,[f],d,_,F);throw new TypeError("val must be string, number or Buffer")}function Q(g,f,d,_,F){let O=1,$=g.length,E2=f.length;if(_!==void 0&&(_=String(_).toLowerCase(),_==="ucs2"||_==="ucs-2"||_==="utf16le"||_==="utf-16le")){if(g.length<2||f.length<2)return-1;O=2,$/=2,E2/=2,d/=2}function Q2(e3,M2){return O===1?e3[M2]:e3.readUInt16BE(M2*O)}let V2;if(F){let e3=-1;for(V2=d;V2<$;V2++)if(Q2(g,V2)===Q2(f,e3===-1?0:V2-e3)){if(e3===-1&&(e3=V2),V2-e3+1===E2)return e3*O}else e3!==-1&&(V2-=V2-e3),e3=-1}else for(d+E2>$&&(d=$-E2),V2=d;V2>=0;V2--){let e3=!0;for(let M2=0;M2<E2;M2++)if(Q2(g,V2+M2)!==Q2(f,M2)){e3=!1;break}if(e3)return V2}return-1}a.prototype.includes=function(f,d,_){return this.indexOf(f,d,_)!==-1},a.prototype.indexOf=function(f,d,_){return W(this,f,d,_,!0)},a.prototype.lastIndexOf=function(f,d,_){return W(this,f,d,_,!1)};function V(g,f,d,_){d=Number(d)||0;const F=g.length-d;_?(_=Number(_),_>F&&(_=F)):_=F;const O=f.length;_>O/2&&(_=O/2);let $;for($=0;$<_;++$){const E2=parseInt(f.substr($*2,2),16);if(b5(E2))return $;g[d+$]=E2}return $}function y2(g,f,d,_){return S5(n1(f,g.length-d),g,d,_)}function h2(g,f,d,_){return S5(W8(f),g,d,_)}function a3(g,f,d,_){return S5(E5(f),g,d,_)}function k3(g,f,d,_){return S5(v4(f,g.length-d),g,d,_)}a.prototype.write=function(f,d,_,F){if(d===void 0)F="utf8",_=this.length,d=0;else if(_===void 0&&typeof d=="string")F=d,_=this.length,d=0;else if(isFinite(d))d=d>>>0,isFinite(_)?(_=_>>>0,F===void 0&&(F="utf8")):(F=_,_=void 0);else throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");const O=this.length-d;if((_===void 0||_>O)&&(_=O),f.length>0&&(_<0||d<0)||d>this.length)throw new RangeError("Attempt to write outside buffer bounds");F||(F="utf8");let $=!1;for(;;)switch(F){case"hex":return V(this,f,d,_);case"utf8":case"utf-8":return y2(this,f,d,_);case"ascii":case"latin1":case"binary":return h2(this,f,d,_);case"base64":return a3(this,f,d,_);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return k3(this,f,d,_);default:if($)throw new TypeError("Unknown encoding: "+F);F=(""+F).toLowerCase(),$=!0}},a.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function z3(g,f,d){return f===0&&d===g.length?t.fromByteArray(g):t.fromByteArray(g.slice(f,d))}function U0(g,f,d){d=Math.min(g.length,d);const _=[];let F=f;for(;F<d;){const O=g[F];let $=null,E2=O>239?4:O>223?3:O>191?2:1;if(F+E2<=d){let Q2,V2,e3,M2;switch(E2){case 1:O<128&&($=O);break;case 2:Q2=g[F+1],(Q2&192)===128&&(M2=(O&31)<<6|Q2&63,M2>127&&($=M2));break;case 3:Q2=g[F+1],V2=g[F+2],(Q2&192)===128&&(V2&192)===128&&(M2=(O&15)<<12|(Q2&63)<<6|V2&63,M2>2047&&(M2<55296||M2>57343)&&($=M2));break;case 4:Q2=g[F+1],V2=g[F+2],e3=g[F+3],(Q2&192)===128&&(V2&192)===128&&(e3&192)===128&&(M2=(O&15)<<18|(Q2&63)<<12|(V2&63)<<6|e3&63,M2>65535&&M2<1114112&&($=M2))}}$===null?($=65533,E2=1):$>65535&&($-=65536,_.push($>>>10&1023|55296),$=56320|$&1023),_.push($),F+=E2}return J3(_)}const N0=4096;function J3(g){const f=g.length;if(f<=N0)return String.fromCharCode.apply(String,g);let d="",_=0;for(;_<f;)d+=String.fromCharCode.apply(String,g.slice(_,_+=N0));return d}function h4(g,f,d){let _="";d=Math.min(g.length,d);for(let F=f;F<d;++F)_+=String.fromCharCode(g[F]&127);return _}function X(g,f,d){let _="";d=Math.min(g.length,d);for(let F=f;F<d;++F)_+=String.fromCharCode(g[F]);return _}function p2(g,f,d){const _=g.length;(!f||f<0)&&(f=0),(!d||d<0||d>_)&&(d=_);let F="";for(let O=f;O<d;++O)F+=i1[g[O]];return F}function S2(g,f,d){const _=g.slice(f,d);let F="";for(let O=0;O<_.length-1;O+=2)F+=String.fromCharCode(_[O]+_[O+1]*256);return F}a.prototype.slice=function(f,d){const _=this.length;f=~~f,d=d===void 0?_:~~d,f<0?(f+=_,f<0&&(f=0)):f>_&&(f=_),d<0?(d+=_,d<0&&(d=0)):d>_&&(d=_),d<f&&(d=f);const F=this.subarray(f,d);return Object.setPrototypeOf(F,a.prototype),F};function b2(g,f,d){if(g%1!==0||g<0)throw new RangeError("offset is not uint");if(g+f>d)throw new RangeError("Trying to access beyond buffer length")}a.prototype.readUintLE=a.prototype.readUIntLE=function(f,d,_){f=f>>>0,d=d>>>0,_||b2(f,d,this.length);let F=this[f],O=1,$=0;for(;++$<d&&(O*=256);)F+=this[f+$]*O;return F},a.prototype.readUintBE=a.prototype.readUIntBE=function(f,d,_){f=f>>>0,d=d>>>0,_||b2(f,d,this.length);let F=this[f+--d],O=1;for(;d>0&&(O*=256);)F+=this[f+--d]*O;return F},a.prototype.readUint8=a.prototype.readUInt8=function(f,d){return f=f>>>0,d||b2(f,1,this.length),this[f]},a.prototype.readUint16LE=a.prototype.readUInt16LE=function(f,d){return f=f>>>0,d||b2(f,2,this.length),this[f]|this[f+1]<<8},a.prototype.readUint16BE=a.prototype.readUInt16BE=function(f,d){return f=f>>>0,d||b2(f,2,this.length),this[f]<<8|this[f+1]},a.prototype.readUint32LE=a.prototype.readUInt32LE=function(f,d){return f=f>>>0,d||b2(f,4,this.length),(this[f]|this[f+1]<<8|this[f+2]<<16)+this[f+3]*16777216},a.prototype.readUint32BE=a.prototype.readUInt32BE=function(f,d){return f=f>>>0,d||b2(f,4,this.length),this[f]*16777216+(this[f+1]<<16|this[f+2]<<8|this[f+3])},a.prototype.readBigUInt64LE=S0(function(f){f=f>>>0,y4(f,"offset");const d=this[f],_=this[f+7];(d===void 0||_===void 0)&&_5(f,this.length-8);const F=d+this[++f]*2**8+this[++f]*2**16+this[++f]*2**24,O=this[++f]+this[++f]*2**8+this[++f]*2**16+_*2**24;return BigInt(F)+(BigInt(O)<<BigInt(32))}),a.prototype.readBigUInt64BE=S0(function(f){f=f>>>0,y4(f,"offset");const d=this[f],_=this[f+7];(d===void 0||_===void 0)&&_5(f,this.length-8);const F=d*2**24+this[++f]*2**16+this[++f]*2**8+this[++f],O=this[++f]*2**24+this[++f]*2**16+this[++f]*2**8+_;return(BigInt(F)<<BigInt(32))+BigInt(O)}),a.prototype.readIntLE=function(f,d,_){f=f>>>0,d=d>>>0,_||b2(f,d,this.length);let F=this[f],O=1,$=0;for(;++$<d&&(O*=256);)F+=this[f+$]*O;return O*=128,F>=O&&(F-=Math.pow(2,8*d)),F},a.prototype.readIntBE=function(f,d,_){f=f>>>0,d=d>>>0,_||b2(f,d,this.length);let F=d,O=1,$=this[f+--F];for(;F>0&&(O*=256);)$+=this[f+--F]*O;return O*=128,$>=O&&($-=Math.pow(2,8*d)),$},a.prototype.readInt8=function(f,d){return f=f>>>0,d||b2(f,1,this.length),this[f]&128?(255-this[f]+1)*-1:this[f]},a.prototype.readInt16LE=function(f,d){f=f>>>0,d||b2(f,2,this.length);const _=this[f]|this[f+1]<<8;return _&32768?_|4294901760:_},a.prototype.readInt16BE=function(f,d){f=f>>>0,d||b2(f,2,this.length);const _=this[f+1]|this[f]<<8;return _&32768?_|4294901760:_},a.prototype.readInt32LE=function(f,d){return f=f>>>0,d||b2(f,4,this.length),this[f]|this[f+1]<<8|this[f+2]<<16|this[f+3]<<24},a.prototype.readInt32BE=function(f,d){return f=f>>>0,d||b2(f,4,this.length),this[f]<<24|this[f+1]<<16|this[f+2]<<8|this[f+3]},a.prototype.readBigInt64LE=S0(function(f){f=f>>>0,y4(f,"offset");const d=this[f],_=this[f+7];(d===void 0||_===void 0)&&_5(f,this.length-8);const F=this[f+4]+this[f+5]*2**8+this[f+6]*2**16+(_<<24);return(BigInt(F)<<BigInt(32))+BigInt(d+this[++f]*2**8+this[++f]*2**16+this[++f]*2**24)}),a.prototype.readBigInt64BE=S0(function(f){f=f>>>0,y4(f,"offset");const d=this[f],_=this[f+7];(d===void 0||_===void 0)&&_5(f,this.length-8);const F=(d<<24)+this[++f]*2**16+this[++f]*2**8+this[++f];return(BigInt(F)<<BigInt(32))+BigInt(this[++f]*2**24+this[++f]*2**16+this[++f]*2**8+_)}),a.prototype.readFloatLE=function(f,d){return f=f>>>0,d||b2(f,4,this.length),r.read(this,f,!0,23,4)},a.prototype.readFloatBE=function(f,d){return f=f>>>0,d||b2(f,4,this.length),r.read(this,f,!1,23,4)},a.prototype.readDoubleLE=function(f,d){return f=f>>>0,d||b2(f,8,this.length),r.read(this,f,!0,52,8)},a.prototype.readDoubleBE=function(f,d){return f=f>>>0,d||b2(f,8,this.length),r.read(this,f,!1,52,8)};function D2(g,f,d,_,F,O){if(!a.isBuffer(g))throw new TypeError('"buffer" argument must be a Buffer instance');if(f>F||f<O)throw new RangeError('"value" argument is out of bounds');if(d+_>g.length)throw new RangeError("Index out of range")}a.prototype.writeUintLE=a.prototype.writeUIntLE=function(f,d,_,F){if(f=+f,d=d>>>0,_=_>>>0,!F){const E2=Math.pow(2,8*_)-1;D2(this,f,d,_,E2,0)}let O=1,$=0;for(this[d]=f&255;++$<_&&(O*=256);)this[d+$]=f/O&255;return d+_},a.prototype.writeUintBE=a.prototype.writeUIntBE=function(f,d,_,F){if(f=+f,d=d>>>0,_=_>>>0,!F){const E2=Math.pow(2,8*_)-1;D2(this,f,d,_,E2,0)}let O=_-1,$=1;for(this[d+O]=f&255;--O>=0&&($*=256);)this[d+O]=f/$&255;return d+_},a.prototype.writeUint8=a.prototype.writeUInt8=function(f,d,_){return f=+f,d=d>>>0,_||D2(this,f,d,1,255,0),this[d]=f&255,d+1},a.prototype.writeUint16LE=a.prototype.writeUInt16LE=function(f,d,_){return f=+f,d=d>>>0,_||D2(this,f,d,2,65535,0),this[d]=f&255,this[d+1]=f>>>8,d+2},a.prototype.writeUint16BE=a.prototype.writeUInt16BE=function(f,d,_){return f=+f,d=d>>>0,_||D2(this,f,d,2,65535,0),this[d]=f>>>8,this[d+1]=f&255,d+2},a.prototype.writeUint32LE=a.prototype.writeUInt32LE=function(f,d,_){return f=+f,d=d>>>0,_||D2(this,f,d,4,4294967295,0),this[d+3]=f>>>24,this[d+2]=f>>>16,this[d+1]=f>>>8,this[d]=f&255,d+4},a.prototype.writeUint32BE=a.prototype.writeUInt32BE=function(f,d,_){return f=+f,d=d>>>0,_||D2(this,f,d,4,4294967295,0),this[d]=f>>>24,this[d+1]=f>>>16,this[d+2]=f>>>8,this[d+3]=f&255,d+4};function b3(g,f,d,_,F){w5(f,_,F,g,d,7);let O=Number(f&BigInt(4294967295));g[d++]=O,O=O>>8,g[d++]=O,O=O>>8,g[d++]=O,O=O>>8,g[d++]=O;let $=Number(f>>BigInt(32)&BigInt(4294967295));return g[d++]=$,$=$>>8,g[d++]=$,$=$>>8,g[d++]=$,$=$>>8,g[d++]=$,d}function h3(g,f,d,_,F){w5(f,_,F,g,d,7);let O=Number(f&BigInt(4294967295));g[d+7]=O,O=O>>8,g[d+6]=O,O=O>>8,g[d+5]=O,O=O>>8,g[d+4]=O;let $=Number(f>>BigInt(32)&BigInt(4294967295));return g[d+3]=$,$=$>>8,g[d+2]=$,$=$>>8,g[d+1]=$,$=$>>8,g[d]=$,d+8}a.prototype.writeBigUInt64LE=S0(function(f,d=0){return b3(this,f,d,BigInt(0),BigInt("0xffffffffffffffff"))}),a.prototype.writeBigUInt64BE=S0(function(f,d=0){return h3(this,f,d,BigInt(0),BigInt("0xffffffffffffffff"))}),a.prototype.writeIntLE=function(f,d,_,F){if(f=+f,d=d>>>0,!F){const Q2=Math.pow(2,8*_-1);D2(this,f,d,_,Q2-1,-Q2)}let O=0,$=1,E2=0;for(this[d]=f&255;++O<_&&($*=256);)f<0&&E2===0&&this[d+O-1]!==0&&(E2=1),this[d+O]=(f/$>>0)-E2&255;return d+_},a.prototype.writeIntBE=function(f,d,_,F){if(f=+f,d=d>>>0,!F){const Q2=Math.pow(2,8*_-1);D2(this,f,d,_,Q2-1,-Q2)}let O=_-1,$=1,E2=0;for(this[d+O]=f&255;--O>=0&&($*=256);)f<0&&E2===0&&this[d+O+1]!==0&&(E2=1),this[d+O]=(f/$>>0)-E2&255;return d+_},a.prototype.writeInt8=function(f,d,_){return f=+f,d=d>>>0,_||D2(this,f,d,1,127,-128),f<0&&(f=255+f+1),this[d]=f&255,d+1},a.prototype.writeInt16LE=function(f,d,_){return f=+f,d=d>>>0,_||D2(this,f,d,2,32767,-32768),this[d]=f&255,this[d+1]=f>>>8,d+2},a.prototype.writeInt16BE=function(f,d,_){return f=+f,d=d>>>0,_||D2(this,f,d,2,32767,-32768),this[d]=f>>>8,this[d+1]=f&255,d+2},a.prototype.writeInt32LE=function(f,d,_){return f=+f,d=d>>>0,_||D2(this,f,d,4,2147483647,-2147483648),this[d]=f&255,this[d+1]=f>>>8,this[d+2]=f>>>16,this[d+3]=f>>>24,d+4},a.prototype.writeInt32BE=function(f,d,_){return f=+f,d=d>>>0,_||D2(this,f,d,4,2147483647,-2147483648),f<0&&(f=4294967295+f+1),this[d]=f>>>24,this[d+1]=f>>>16,this[d+2]=f>>>8,this[d+3]=f&255,d+4},a.prototype.writeBigInt64LE=S0(function(f,d=0){return b3(this,f,d,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))}),a.prototype.writeBigInt64BE=S0(function(f,d=0){return h3(this,f,d,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))});function B2(g,f,d,_,F,O){if(d+_>g.length)throw new RangeError("Index out of range");if(d<0)throw new RangeError("Index out of range")}function l3(g,f,d,_,F){return f=+f,d=d>>>0,F||B2(g,f,d,4),r.write(g,f,d,_,23,4),d+4}a.prototype.writeFloatLE=function(f,d,_){return l3(this,f,d,!0,_)},a.prototype.writeFloatBE=function(f,d,_){return l3(this,f,d,!1,_)};function J0(g,f,d,_,F){return f=+f,d=d>>>0,F||B2(g,f,d,8),r.write(g,f,d,_,52,8),d+8}a.prototype.writeDoubleLE=function(f,d,_){return J0(this,f,d,!0,_)},a.prototype.writeDoubleBE=function(f,d,_){return J0(this,f,d,!1,_)},a.prototype.copy=function(f,d,_,F){if(!a.isBuffer(f))throw new TypeError("argument should be a Buffer");if(_||(_=0),!F&&F!==0&&(F=this.length),d>=f.length&&(d=f.length),d||(d=0),F>0&&F<_&&(F=_),F===_||f.length===0||this.length===0)return 0;if(d<0)throw new RangeError("targetStart out of bounds");if(_<0||_>=this.length)throw new RangeError("Index out of range");if(F<0)throw new RangeError("sourceEnd out of bounds");F>this.length&&(F=this.length),f.length-d<F-_&&(F=f.length-d+_);const O=F-_;return this===f&&typeof Uint8Array.prototype.copyWithin=="function"?this.copyWithin(d,_,F):Uint8Array.prototype.set.call(f,this.subarray(_,F),d),O},a.prototype.fill=function(f,d,_,F){if(typeof f=="string"){if(typeof d=="string"?(F=d,d=0,_=this.length):typeof _=="string"&&(F=_,_=this.length),F!==void 0&&typeof F!="string")throw new TypeError("encoding must be a string");if(typeof F=="string"&&!a.isEncoding(F))throw new TypeError("Unknown encoding: "+F);if(f.length===1){const $=f.charCodeAt(0);(F==="utf8"&&$<128||F==="latin1")&&(f=$)}}else typeof f=="number"?f=f&255:typeof f=="boolean"&&(f=Number(f));if(d<0||this.length<d||this.length<_)throw new RangeError("Out of range index");if(_<=d)return this;d=d>>>0,_=_===void 0?this.length:_>>>0,f||(f=0);let O;if(typeof f=="number")for(O=d;O<_;++O)this[O]=f;else{const $=a.isBuffer(f)?f:a.from(f,F),E2=$.length;if(E2===0)throw new TypeError('The value "'+f+'" is invalid for argument "value"');for(O=0;O<_-d;++O)this[O+d]=$[O%E2]}return this};var p4={};function P4(g,f,d){p4[g]=class extends d{constructor(){super(),Object.defineProperty(this,"message",{value:f.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${g}]`,this.stack,delete this.name}get code(){return g}set code(F){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:F,writable:!0})}toString(){return`${this.name} [${g}]: ${this.message}`}}}P4("ERR_BUFFER_OUT_OF_BOUNDS",function(g){return g?`${g} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"},RangeError),P4("ERR_INVALID_ARG_TYPE",function(g,f){return`The "${g}" argument must be of type number. Received type ${typeof f}`},TypeError),P4("ERR_OUT_OF_RANGE",function(g,f,d){let _=`The value of "${g}" is out of range.`,F=d;return Number.isInteger(d)&&Math.abs(d)>2**32?F=x5(String(d)):typeof d=="bigint"&&(F=String(d),(d>BigInt(2)**BigInt(32)||d<-(BigInt(2)**BigInt(32)))&&(F=x5(F)),F+="n"),_+=` It must be ${f}. Received ${F}`,_},RangeError);function x5(g){let f="",d=g.length;const _=g[0]==="-"?1:0;for(;d>=_+4;d-=3)f=`_${g.slice(d-3,d)}${f}`;return`${g.slice(0,d)}${f}`}function q8(g,f,d){y4(f,"offset"),(g[f]===void 0||g[f+d]===void 0)&&_5(f,g.length-(d+1))}function w5(g,f,d,_,F,O){if(g>d||g<f){const $=typeof f=="bigint"?"n":"";let E2;throw O>3?f===0||f===BigInt(0)?E2=`>= 0${$} and < 2${$} ** ${(O+1)*8}${$}`:E2=`>= -(2${$} ** ${(O+1)*8-1}${$}) and < 2 ** ${(O+1)*8-1}${$}`:E2=`>= ${f}${$} and <= ${d}${$}`,new p4.ERR_OUT_OF_RANGE("value",E2,g)}q8(_,F,O)}function y4(g,f){if(typeof g!="number")throw new p4.ERR_INVALID_ARG_TYPE(f,"number",g)}function _5(g,f,d){throw Math.floor(g)!==g?(y4(g,d),new p4.ERR_OUT_OF_RANGE(d||"offset","an integer",g)):f<0?new p4.ERR_BUFFER_OUT_OF_BOUNDS:new p4.ERR_OUT_OF_RANGE(d||"offset",`>= ${d?1:0} and <= ${f}`,g)}const be=/[^+/0-9A-Za-z-_]/g;function Ce(g){if(g=g.split("=")[0],g=g.trim().replace(be,""),g.length<2)return"";for(;g.length%4!==0;)g=g+"=";return g}function n1(g,f){f=f||1/0;let d;const _=g.length;let F=null;const O=[];for(let $=0;$<_;++$){if(d=g.charCodeAt($),d>55295&&d<57344){if(!F){if(d>56319){(f-=3)>-1&&O.push(239,191,189);continue}else if($+1===_){(f-=3)>-1&&O.push(239,191,189);continue}F=d;continue}if(d<56320){(f-=3)>-1&&O.push(239,191,189),F=d;continue}d=(F-55296<<10|d-56320)+65536}else F&&(f-=3)>-1&&O.push(239,191,189);if(F=null,d<128){if((f-=1)<0)break;O.push(d)}else if(d<2048){if((f-=2)<0)break;O.push(d>>6|192,d&63|128)}else if(d<65536){if((f-=3)<0)break;O.push(d>>12|224,d>>6&63|128,d&63|128)}else if(d<1114112){if((f-=4)<0)break;O.push(d>>18|240,d>>12&63|128,d>>6&63|128,d&63|128)}else throw new Error("Invalid code point")}return O}function W8(g){const f=[];for(let d=0;d<g.length;++d)f.push(g.charCodeAt(d)&255);return f}function v4(g,f){let d,_,F;const O=[];for(let $=0;$<g.length&&!((f-=2)<0);++$)d=g.charCodeAt($),_=d>>8,F=d%256,O.push(F),O.push(_);return O}function E5(g){return t.toByteArray(Ce(g))}function S5(g,f,d,_){let F;for(F=0;F<_&&!(F+d>=f.length||F>=g.length);++F)f[F+d]=g[F];return F}function o0(g,f){return g instanceof f||g!=null&&g.constructor!=null&&g.constructor.name!=null&&g.constructor.name===f.name}function b5(g){return g!==g}const i1=function(){const g="0123456789abcdef",f=new Array(256);for(let d=0;d<16;++d){const _=d*16;for(let F=0;F<16;++F)f[_+F]=g[d]+g[F]}return f}();function S0(g){return typeof BigInt>"u"?o1:g}function o1(){throw new Error("BigInt not supported")}})(o4);function WS({storage:e,storageKey:t,currentNetwork:r}){return ii()(oi((n,i)=>({networks:[],currentNetwork:r,addNetwork(o){const s=i().networks;n(()=>({networks:s.concat(o)}))},removeNetwork(o){const a=i().networks.filter(l=>l.id!==o.id);n(()=>({networks:a}))},switchNetwork(o){n(()=>({currentNetwork:o}))}}),{name:t,storage:we(()=>e),partialize:({networks:n,currentNetwork:i})=>({networks:n,currentNetwork:i})}))}function VS({storage:e,storageKey:t}){return ii()(oi((r,n)=>({sessions:[],currentSession:null,addSession(i){const o=n().sessions;r(()=>({sessions:o.concat(i)}))},setCurrentSession(i){r(()=>({currentSession:i}))},removeSession(i){const o=n().sessions;r(()=>({sessions:o.filter(s=>s.getAddress()===i.getAddress())}))}}),{name:t,storage:we(()=>e),partialize:({sessions:r,currentSession:n})=>({sessions:r,currentSession:n})}))}var KS="rooch-sdk-kit:rooch-client-info",GS="rooch-sdk-kit:rooch-session-info",wf=L.createContext(null),QS=function(t,r){return nE(r)?r:new iE(r)};function YS(e){const{storage:t,storageKey:r,network:n,networks:i,children:o}=e,s=e.createClient??QS,[a,l]=L.useState(!0),u=L.useRef(),h=L.useRef(),y=L.useRef(),x=L.useRef();return L.useEffect(()=>{u.current=WS({storage:t??localStorage,storageKey:r??KS,networks:i??Cp,currentNetwork:n}),h.current=VS({storage:sessionStorage,storageKey:GS});{const{currentNetwork:b}=u.current.getState();y.current=s(b.name,b);const{networks:C,addNetwork:T,switchNetwork:k,removeNetwork:S}=u.current.getState(),{sessions:E,currentSession:A,addSession:N,setCurrentSession:H,removeSession:W}=h.current.getState();x.current={client:y.current,networks:C,currentNetwork:b,sessions:E,currentSession:A,addNetwork:T,switchNetwork:k,removeNetwork:S,addSession:N,setCurrentSession:H,removeSession:W},l(!1),console.log("net",u.current.getState()),console.log("init fin",x.current)}},[s,n,i,t,r]),console.log(y.current),a?N2.jsx(N2.Fragment,{}):N2.jsx(wf.Provider,{value:x.current,children:o})}function JS({chain:e,currentWallet:t,wallets:r,storage:n,storageKey:i,autoConnectEnabled:o}){return ii()(oi((s,a)=>({currentChain:e,autoConnectEnabled:o,currentWallet:t,wallets:r,accounts:[],currentAccount:null,lastConnectedAccountAddress:null,lastConnectedWalletName:null,connectionStatus:"disconnected",setChain(l){a().currentChain!==l&&s(()=>({currentChain:l,accounts:[],sessionAccount:null,connectionStatus:"disconnected"}))},setConnectionStatus(l){s(()=>({connectionStatus:l}))},setWalletConnected(l,u,h){s(()=>({currentWallet:l,accounts:u,currentAccount:h,lastConnectedWalletName:l.name??"",lastConnectedAccountAddress:(h==null?void 0:h.address)??"",connectionStatus:"connected"}))},setWalletDisconnected(){s(()=>({accounts:[],currentAccount:null,lastConnectedWalletName:null,lastConnectedAccountAddress:null,connectionStatus:"disconnected"}))},setAccountSwitched(l){s(()=>({currentAccount:l,lastConnectedAccountAddress:l.address??""}))},updateWalletAccounts(l){const u=a().currentAccount;s(()=>({currentAccount:u&&l.find(h=>h.address===u.address)||l[0]}))}}),{name:i,storage:we(()=>n),partialize:({lastConnectedWalletName:s,lastConnectedAccountAddress:a})=>({lastConnectedWalletName:s,lastConnectedAccountAddress:a})}))}function $3(e){const t=L.useContext(kf);if(!t)throw new Error("Could not find WalletContext. Ensure that you have set up the WalletProvider.");return RE(t,e)}function m9(e){return function(r=[]){return[{...ci.all,baseEntity:e},...r]}}var ci={all:{baseScope:"wallet"},connectWallet:m9("connect-wallet"),autoConnectWallet:m9("auto-connect-wallet"),switchAccount:m9("switch-account"),createSessionKey:m9("create-session-key")};function _f({mutationKey:e,...t}={}){const r=$3(i=>i.setWalletConnected),n=$3(i=>i.setConnectionStatus);return pf({mutationKey:ci.connectWallet(e),mutationFn:async({wallet:i})=>{try{n("connecting");const o=await i.connect(),s=o[0];return await s.resoleRoochAddress(),r(i,o,s),o}catch(o){throw n("disconnected"),o}},...t})}function Ef(){return $3(e=>e.wallets)}function Sf(){const e=$3(r=>r.currentWallet),t=$3(r=>r.connectionStatus);switch(t){case"connecting":return{status:t,wallet:e,isDisconnected:!1,isConnecting:!0,isConnected:!1};case"disconnected":return{status:t,wallet:e,isDisconnected:!0,isConnecting:!1,isConnected:!1};case"connected":return{status:t,wallet:e,isDisconnected:!1,isConnecting:!1,isConnected:!0}}}function bf(){return $3(e=>e.currentAccount)}var Cf=(e=>(e.Rooch="ROOCH",e.BITCOIN="BITCOIN",e.ETH="ETH",e))(Cf||{}),XS=["BITCOIN","ETH"];function ZS(){const{mutateAsync:e}=_f(),t=$3(y=>y.autoConnectEnabled),r=$3(y=>y.lastConnectedWalletName),n=$3(y=>y.lastConnectedAccountAddress),{isConnected:i}=Sf(),o=Ef(),[s,a]=L.useState(!1),l=bf();L.useLayoutEffect(()=>{a(!0)},[]);const{data:u,isError:h}=dS({queryKey:["@rooch/sdk-kit","autoconnect",{isConnected:i,autoConnectEnabled:t,lastConnectedWalletName:r,lastConnectedAccountAddress:n}],queryFn:async()=>{if(!t)return"disabled";if(!r||!n||i)return"attempted";let y=o.find(x=>x.name===r);return y&&await e({wallet:y}),y.getChain()!=="BITCOIN"&&(l==null?void 0:l.address)!==n&&y.switchAccount(n),"attempted"},enabled:t,persister:void 0,gcTime:0,staleTime:0,networkMode:"always",retry:!1,retryOnMount:!1,refetchInterval:!1,refetchIntervalInBackground:!1,refetchOnMount:!1,refetchOnReconnect:!1,refetchOnWindowFocus:!1});return t?s?r?h?"attempted":u??"idle":"attempted":"idle":"disabled"}function Af(){return fi().client}var eb=class extends Error{},Bf=class extends ni{constructor(e,t,r,n,i){super(e,t,r,n,i??`Welcome to ${window.location.hostname}
You will authorize session:
${`Scope:
`+r.filter(o=>!o.startsWith("0x1")&&!o.startsWith("0x3")).map(o=>(console.log(o),o))+`
TimeOut:`+n}`)}static async CREATE(e,t,r,n,i){return new Bf(e,t,r,n).build(i)}async build(e){return this.roochAddress=await this.account.resoleRoochAddress(),super.build(e)}getAddress(){return this.roochAddress}async register(e){const t=(()=>{const o=new b4;return e.serialize(o),o.getBytes()})(),r=await this.account.getAuthorizer().auth(t,this.authInfo),n=new g8(e,r),i=(()=>{const o=new b4;return n.serialize(o),o.getBytes()})();return await this.client.sendRawTransaction(i),this}},tb=["0x1::*::*","0x3::*::*","0x49ee3cf17a017b331ab2b8a4d40ecc9706f328562f9db63cba625a9c106cdf35::*::*"];function rb({mutationKey:e,...t}={}){const r=Af(),n=Sf(),i=fi().setCurrentSession,o=bf();return pf({mutationKey:ci.createSessionKey(e),mutationFn:async s=>{if(!n.isConnected)throw new eb("No wallet is connected.");let a=s.scope??tb,l=s.maxInactiveInterval??1200;try{const u=await Bf.CREATE(r,o,a,l);return i(u),u}catch(u){console.log(u.toString())}return null},...t})}function fi(){const e=L.useContext(wf);if(!e)throw new Error("Could not find RoochClientContext. Ensure that you have set up the RoochClientProvider");return e}function nb(){return fi().currentSession}var la=e=>AS().update(e).digest(),ca={0:{type:0,network:"mainnet"},111:{type:0,network:"testnet"},5:{type:1,network:"mainnet"},196:{type:1,network:"testnet"}},ib=e=>{let t;try{e.startsWith("bc1p")||e.startsWith("tb1p")||e.startsWith("bcrt1p")?t=vf.decode(e):t=E8.decode(e)}catch{throw new Error("Invalid address")}const n={bc:"mainnet",tb:"testnet",bcrt:"regtest"}[t.prefix];if(n===void 0)throw new Error("Invalid address");const i=t.words[0];if(i<0||i>16)throw new Error("Invalid address");const o=E8.fromWords(t.words.slice(1));let s;o.length,s=2;let a=new Uint8Array(o.length+2);return a.set([s]),a.set([i],1),a.set(o,2),{bytes:a,bech32:!0,network:n,address:e,type:s}},ob=e=>{let t;const r=e.substr(0,2).toLowerCase();if(r==="bc"||r==="tb")return ib(e);try{t=_S(e)}catch{throw new Error("Invalid address")}const{length:n}=t;if(n!==25)throw new Error("Invalid address");const i=t[0],o=t.slice(n-4,n),s=t.slice(0,n-4),a=la(la(s)).slice(0,4);if(o.some((y,x)=>y!==a[x]))throw new Error("Invalid address");if(!Object.keys(ca).map(Number).includes(i))throw new Error("Invalid address");const u=ca[i];let h=new Uint8Array(s.length);return h.set([u.type]),h.set(s.slice(1),1),{bytes:h,...u,address:e,bech32:!1}},Tf=class{constructor(e,t){this.multiChainId=e,this.rawAddress=ob(t).bytes}toBytes(){let e=new b4;return this.serialize(e),e.getBytes()}toBech32(){const e=[1].concat(E8.toWords(this.rawAddress));return E8.encode(Ap(this.multiChainId),e)}serialize(e){e.serializeU64(this.multiChainId),q2.serializeVectorU8(Array.from(this.rawAddress),e)}};function sb(e){switch(e){case"BITCOIN":return P1.Bitcoin;case"ETH":return P1.Ether;case"ROOCH":return P1.Rooch}}var y7=class{constructor(e,t,r,n,i,o){this.chain=t,this.client=e,this.address=r,this.authorization=n,this.publicKey=i,this.compressedPublicKey=o}toMultiChainAddress(){return this.chain!=="ETH"?new Tf(P1.Bitcoin,this.address):null}getAddress(){return this.address}async resoleRoochAddress(){return this.roochAddress||(this.roochAddress=await this.client.resoleRoochAddress({address:this.address,multiChainID:sb(this.chain)})),this.roochAddress}getAuthorizer(){return this.authorization}},ab=`Rooch tx hash:
`,If=class{constructor(e){this.client=e}async signMessage(e,t){const r=Wn(e);return await this.signMessageWithHashed(r,t)}async signMessageWithHashed(e,t){let r=o4.Buffer.from(e).toString("hex");t.charAt(t.length-1)!==`
`&&(t+=`
`),t=t+ab;let n=t+r;const i=await this.sign(n);return this.toSerializedSignature(r,i,t)}async auth(e,t){return new z8(BigInt(this.getScheme()),Rc(await this.signMessage(e,t)))}async checkInstalled(){for(let e=1;e<10&&!this.getTarget();e+=1)await new Promise(t=>setTimeout(t,100*e));return Promise.resolve(this.getTarget()!==void 0)}},Ff=class{constructor(e,t,r,n,i,o){this.sign=e,this.signInfoPrefix=t,this.signInfo=r,this.publicKey=n,this.multiAddress=i,this.fromAddress=o}toBytes(){let e=new b4;return this.serialize(e),e.getBytes()}serialize(e){q2.serializeVectorU8(this.sign,e),q2.serializeVectorU8(this.signInfoPrefix,e),q2.serializeVectorU8(this.signInfo,e),q2.serializeVectorU8(this.publicKey,e),q2.serializeVectorU8(this.multiAddress,e),q2.serializeVectorU8(this.fromAddress,e)}},ub=`Ethereum Signed Message:
`,lb=class extends If{switchNetwork(e){throw new Error("Method not implemented.")}switchAccount(e){throw new Error("Method not implemented.")}getNetwork(){throw new Error("Method not implemented.")}getSupportNetworks(){throw new Error("Method not implemented.")}async addChain(e){await this.getTarget().request({method:"wallet_addEthereumChain",params:[e]})}async switchChain(e,{defaultAdd:t=!0}={}){try{await this.getTarget().request({method:"wallet_switchEthereumChain",params:[{chainId:e.chainId}]})}catch(r){if(r.code===4902&&t)await this.addChain(e);else throw console.log(r),r}}onAccountsChanged(e){this.getTarget().on("accountsChanged",e)}removeAccountsChanged(e){this.getTarget().removeListener("accountsChanged",e)}onNetworkChanged(e){this.getTarget().on("chainChanged",e)}removeNetworkChanged(e){this.getTarget().removeListener("chainChanged",e)}normalize_recovery_id(e,t){return e===0||e===1?e:t===void 0?e-27:e-(t*2+35)}toSerializedSignature(e,t,r){let n=o4.Buffer.from(t.slice(2),"hex");const i=o4.Buffer.concat([n.subarray(0,n.length-1),o4.Buffer.from([this.normalize_recovery_id(n[n.length-1])])]);let o=o4.Buffer.from(r);const s=o4.Buffer.from(`${ub}${e.length+o.length}`,"utf-8");let a=new Ff(Array.from(i),Array.from(s),Array.from(o),[],[],Array.from(o4.Buffer.from(this.account.address.substring(2),"hex")));return console.log(a),a.toBytes()}getChain(){return"ETH"}},cb=`Bitcoin Signed Message:
`,Rf=class extends If{toSerializedSignature(e,t,r){const n=this.account,o=o4.Buffer.from(t,"base64").subarray(1);let a=new Tf(P1.Bitcoin,n.address).toBytes(),l=Array.from(cb,x=>x.charCodeAt(0)),u=Array.from(r,x=>x.charCodeAt(0)),h=o4.Buffer.from(n.publicKey,"hex");return new Ff(Array.from(o),l,u,Array.from(h),Array.from(a),[]).toBytes()}normalize_recovery_id(e){let t=e-27-4;return t<0&&(t=t+4),t}switchAccount(){throw new Error("Method not implemented.")}getChain(){return"BITCOIN"}},fb=["livenet","testnet"],Br=class extends Rf{constructor(e){super(e),this.name="unisat"}getTarget(){return window.unisat}getScheme(){return 2}async connect(){let e=await this.getTarget().getAccounts();if(!e||e.length===0)return await this.getTarget().requestAccounts(),this.connect();let t=await this.getTarget().getPublicKey();const r=e.map((n,i)=>i===0?new y7(this.client,this.getChain(),n,this,t):new y7(this.client,this.getChain(),n,this));return this.account=r[0],r}switchNetwork(e){this.getTarget().switchNetwork(e)}getNetwork(){return this.getTarget().getNetwork()}getSupportNetworks(){return fb}onAccountsChanged(e){this.getTarget().on("accountsChanged",e)}removeAccountsChanged(e){this.getTarget().removeListener("accountsChanged",e)}onNetworkChanged(e){this.getTarget().on("networkChanged",e)}removeNetworkChanged(e){this.getTarget().removeListener("networkChanged",e)}async sign(e){return await this.getTarget().signMessage(e)}},fa=class extends lb{constructor(e){super(e),this.name="metamask"}getTarget(){return window.ethereum}getScheme(){return 1}async sign(e){var t;return await this.getTarget().request({method:"personal_sign",params:[e,(t=this.account)==null?void 0:t.address]})}async connect(){const t=(await this.getTarget().request({method:"eth_requestAccounts"}).then(r=>r)).map(r=>new y7(this.client,this.getChain(),r,this));return this.account=t[0],t}},db=class extends Rf{constructor(e){super(e),this.name="okx"}async sign(e){var t;return this.getTarget().signMessage(e,{from:(t=this.account)==null?void 0:t.address})}getScheme(){return 2}getTarget(){return window.okxwallet.bitcoin}async connect(){const e=await this.getTarget().connect(),t=new y7(this.client,"BITCOIN",e==null?void 0:e.address,this,e.publicKey,e.compressedPublicKey);return this.account=t,[t]}switchNetwork(){this.getTarget().switchNetwork()}getNetwork(){return this.getTarget().getNetwork()}getSupportNetworks(){return["livenet"]}onAccountsChanged(e){this.getTarget().on("accountsChanged",e)}removeAccountsChanged(e){this.getTarget().removeListener("accountsChanged",e)}onNetworkChanged(e){this.getTarget().on("networkChanged",e)}removeNetworkChanged(e){this.getTarget().removeListener("networkChanged",e)}};async function hb(e,t){const r=[];return XS.filter(i=>!t||t===i).forEach(i=>{switch(i){case"ETH":r.push(new fa(e));break;case"BITCOIN":r.push(new Br(e),new db(e));break;case"ROOCH":r.push(new fa(e),new Br(e));break}}),(await Promise.all(r.map(async i=>{if(await i.checkInstalled())return i.installed=!0,i}))).filter(i=>i!==void 0)}var pb="rooch-sdk-kit:wallet-connect-info",kf=L.createContext(null);function yb({chain:e="BITCOIN",storage:t,storageKey:r=pb,autoConnect:n=!1,children:i,fallback:o}){const[s,a]=L.useState(),[l,u]=L.useState(!0),h=L.useRef(),y=Af();return L.useEffect(()=>{hb(y).then(x=>a(x))},[e,y]),L.useEffect(()=>{s&&s.length!==0&&(h.current=JS({chain:e,wallets:s,currentWallet:s.find(x=>x.getChain()===e)??new Br(y),autoConnectEnabled:n,storage:t??sessionStorage,storageKey:r}),u(!1))},[y,s,n,r,t,e]),l?o||null:N2.jsx(kf.Provider,{value:h.current,children:N2.jsx(vb,{children:i})})}function vb({children:e}){ZS();const t=$3(l=>l.connectionStatus),r=$3(l=>l.currentWallet),n=$3(l=>l.setWalletDisconnected),i=$3(l=>l.setConnectionStatus),o=$3(l=>l.setAccountSwitched),s=$3(l=>l.currentAccount),a=async l=>{if(l.length===0)n();else{i("connecting");const u=l[0];u.address!==(s==null?void 0:s.address)&&o(u)}};return L.useEffect(()=>(t==="connected"&&r.onAccountsChanged(a),()=>{t==="connected"&&r.removeAccountsChanged(a)}),[a,t,r]),e}var Pf={exports:{}};/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/(function(e){(function(){var t={}.hasOwnProperty;function r(){for(var n=[],i=0;i<arguments.length;i++){var o=arguments[i];if(o){var s=typeof o;if(s==="string"||s==="number")n.push(o);else if(Array.isArray(o)){if(o.length){var a=r.apply(null,o);a&&n.push(a)}}else if(s==="object"){if(o.toString!==Object.prototype.toString&&!o.toString.toString().includes("[native code]")){n.push(o.toString());continue}for(var l in o)t.call(o,l)&&o[l]&&n.push(l)}}}return n.join(" ")}e.exports?(r.default=r,e.exports=r):window.classNames=r})()})(Pf);var gb=Pf.exports;const di=m7(gb);function v7(){return v7=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},v7.apply(this,arguments)}function mb(e,t){typeof e=="function"?e(t):e!=null&&(e.current=t)}function xb(...e){return t=>e.forEach(r=>mb(r,t))}function Of(e,t=[]){let r=[];function n(o,s){const a=L.createContext(s),l=r.length;r=[...r,s];function u(y){const{scope:x,children:b,...C}=y,T=(x==null?void 0:x[e][l])||a,k=L.useMemo(()=>C,Object.values(C));return L.createElement(T.Provider,{value:k},b)}function h(y,x){const b=(x==null?void 0:x[e][l])||a,C=L.useContext(b);if(C)return C;if(s!==void 0)return s;throw new Error(`\`${y}\` must be used within \`${o}\``)}return u.displayName=o+"Provider",[u,h]}const i=()=>{const o=r.map(s=>L.createContext(s));return function(a){const l=(a==null?void 0:a[e])||o;return L.useMemo(()=>({[`__scope${e}`]:{...a,[e]:l}}),[a,l])}};return i.scopeName=e,[n,wb(i,...t)]}function wb(...e){const t=e[0];if(e.length===1)return t;const r=()=>{const n=e.map(i=>({useScope:i(),scopeName:i.scopeName}));return function(o){const s=n.reduce((a,{useScope:l,scopeName:u})=>{const y=l(o)[`__scope${u}`];return{...a,...y}},{});return L.useMemo(()=>({[`__scope${t.scopeName}`]:s}),[s])}};return r.scopeName=t.scopeName,r}const hi=L.forwardRef((e,t)=>{const{children:r,...n}=e,i=L.Children.toArray(r),o=i.find(Eb);if(o){const s=o.props.children,a=i.map(l=>l===o?L.Children.count(s)>1?L.Children.only(null):L.isValidElement(s)?s.props.children:null:l);return L.createElement(Tr,v7({},n,{ref:t}),L.isValidElement(s)?L.cloneElement(s,void 0,a):null)}return L.createElement(Tr,v7({},n,{ref:t}),r)});hi.displayName="Slot";const Tr=L.forwardRef((e,t)=>{const{children:r,...n}=e;return L.isValidElement(r)?L.cloneElement(r,{...Sb(n,r.props),ref:t?xb(t,r.ref):r.ref}):L.Children.count(r)>1?L.Children.only(null):null});Tr.displayName="SlotClone";const _b=({children:e})=>L.createElement(L.Fragment,null,e);function Eb(e){return L.isValidElement(e)&&e.type===_b}function Sb(e,t){const r={...t};for(const n in t){const i=e[n],o=t[n];/^on[A-Z]/.test(n)?i&&o?r[n]=(...a)=>{o(...a),i(...a)}:i&&(r[n]=i):n==="style"?r[n]={...i,...o}:n==="className"&&(r[n]=[i,o].filter(Boolean).join(" "))}return{...e,...r}}const Df="Popper",[Uf,Nf]=Of(Df);Uf(Df);const bb="PopperContent";Uf(bb);const[Se,uC]=Of("Tooltip",[Nf]);Nf();const Cb="TooltipProvider",Ab=700,[Bb,lC]=Se(Cb),Tb=e=>{const{__scopeTooltip:t,delayDuration:r=Ab,skipDelayDuration:n=300,disableHoverableContent:i=!1,children:o}=e,[s,a]=L.useState(!0),l=L.useRef(!1),u=L.useRef(0);return L.useEffect(()=>{const h=u.current;return()=>window.clearTimeout(h)},[]),L.createElement(Bb,{scope:t,isOpenDelayed:s,delayDuration:r,onOpen:L.useCallback(()=>{window.clearTimeout(u.current),a(!1)},[]),onClose:L.useCallback(()=>{window.clearTimeout(u.current),u.current=window.setTimeout(()=>a(!0),n)},[n]),isPointerInTransitRef:l,onPointerInTransitChange:L.useCallback(h=>{l.current=h},[]),disableHoverableContent:i},o)},$f="Tooltip";Se($f);const Ib="TooltipPortal";Se(Ib,{forceMount:void 0});Se($f,{isInside:!1});const Fb=Tb,Rb=L.createContext(void 0),kb=e=>{const{dir:t,children:r}=e;return L.createElement(Rb.Provider,{value:t},r)},Pb=["tomato","red","ruby","crimson","pink","plum","purple","violet","iris","indigo","blue","cyan","teal","jade","green","grass","brown","orange"],Ob=["sky","mint","lime","yellow","amber"],Db=["gold","bronze"],Ub=[...Pb,...Ob,...Db],Nb="gray",$b=["mauve","slate","sage","olive","sand"],Lb=[Nb,...$b];function Mb(e){switch(e){case"tomato":case"red":case"ruby":case"crimson":case"pink":case"plum":case"purple":case"violet":return"mauve";case"iris":case"indigo":case"blue":case"sky":case"cyan":return"slate";case"teal":case"jade":case"mint":case"green":return"sage";case"grass":case"lime":return"olive";case"yellow":case"amber":case"orange":case"brown":case"gold":case"bronze":return"sand"}}const zb=["inherit","light","dark"],jb=[...Ub,"gray"],Hb=[...Lb,"auto"],qb=["solid","translucent"],Wb=["none","small","medium","large","full"],Vb=["90%","95%","100%","105%","110%"],t0={hasBackground:{type:"boolean",default:!0},appearance:{type:"enum",values:zb,default:"inherit"},accentColor:{type:"enum",values:jb,default:"indigo"},grayColor:{type:"enum",values:Hb,default:"auto"},panelBackground:{type:"enum",values:qb,default:"translucent"},radius:{type:"enum",values:Wb,default:"medium"},scaling:{type:"enum",values:Vb,default:"100%"}};function Lf(e){return e==="gray"?"gray":Mb(e)}const f1=()=>{},Ir=L.createContext(void 0),Mf=L.forwardRef((e,t)=>L.useContext(Ir)===void 0?L.createElement(Fb,null,L.createElement(kb,{dir:"ltr"},L.createElement(zf,{...e,ref:t}))):L.createElement(pi,{...e,ref:t}));Mf.displayName="Theme";const zf=L.forwardRef((e,t)=>{const{appearance:r=t0.appearance.default,accentColor:n=t0.accentColor.default,grayColor:i=t0.grayColor.default,panelBackground:o=t0.panelBackground.default,radius:s=t0.radius.default,scaling:a=t0.scaling.default,hasBackground:l=t0.hasBackground.default,...u}=e,[h,y]=L.useState(r);L.useEffect(()=>y(r),[r]);const[x,b]=L.useState(n);L.useEffect(()=>b(n),[n]);const[C,T]=L.useState(i);L.useEffect(()=>T(i),[i]);const[k,S]=L.useState(o);L.useEffect(()=>S(o),[o]);const[E,A]=L.useState(s);L.useEffect(()=>A(s),[s]);const[N,H]=L.useState(a);L.useEffect(()=>H(a),[a]);const W=L.memo(({appearance:V})=>L.createElement("script",{dangerouslySetInnerHTML:{__html:`!(function(){try{var d=document.documentElement,c=d.classList;c.remove('light','dark');d.style.colorScheme='${V}';c.add('${V}');}catch(e){}})();`}}),()=>!0);W.displayName="ExplicitRootAppearanceScript",L.useEffect(()=>Kb(r),[r]);const Q=C==="auto"?Lf(x):C;return L.createElement(L.Fragment,null,h!=="inherit"&&L.createElement(W,{appearance:h}),l&&L.createElement("style",{dangerouslySetInnerHTML:{__html:`
:root, .light, .light-theme { --color-page-background: white; }
.dark, .dark-theme { --color-page-background: var(--${Q}-1); }
body { background-color: var(--color-page-background); }
`}}),L.createElement(pi,{...u,ref:t,isRoot:!0,hasBackground:l,appearance:h,accentColor:x,grayColor:C,panelBackground:k,radius:E,scaling:N,onAppearanceChange:y,onAccentColorChange:b,onGrayColorChange:T,onPanelBackgroundChange:S,onRadiusChange:A,onScalingChange:H}))});zf.displayName="ThemeRoot";const pi=L.forwardRef((e,t)=>{var r,n,i,o,s,a;const l=L.useContext(Ir),{asChild:u,isRoot:h,hasBackground:y,appearance:x=(r=l==null?void 0:l.appearance)!==null&&r!==void 0?r:t0.appearance.default,accentColor:b=(n=l==null?void 0:l.accentColor)!==null&&n!==void 0?n:t0.accentColor.default,grayColor:C=(i=l==null?void 0:l.resolvedGrayColor)!==null&&i!==void 0?i:t0.grayColor.default,panelBackground:T=(o=l==null?void 0:l.panelBackground)!==null&&o!==void 0?o:t0.panelBackground.default,radius:k=(s=l==null?void 0:l.radius)!==null&&s!==void 0?s:t0.radius.default,scaling:S=(a=l==null?void 0:l.scaling)!==null&&a!==void 0?a:t0.scaling.default,onAppearanceChange:E=f1,onAccentColorChange:A=f1,onGrayColorChange:N=f1,onPanelBackgroundChange:H=f1,onRadiusChange:W=f1,onScalingChange:Q=f1,...V}=e,y2=u?hi:"div",h2=C==="auto"?Lf(b):C,a3=e.appearance!==void 0&&e.appearance!=="inherit",k3=e.grayColor!==void 0,z3=!h&&(y===!0||y!==!1&&(a3||k3));return L.createElement(Ir.Provider,{value:L.useMemo(()=>({appearance:x,accentColor:b,grayColor:C,resolvedGrayColor:h2,panelBackground:T,radius:k,scaling:S,onAppearanceChange:E,onAccentColorChange:A,onGrayColorChange:N,onPanelBackgroundChange:H,onRadiusChange:W,onScalingChange:Q}),[x,b,C,h2,T,k,S,E,A,N,H,W,Q])},L.createElement(y2,{"data-is-root-theme":h?"true":"false","data-accent-color":b,"data-gray-color":h2,"data-has-background":z3?"true":"false","data-panel-background":T,"data-radius":k,"data-scaling":S,ref:t,...V,className:di("radix-themes",{light:!h&&x==="light",dark:!h&&x==="dark"},V.className)}))});pi.displayName="ThemeImpl";function Kb(e){if(e==="inherit")return;const t=document.documentElement;(t.classList.contains("light-theme")||t.classList.contains("dark-theme"))&&(t.classList.remove("light-theme","dark-theme"),t.style.colorScheme=e,t.classList.add(`${e}-theme`)),(t.classList.contains("light")||t.classList.contains("dark"))&&(t.classList.remove("light","dark"),t.style.colorScheme=e,t.classList.add(e))}const Gb={type:"enum",values:t0.accentColor.values,default:void 0},Qb={type:"boolean",default:void 0};function H4(e,t="",r){var n,i,o,s;const a=[];if(typeof e=="object"){for(const l of Object.keys(e))if(l in e){const u=(n=e[l])===null||n===void 0?void 0:n.toString(),h=u==null?void 0:u.startsWith("-"),y=t===""?"":"-",x=h?`-${t}`:t,b=h?u==null?void 0:u.substring(1):u;if(b===void 0)continue;const C=(i=r==null?void 0:r[b])!==null&&i!==void 0?i:b,T=l==="initial"?`${x}${y}${C}`:`${l}:${x}${y}${C}`;a.push(T)}}if(typeof e=="string"){const l=e.startsWith("-"),u=t===""?"":"-",h=l?`-${t}`:t,y=l?e.substring(1):e,x=(o=r==null?void 0:r[y])!==null&&o!==void 0?o:y;a.push(`${h}${u}${x}`)}if(typeof e=="boolean"){const l=t===""?"":"-",u=e.toString(),h=(s=r==null?void 0:r[u])!==null&&s!==void 0?s:u;a.push(`${t}${l}${h}`)}return a.join(" ")}const F5=["auto","0","1","2","3","4","5","6","7","8","9","-1","-2","-3","-4","-5","-6","-7","-8","-9"],R5={m:{type:"enum",values:F5,default:void 0,responsive:!0},mx:{type:"enum",values:F5,default:void 0,responsive:!0},my:{type:"enum",values:F5,default:void 0,responsive:!0},mt:{type:"enum",values:F5,default:void 0,responsive:!0},mr:{type:"enum",values:F5,default:void 0,responsive:!0},mb:{type:"enum",values:F5,default:void 0,responsive:!0},ml:{type:"enum",values:F5,default:void 0,responsive:!0}};function Yb(e){const{m:t=R5.m.default,mx:r=R5.mx.default,my:n=R5.my.default,mt:i=R5.mt.default,mr:o=R5.mr.default,mb:s=R5.mb.default,ml:a=R5.ml.default,...l}=e;return{m:t,mx:r,my:n,mt:i,mr:o,mb:s,ml:a,rest:l}}function Jb(e){return[H4(e.m,"rt-r-m"),H4(e.mx,"rt-r-mx"),H4(e.my,"rt-r-my"),H4(e.mt,"rt-r-mt"),H4(e.mr,"rt-r-mr"),H4(e.mb,"rt-r-mb"),H4(e.ml,"rt-r-ml")].filter(Boolean).join(" ")}const Xb={type:"enum",values:t0.radius.values,default:void 0},Zb=["1","2","3","4"],eC=["classic","solid","soft","surface","outline","ghost"],U6={size:{type:"enum",values:Zb,default:"2",responsive:!0},variant:{type:"enum",values:eC,default:"solid"},color:Gb,highContrast:Qb,radius:Xb},jf=L.forwardRef((e,t)=>{const{rest:r,...n}=Yb(e),{className:i,asChild:o=!1,size:s=U6.size.default,variant:a=U6.variant.default,color:l=U6.color.default,highContrast:u=U6.highContrast.default,radius:h=U6.radius.default,...y}=r,x=o?hi:"button";return L.createElement(x,{"data-disabled":y.disabled||void 0,"data-accent-color":l,"data-radius":h,...y,ref:t,className:di("rt-reset","rt-BaseButton",i,H4(s,"rt-r-size"),`rt-variant-${a}`,{"rt-high-contrast":u},Jb(n))})});jf.displayName="BaseButton";const Fr=L.forwardRef((e,t)=>L.createElement(jf,{...e,ref:t,className:di("rt-Button",e.className)}));Fr.displayName="Button";function tC(){var u;const e=$3(h=>h.currentAccount),t=$3(h=>h.connectionStatus),r=nb(),{mutateAsync:n}=_f(),o=Ef().filter(h=>h.installed===!0),[s,a]=L.useState("");return L.useEffect(()=>{async function h(){try{const y=r==null?void 0:r.getAddress();a(y||"")}catch(y){console.error("Failed to fetch Rooch address:",y)}}h()},[r]),N2.jsxs("div",{className:"App",children:[N2.jsx("p",{children:" Wallet Demo"}),t==="connected"?N2.jsxs("div",{style:{display:"flex",flexDirection:"column",alignItems:"center"},children:[N2.jsxs("div",{title:"Basic Info",style:{width:300,margin:10},children:[N2.jsxs("div",{style:{textAlign:"left",marginTop:10},children:[N2.jsx("div",{style:{fontWeight:"bold"},children:"Address:"}),N2.jsx("div",{style:{wordWrap:"break-word"},children:e==null?void 0:e.address})]}),N2.jsxs("div",{style:{textAlign:"left",marginTop:10},children:[N2.jsx("div",{style:{fontWeight:"bold"},children:"PublicKey:"}),N2.jsx("div",{style:{wordWrap:"break-word"},children:e==null?void 0:e.publicKey})]}),N2.jsxs("div",{style:{textAlign:"left",marginTop:10},children:[N2.jsx("div",{style:{fontWeight:"bold"},children:"Compressed PublicKey:"}),N2.jsx("div",{style:{wordWrap:"break-word"},children:e==null?void 0:e.compressedPublicKey})]}),N2.jsxs("div",{style:{textAlign:"left",marginTop:10},children:[N2.jsx("div",{style:{fontWeight:"bold"},children:"mul address:"}),N2.jsx("div",{style:{wordWrap:"break-word"},children:(u=e==null?void 0:e.toMultiChainAddress())==null?void 0:u.toBech32()})]}),N2.jsxs("div",{style:{textAlign:"left",marginTop:10},children:[N2.jsx("div",{style:{fontWeight:"bold"},children:"Session Account Address:"}),N2.jsx("div",{style:{wordWrap:"break-word"},children:s})]})]}),N2.jsx(l,{})]}):N2.jsx("div",{children:o.length===0?"Please install the wallet and try again":t!=="disconnected"?t:N2.jsx(Fr,{style:{marginTop:10},onClick:async()=>{await n({wallet:o[0]})},children:"Connect Wallet"})})]});function l(){const{mutate:h}=rb();return N2.jsx("div",{title:"creating session key",style:{width:300,margin:10},children:N2.jsx(Fr,{style:{marginTop:10},onClick:async()=>{h({},{onSuccess:y=>{console.log("session key",y)}})},children:"create session key"})})}}const rC=new QE;pt.createRoot(document.getElementById("root")).render(N2.jsx(Ra.StrictMode,{children:N2.jsx(Mf,{appearance:"dark",children:N2.jsx(eS,{client:rC,children:N2.jsx(YS,{network:Tn,children:N2.jsx(yb,{chain:Cf.BITCOIN,autoConnect:!0,children:N2.jsx(tC,{})})})})})}));
