{
  "openrpc": "1.2.6",
  "info": {
    "title": "Rooch JSON-RPC",
    "description": "Rooch JSON-RPC API for interaction with rooch server. ",
    "contact": {
      "name": "Rooch Network",
      "url": "https://rooch.network",
      "email": "opensource@rooch.network"
    },
    "license": {
      "name": "Apache-2.0",
      "url": "https://raw.githubusercontent.com/rooch-network/rooch/main/LICENSE"
    },
    "version": "0.1.0"
  },
  "methods": [
    {
      "name": "rooch_executeRawTransaction",
      "description": "Send the signed transaction in bcs hex format This method blocks waiting for the transaction to be executed.",
      "params": [
        {
          "name": "tx_bcs_hex",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/alloc::vec::Vec<u8>"
          }
        }
      ],
      "result": {
        "name": "ExecuteTransactionResponseView",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/ExecuteTransactionResponseView"
        }
      }
    },
    {
      "name": "rooch_executeViewFunction",
      "description": "Execute a read-only function call The function do not change the state of Application",
      "params": [
        {
          "name": "function_call",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/FunctionCallView"
          }
        }
      ],
      "result": {
        "name": "AnnotatedFunctionResultView",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/AnnotatedFunctionResultView"
        }
      }
    },
    {
      "name": "rooch_getAnnotatedStates",
      "description": "Get the annotated states by access_path The annotated states include the decoded move value of the state",
      "params": [
        {
          "name": "access_path",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/moveos_types::access_path::AccessPath"
          }
        }
      ],
      "result": {
        "name": "Vec<Option<AnnotatedStateView>>",
        "required": true,
        "schema": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AnnotatedStateView"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    },
    {
      "name": "rooch_getBalances",
      "description": "get account balances by AccountAddress",
      "params": [
        {
          "name": "account_addr",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/move_core_types::account_address::AccountAddress"
          }
        },
        {
          "name": "coin_type",
          "schema": {
            "$ref": "#/components/schemas/move_core_types::language_storage::StructTag"
          }
        },
        {
          "name": "cursor",
          "schema": {
            "$ref": "#/components/schemas/alloc::vec::Vec<u8>"
          }
        },
        {
          "name": "limit",
          "schema": {
            "type": "integer",
            "format": "uint",
            "minimum": 0.0
          }
        }
      ],
      "result": {
        "name": "ListBalanceInfoPageView",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/PageView_for_Nullable_BalanceInfoView_and_alloc::vec::Vec<u8>"
        }
      }
    },
    {
      "name": "rooch_getChainID",
      "params": [],
      "result": {
        "name": "StrView<u64>",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/u64"
        }
      }
    },
    {
      "name": "rooch_getEventsByEventHandle",
      "description": "Get the events by event handle id",
      "params": [
        {
          "name": "event_handle_type",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/move_core_types::language_storage::StructTag"
          }
        },
        {
          "name": "cursor",
          "schema": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        },
        {
          "name": "limit",
          "schema": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        }
      ],
      "result": {
        "name": "EventPageView",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/PageView_for_Nullable_AnnotatedEventView_and_uint64"
        }
      }
    },
    {
      "name": "rooch_getStates",
      "description": "Get the states by access_path",
      "params": [
        {
          "name": "access_path",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/moveos_types::access_path::AccessPath"
          }
        }
      ],
      "result": {
        "name": "Vec<Option<StateView>>",
        "required": true,
        "schema": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StateView"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    },
    {
      "name": "rooch_getTransactionsByHash",
      "params": [
        {
          "name": "tx_hashes",
          "required": true,
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/H256View"
            }
          }
        }
      ],
      "result": {
        "name": "Vec<Option<TransactionView>>",
        "required": true,
        "schema": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TransactionView"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    },
    {
      "name": "rooch_getTransactionsByOrder",
      "params": [
        {
          "name": "cursor",
          "schema": {
            "type": "integer",
            "format": "uint128",
            "minimum": 0.0
          }
        },
        {
          "name": "limit",
          "schema": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        }
      ],
      "result": {
        "name": "TransactionResultPageView",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/PageView_for_TransactionResultView_and_uint128"
        }
      }
    },
    {
      "name": "rooch_listAnnotatedStates",
      "description": "List the annotated states by access_path The annotated states include the decoded move value of the state",
      "params": [
        {
          "name": "access_path",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/moveos_types::access_path::AccessPath"
          }
        },
        {
          "name": "cursor",
          "schema": {
            "$ref": "#/components/schemas/alloc::vec::Vec<u8>"
          }
        },
        {
          "name": "limit",
          "schema": {
            "type": "integer",
            "format": "uint",
            "minimum": 0.0
          }
        }
      ],
      "result": {
        "name": "ListAnnotatedStatesPageView",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/PageView_for_Nullable_AnnotatedStateView_and_alloc::vec::Vec<u8>"
        }
      }
    },
    {
      "name": "rooch_listStates",
      "description": "List the states by access_path",
      "params": [
        {
          "name": "access_path",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/moveos_types::access_path::AccessPath"
          }
        },
        {
          "name": "cursor",
          "schema": {
            "$ref": "#/components/schemas/alloc::vec::Vec<u8>"
          }
        },
        {
          "name": "limit",
          "schema": {
            "type": "integer",
            "format": "uint",
            "minimum": 0.0
          }
        }
      ],
      "result": {
        "name": "ListStatesPageView",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/PageView_for_Nullable_StateView_and_alloc::vec::Vec<u8>"
        }
      }
    },
    {
      "name": "rooch_sendRawTransaction",
      "description": "Send the signed transaction in bcs hex format This method does not block waiting for the transaction to be executed.",
      "params": [
        {
          "name": "tx_bcs_hex",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/alloc::vec::Vec<u8>"
          }
        }
      ],
      "result": {
        "name": "H256View",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/H256View"
        }
      }
    }
  ],
  "components": {
    "schemas": {
      "AnnotatedEventView": {
        "type": "object",
        "required": [
          "event",
          "parsed_event_data",
          "sender"
        ],
        "properties": {
          "event": {
            "$ref": "#/components/schemas/EventView"
          },
          "parsed_event_data": {
            "$ref": "#/components/schemas/AnnotatedMoveStructView"
          },
          "sender": {
            "$ref": "#/components/schemas/move_core_types::account_address::AccountAddress"
          },
          "timestamp_ms": {
            "type": [
              "integer",
              "null"
            ],
            "format": "uint64",
            "minimum": 0.0
          },
          "tx_hash": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/H256View"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "AnnotatedFunctionResultView": {
        "type": "object",
        "required": [
          "vm_status"
        ],
        "properties": {
          "return_values": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/AnnotatedFunctionReturnValueView"
            }
          },
          "vm_status": {
            "$ref": "#/components/schemas/VMStatusView"
          }
        }
      },
      "AnnotatedFunctionReturnValueView": {
        "type": "object",
        "required": [
          "move_value",
          "value"
        ],
        "properties": {
          "move_value": {
            "$ref": "#/components/schemas/AnnotatedMoveValueView"
          },
          "value": {
            "$ref": "#/components/schemas/FunctionReturnValueView"
          }
        }
      },
      "AnnotatedMoveStructView": {
        "type": "object",
        "required": [
          "abilities",
          "type",
          "value"
        ],
        "properties": {
          "abilities": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0.0
          },
          "type": {
            "$ref": "#/components/schemas/move_core_types::language_storage::StructTag"
          },
          "value": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/AnnotatedMoveValueView"
            }
          }
        }
      },
      "AnnotatedMoveValueView": {
        "anyOf": [
          {
            "type": "integer",
            "format": "uint8",
            "minimum": 0.0
          },
          {
            "description": "u64, u128, U256 is too large to be serialized in json so we use string to represent them",
            "allOf": [
              {
                "$ref": "#/components/schemas/u64"
              }
            ]
          },
          {
            "$ref": "#/components/schemas/u128"
          },
          {
            "type": "boolean"
          },
          {
            "$ref": "#/components/schemas/move_core_types::account_address::AccountAddress"
          },
          {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnnotatedMoveValueView"
            }
          },
          {
            "$ref": "#/components/schemas/alloc::vec::Vec<u8>"
          },
          {
            "$ref": "#/components/schemas/AnnotatedMoveStructView"
          },
          {
            "$ref": "#/components/schemas/SpecificStructView"
          },
          {
            "type": "integer",
            "format": "uint16",
            "minimum": 0.0
          },
          {
            "type": "integer",
            "format": "uint32",
            "minimum": 0.0
          },
          {
            "$ref": "#/components/schemas/move_core_types::u256::U256"
          }
        ]
      },
      "AnnotatedStateView": {
        "type": "object",
        "required": [
          "move_value",
          "state"
        ],
        "properties": {
          "move_value": {
            "$ref": "#/components/schemas/AnnotatedMoveValueView"
          },
          "state": {
            "$ref": "#/components/schemas/StateView"
          }
        }
      },
      "AuthenticatorView": {
        "type": "object",
        "required": [
          "auth_validator_id",
          "payload"
        ],
        "properties": {
          "auth_validator_id": {
            "$ref": "#/components/schemas/u64"
          },
          "payload": {
            "$ref": "#/components/schemas/alloc::vec::Vec<u8>"
          }
        }
      },
      "BalanceInfoView": {
        "type": "object",
        "required": [
          "balance",
          "coin_type",
          "decimals",
          "symbol"
        ],
        "properties": {
          "balance": {
            "$ref": "#/components/schemas/move_core_types::u256::U256"
          },
          "coin_type": {
            "$ref": "#/components/schemas/move_core_types::language_storage::StructTag"
          },
          "decimals": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0.0
          },
          "symbol": {
            "type": "string"
          }
        }
      },
      "EventID": {
        "description": "A struct that represents a globally unique id for an Event stream that a user can listen to. the Unique ID is a combination of event handle id and event seq number. the ID is local to this particular fullnode and will be different from other fullnode.",
        "type": "object",
        "required": [
          "event_handle_id",
          "event_seq"
        ],
        "properties": {
          "event_handle_id": {
            "description": "each event handle corresponds to a unique event handle id. event handler id equal to guid.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ObjectID"
              }
            ]
          },
          "event_seq": {
            "description": "For expansion: The number of messages that have been emitted to the path previously",
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        }
      },
      "EventView": {
        "type": "object",
        "required": [
          "event_data",
          "event_id",
          "event_index",
          "type_tag"
        ],
        "properties": {
          "event_data": {
            "$ref": "#/components/schemas/alloc::vec::Vec<u8>"
          },
          "event_id": {
            "$ref": "#/components/schemas/EventID"
          },
          "event_index": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "type_tag": {
            "$ref": "#/components/schemas/move_core_types::language_storage::TypeTag"
          }
        }
      },
      "ExecuteTransactionResponseView": {
        "type": "object",
        "required": [
          "execution_info",
          "output",
          "sequence_info"
        ],
        "properties": {
          "execution_info": {
            "$ref": "#/components/schemas/TransactionExecutionInfoView"
          },
          "output": {
            "$ref": "#/components/schemas/TransactionOutputView"
          },
          "sequence_info": {
            "$ref": "#/components/schemas/TransactionSequenceInfoView"
          }
        }
      },
      "FunctionCallView": {
        "type": "object",
        "required": [
          "args",
          "function_id",
          "ty_args"
        ],
        "properties": {
          "args": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/alloc::vec::Vec<u8>"
            }
          },
          "function_id": {
            "$ref": "#/components/schemas/moveos_types::move_types::FunctionId"
          },
          "ty_args": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/move_core_types::language_storage::TypeTag"
            }
          }
        }
      },
      "FunctionReturnValueView": {
        "type": "object",
        "required": [
          "type_tag",
          "value"
        ],
        "properties": {
          "type_tag": {
            "$ref": "#/components/schemas/move_core_types::language_storage::TypeTag"
          },
          "value": {
            "$ref": "#/components/schemas/alloc::vec::Vec<u8>"
          }
        }
      },
      "H256View": {
        "$ref": "#/components/schemas/Hex"
      },
      "Hex": {
        "description": "Hex string encoding.",
        "type": "string"
      },
      "KeptVMStatusView": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "executed"
                ]
              }
            }
          },
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "outofgas"
                ]
              }
            }
          },
          {
            "type": "object",
            "required": [
              "abort_code",
              "location",
              "type"
            ],
            "properties": {
              "abort_code": {
                "$ref": "#/components/schemas/u64"
              },
              "location": {
                "$ref": "#/components/schemas/move_core_types::vm_status::AbortLocation"
              },
              "type": {
                "type": "string",
                "enum": [
                  "moveabort"
                ]
              }
            }
          },
          {
            "type": "object",
            "required": [
              "code_offset",
              "function",
              "location",
              "type"
            ],
            "properties": {
              "code_offset": {
                "type": "integer",
                "format": "uint16",
                "minimum": 0.0
              },
              "function": {
                "type": "integer",
                "format": "uint16",
                "minimum": 0.0
              },
              "location": {
                "$ref": "#/components/schemas/move_core_types::vm_status::AbortLocation"
              },
              "type": {
                "type": "string",
                "enum": [
                  "executionfailure"
                ]
              }
            }
          },
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "miscellaneouserror"
                ]
              }
            }
          }
        ]
      },
      "MoveActionTypeView": {
        "type": "string",
        "enum": [
          "scriptcall",
          "functioncall",
          "modulebundle"
        ]
      },
      "MoveActionView": {
        "type": "object",
        "properties": {
          "function_call": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FunctionCallView"
              },
              {
                "type": "null"
              }
            ]
          },
          "module_bundle": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/alloc::vec::Vec<u8>"
            }
          },
          "script_call": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ScriptCallView"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "MoveAsciiString": {
        "type": "object",
        "required": [
          "bytes"
        ],
        "properties": {
          "bytes": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            }
          }
        }
      },
      "MoveString": {
        "type": "object",
        "required": [
          "bytes"
        ],
        "properties": {
          "bytes": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            }
          }
        }
      },
      "ObjectID": {
        "$ref": "#/components/schemas/Hex"
      },
      "OpView_for_StateView": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "type",
              "value",
              "value_type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "new"
                ]
              },
              "value": {
                "$ref": "#/components/schemas/alloc::vec::Vec<u8>"
              },
              "value_type": {
                "$ref": "#/components/schemas/move_core_types::language_storage::TypeTag"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "type",
              "value",
              "value_type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "modify"
                ]
              },
              "value": {
                "$ref": "#/components/schemas/alloc::vec::Vec<u8>"
              },
              "value_type": {
                "$ref": "#/components/schemas/move_core_types::language_storage::TypeTag"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "delete"
                ]
              }
            }
          }
        ]
      },
      "PageView_for_Nullable_AnnotatedEventView_and_uint64": {
        "description": "`next_cursor` points to the last item in the page; Reading with `next_cursor` will start from the next item after `next_cursor` if `next_cursor` is `Some`, otherwise it will start from the first item.",
        "type": "object",
        "required": [
          "data",
          "has_next_page"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/AnnotatedEventView"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "has_next_page": {
            "type": "boolean"
          },
          "next_cursor": {
            "type": [
              "integer",
              "null"
            ],
            "format": "uint64",
            "minimum": 0.0
          }
        }
      },
      "PageView_for_Nullable_AnnotatedStateView_and_alloc::vec::Vec<u8>": {
        "description": "`next_cursor` points to the last item in the page; Reading with `next_cursor` will start from the next item after `next_cursor` if `next_cursor` is `Some`, otherwise it will start from the first item.",
        "type": "object",
        "required": [
          "data",
          "has_next_page"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/AnnotatedStateView"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "has_next_page": {
            "type": "boolean"
          },
          "next_cursor": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/alloc::vec::Vec<u8>"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "PageView_for_Nullable_BalanceInfoView_and_alloc::vec::Vec<u8>": {
        "description": "`next_cursor` points to the last item in the page; Reading with `next_cursor` will start from the next item after `next_cursor` if `next_cursor` is `Some`, otherwise it will start from the first item.",
        "type": "object",
        "required": [
          "data",
          "has_next_page"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/BalanceInfoView"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "has_next_page": {
            "type": "boolean"
          },
          "next_cursor": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/alloc::vec::Vec<u8>"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "PageView_for_Nullable_StateView_and_alloc::vec::Vec<u8>": {
        "description": "`next_cursor` points to the last item in the page; Reading with `next_cursor` will start from the next item after `next_cursor` if `next_cursor` is `Some`, otherwise it will start from the first item.",
        "type": "object",
        "required": [
          "data",
          "has_next_page"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/StateView"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "has_next_page": {
            "type": "boolean"
          },
          "next_cursor": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/alloc::vec::Vec<u8>"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "PageView_for_TransactionResultView_and_uint128": {
        "description": "`next_cursor` points to the last item in the page; Reading with `next_cursor` will start from the next item after `next_cursor` if `next_cursor` is `Some`, otherwise it will start from the first item.",
        "type": "object",
        "required": [
          "data",
          "has_next_page"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionResultView"
            }
          },
          "has_next_page": {
            "type": "boolean"
          },
          "next_cursor": {
            "type": [
              "integer",
              "null"
            ],
            "format": "uint128",
            "minimum": 0.0
          }
        }
      },
      "ScriptCallView": {
        "type": "object",
        "required": [
          "args",
          "code",
          "ty_args"
        ],
        "properties": {
          "args": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/alloc::vec::Vec<u8>"
            }
          },
          "code": {
            "$ref": "#/components/schemas/alloc::vec::Vec<u8>"
          },
          "ty_args": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/move_core_types::language_storage::TypeTag"
            }
          }
        }
      },
      "SpecificStructView": {
        "description": "Some specific struct that we want to display in a special way for better readability",
        "anyOf": [
          {
            "$ref": "#/components/schemas/MoveString"
          },
          {
            "$ref": "#/components/schemas/MoveAsciiString"
          },
          {
            "$ref": "#/components/schemas/ObjectID"
          }
        ]
      },
      "StateChangeSetView": {
        "type": "object",
        "required": [
          "changes",
          "new_tables",
          "removed_tables"
        ],
        "properties": {
          "changes": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/TableChangeView"
            }
          },
          "new_tables": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/TableTypeInfoView"
            }
          },
          "removed_tables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectID"
            },
            "uniqueItems": true
          }
        }
      },
      "StateView": {
        "type": "object",
        "required": [
          "value",
          "value_type"
        ],
        "properties": {
          "value": {
            "$ref": "#/components/schemas/alloc::vec::Vec<u8>"
          },
          "value_type": {
            "$ref": "#/components/schemas/move_core_types::language_storage::TypeTag"
          }
        }
      },
      "TableChangeView": {
        "type": "object",
        "required": [
          "entries"
        ],
        "properties": {
          "entries": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/OpView_for_StateView"
            }
          }
        }
      },
      "TableTypeInfoView": {
        "type": "object",
        "required": [
          "key_type"
        ],
        "properties": {
          "key_type": {
            "$ref": "#/components/schemas/move_core_types::language_storage::TypeTag"
          }
        }
      },
      "TransactionExecutionInfoView": {
        "type": "object",
        "required": [
          "event_root",
          "gas_used",
          "state_root",
          "status",
          "tx_hash"
        ],
        "properties": {
          "event_root": {
            "$ref": "#/components/schemas/H256View"
          },
          "gas_used": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "state_root": {
            "$ref": "#/components/schemas/H256View"
          },
          "status": {
            "$ref": "#/components/schemas/KeptVMStatusView"
          },
          "tx_hash": {
            "$ref": "#/components/schemas/H256View"
          }
        }
      },
      "TransactionOutputView": {
        "type": "object",
        "required": [
          "events",
          "gas_used",
          "status",
          "table_changeset"
        ],
        "properties": {
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventView"
            }
          },
          "gas_used": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "status": {
            "$ref": "#/components/schemas/KeptVMStatusView"
          },
          "table_changeset": {
            "$ref": "#/components/schemas/StateChangeSetView"
          }
        }
      },
      "TransactionResultView": {
        "type": "object",
        "required": [
          "execution_info",
          "sequence_info",
          "transaction"
        ],
        "properties": {
          "execution_info": {
            "$ref": "#/components/schemas/TransactionExecutionInfoView"
          },
          "sequence_info": {
            "$ref": "#/components/schemas/TransactionSequenceInfoView"
          },
          "transaction": {
            "$ref": "#/components/schemas/TransactionView"
          }
        }
      },
      "TransactionSequenceInfoView": {
        "type": "object",
        "required": [
          "tx_accumulator_root",
          "tx_order",
          "tx_order_signature"
        ],
        "properties": {
          "tx_accumulator_root": {
            "$ref": "#/components/schemas/H256View"
          },
          "tx_order": {
            "$ref": "#/components/schemas/u128"
          },
          "tx_order_signature": {
            "$ref": "#/components/schemas/AuthenticatorView"
          }
        }
      },
      "TransactionTypeView": {
        "type": "string",
        "enum": [
          "rooch",
          "ethereum"
        ]
      },
      "TransactionView": {
        "type": "object",
        "required": [
          "action",
          "action_type",
          "raw",
          "sender",
          "sequence_number",
          "transaction_type"
        ],
        "properties": {
          "action": {
            "$ref": "#/components/schemas/MoveActionView"
          },
          "action_type": {
            "$ref": "#/components/schemas/MoveActionTypeView"
          },
          "raw": {
            "$ref": "#/components/schemas/alloc::vec::Vec<u8>"
          },
          "sender": {
            "type": "string"
          },
          "sequence_number": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "transaction_type": {
            "$ref": "#/components/schemas/TransactionTypeView"
          }
        }
      },
      "VMStatusView": {
        "oneOf": [
          {
            "type": "string",
            "enum": [
              "Executed"
            ]
          },
          {
            "type": "object",
            "required": [
              "MoveAbort"
            ],
            "properties": {
              "MoveAbort": {
                "type": "object",
                "required": [
                  "abort_code",
                  "location"
                ],
                "properties": {
                  "abort_code": {
                    "$ref": "#/components/schemas/u64"
                  },
                  "location": {
                    "$ref": "#/components/schemas/move_core_types::vm_status::AbortLocation"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "ExecutionFailure"
            ],
            "properties": {
              "ExecutionFailure": {
                "type": "object",
                "required": [
                  "code_offset",
                  "function",
                  "location",
                  "status_code"
                ],
                "properties": {
                  "code_offset": {
                    "type": "integer",
                    "format": "uint16",
                    "minimum": 0.0
                  },
                  "function": {
                    "type": "integer",
                    "format": "uint16",
                    "minimum": 0.0
                  },
                  "location": {
                    "$ref": "#/components/schemas/move_core_types::vm_status::AbortLocation"
                  },
                  "status_code": {
                    "$ref": "#/components/schemas/u64"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "Error"
            ],
            "properties": {
              "Error": {
                "$ref": "#/components/schemas/u64"
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "alloc::vec::Vec<u8>": {
        "type": "string"
      },
      "move_core_types::account_address::AccountAddress": {
        "type": "string"
      },
      "move_core_types::language_storage::StructTag": {
        "type": "string"
      },
      "move_core_types::language_storage::TypeTag": {
        "type": "string"
      },
      "move_core_types::u256::U256": {
        "type": "string"
      },
      "move_core_types::vm_status::AbortLocation": {
        "type": "string"
      },
      "moveos_types::access_path::AccessPath": {
        "type": "string"
      },
      "moveos_types::move_types::FunctionId": {
        "type": "string"
      },
      "u128": {
        "type": "string"
      },
      "u64": {
        "type": "string"
      }
    }
  }
}
