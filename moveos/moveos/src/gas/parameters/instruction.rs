// Copyright (c) RoochNetwork
// SPDX-License-Identifier: Apache-2.0
use crate::gas::table::InstructionParameter;

crate::gas::native::define_gas_parameters_for_natives!(InstructionParameter, "instruction", [
    // nop
    [.nop, "nop", 36],
    // control flow
    [.ret, "ret", 220],
    [.abort, "abort", 220],
    [.br_true, "br_true", 441],
    [.br_false, "br_false", 441],
    [.branch, "branch", 294],
    // stack
    [.pop, "pop", 147],
    [.ld_u8, "ld_u8", 220],
    [.ld_u16, "ld_u16", 220],
    [.ld_u32, "ld_u32", 220],
    [.ld_u64, "ld_u64", 220],
    [.ld_u128, "ld_u128", 294],
    [.ld_u256, "ld_u256", 294],
    [.ld_true, "ld_true", 220],
    [.ld_false, "ld_false", 220],
    [.ld_const_base, "ld_const_base", 2389],
    [.ld_const_per_byte, "ld_const_per_byte", 128],
    // borrow
    [.imm_borrow_loc, "imm_borrow_loc", 220],
    [.mut_borrow_loc, "mut_borrow_loc", 220],
    [.imm_borrow_field, "imm_borrow_field", 735],
    [.mut_borrow_field, "mut_borrow_field", 735],
    [.imm_borrow_field_generic, "imm_borrow_field_generic", 735],
    [.mut_borrow_field_generic, "mut_borrow_field_generic", 735],
    // locals
    [.copy_loc_base, "copy_loc_base", 294],
    [.copy_loc_per_abs_val_unit, "copy_loc_per_abs_val_unit", 14],
    [.move_loc_base, "move_loc_base", 441],
    [.st_loc_base, "st_loc_base", 441],
    // call
    [.call_base, "call_base", 3676],
    [.call_per_arg, "call_per_arg", 367],
    [.call_per_local, "call_per_local", 367],
    [.call_generic_base, "call_generic_base", 3676],
    [.call_generic_per_ty_arg, "call_generic_per_ty_arg", 367],
    [.call_generic_per_arg, "call_generic_per_arg", 367],
    [.call_generic_per_local, "call_generic_per_local", 367],
    // struct
    [.pack_base, "pack_base", 808],
    [.pack_per_field, "pack_per_field", 147],
    [.pack_generic_base, "pack_generic_base", 808],
    [.pack_generic_per_field, "pack_generic_per_field", 147],
    [.unpack_base, "unpack_base", 808],
    [.unpack_per_field, "unpack_per_field", 147],
    [.unpack_generic_base, "unpack_generic_base", 808],
    [.unpack_generic_per_field, "unpack_generic_per_field", 147],
    // ref
    [.read_ref_base, "read_ref_base", 735],
    [.read_ref_per_abs_val_unit, "read_ref_per_abs_val_unit", 14],
    [.write_ref_base, "write_ref_base", 735],
    [.freeze_ref, "freeze_ref", 36],
    // casting
    [.cast_u8, "cast_u8", 441],
    [.cast_u16, "cast_u16", 441],
    [.cast_u32, "cast_u32", 441],
    [.cast_u64, "cast_u64", 441],
    [.cast_u128, "cast_u128", 441],
    [.cast_u256, "cast_u256", 441],
    // arithmetic
    [.add, "add", 588],
    [.sub, "sub", 588],
    [.mul, "mul", 588],
    [.mod_, "mod_", 588],
    [.div, "div", 588],
    // bitwise
    [.bit_or, "bit_or", 588],
    [.bit_and, "bit_and", 588],
    [.xor, "xor", 588],
    [.shl, "shl", 588],
    [.shr, "shr", 588],
    // boolean
    [.or, "or", 588],
    [.and, "and", 588],
    [.not, "not", 588],
    // comparison
    [.lt, "lt", 588],
    [.gt, "gt", 588],
    [.le, "le", 588],
    [.ge, "ge", 588],
    [.eq_base, "eq_base", 367],
    [.eq_per_abs_val_unit, "eq_per_abs_val_unit", 14],
    [.neq_base, "neq_base", 367],
    [.neq_per_abs_val_unit, "neq_per_abs_val_unit", 14],
    // global
    [.imm_borrow_global_base, "imm_borrow_global_base", 1838],
    [.imm_borrow_global_generic_base, "imm_borrow_global_generic_base", 1838],
    [.mut_borrow_global_base, "mut_borrow_global_base", 1838],
    [.mut_borrow_global_generic_base, "mut_borrow_global_generic_base", 1838],
    [.exists_base, "exists_base", 919],
    [.exists_generic_base, "exists_generic_base", 919],
    [.move_from_base, "move_from_base", 1286],
    [.move_from_generic_base, "move_from_generic_base", 1286],
    [.move_to_base, "move_to_base", 1838],
    [.move_to_generic_base, "move_to_generic_base", 1838],
    // vec
    [.vec_len_base, "vec_len_base", 808],
    [.vec_imm_borrow_base, "vec_imm_borrow_base", 1213],
    [.vec_mut_borrow_base, "vec_mut_borrow_base", 1213],
    [.vec_push_back_base, "vec_push_back_base", 1396],
    [.vec_pop_back_base, "vec_pop_back_base", 955],
    [.vec_swap_base, "vec_swap_base", 1102],
    [.vec_pack_base, "vec_pack_base", 2205],
    [.vec_pack_per_elem, "vec_pack_per_elem", 147],
    [.vec_unpack_base, "vec_unpack_base", 1838],
    [.vec_unpack_per_expected_elem, "vec_unpack_per_expected_elem", 147],
]);
