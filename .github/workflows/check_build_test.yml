name: Check-Build-Test

on:
  push:
    branches: [ 'main' ]
    paths-ignore:
      - 'docs/**'
      - 'fixtures/**'
      - 'kube/**'
      - '**.md'
      - 'crates/rooch-anomalies/static/**'
  pull_request:
    branches: [ 'main' ]
    paths-ignore:
      - 'docs/**'
      - 'fixtures/**'
      - 'kube/**'
      - '**.md'
      - 'crates/rooch-anomalies/static/**'

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  ENV_TEST_ON_CI: 1
  CARGO_INCREMENTAL: 0

jobs:
  check_build_test:
    name: Check-Build-Test
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Filter Changed Files
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            core:
              - '.cargo/**'
              - '.github/workflows/check_build_test.yml'
              - 'crates/**'
              - 'moveos/**'
              - 'frameworks/**'
              - 'Cargo.toml'
              - 'Cargo.lock'
              - 'rust-toolchain.toml'
              - 'apps/**'
              - 'examples/**'
              - 'generator/**'
              - 'third-party/**'
            sdk_web:
              - 'infra/**'
              - 'sdk/**'
              - '.eslintrc.js'
              - 'package.json'
              - 'pnpm-lock.yaml'
              - 'pnpm-workspace.yaml'
              - 'prettier.config.js'
            scripts:
              - 'scripts/**'

      - name: Setup pnpm Cache
        if: ${{ steps.changes.outputs.core == 'true' || steps.changes.outputs.sdk_web == 'true' }}
        uses: actions/cache@v4
        with:
          path: |
            ~/.pnpm-store
            node_modules
          key: ${{ runner.OS }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.OS }}-pnpm-

      - name: Setup Rust
        if: ${{ steps.changes.outputs.core == 'true' || steps.changes.outputs.sdk_web == 'true' }}
        uses: ./.github/actions/rust-setup
      - name: Build Rust
        if: ${{ steps.changes.outputs.core == 'true' || steps.changes.outputs.sdk_web == 'true' }}
        run: |
          cargo build
      - name: Run Rust Lint
        if: ${{ steps.changes.outputs.core == 'true'}}
        run: ./scripts/pr.sh -c
      - name: Rooch init
        if: ${{ steps.changes.outputs.core == 'true' || steps.changes.outputs.sdk_web == 'true' }}
        run: |
          cargo run --profile optci --package framework-release --bin framework-release 
          cargo run --profile optci --bin rooch init --skip-password
      - name: Run Rust tests
        if: ${{ steps.changes.outputs.core == 'true'}}
        run: ./scripts/pr.sh -t
      - name: Run Move tests
        if: ${{ steps.changes.outputs.core == 'true'}}
        run: ./scripts/pr.sh -m
      - name: Run example tests
        if: ${{ steps.changes.outputs.core == 'true'}}
        run: ./scripts/pr.sh -e
      - name: Generate genesis files for Mainnet and Testnet
        if: ${{ steps.changes.outputs.core == 'true'}}
        run: |
          cargo run --profile optci -p rooch-genesis -- -n main &
          PID_MAIN=$!
          cargo run --profile optci -p rooch-genesis -- -n test &
          PID_TEST=$!
          wait $PID_MAIN
          EXIT_CODE_MAIN=$?
          wait $PID_TEST
          EXIT_CODE_TEST=$?
          if [ $EXIT_CODE_MAIN -ne 0 ]; then
          echo "Error: The mainnet genesis generation failed."
          exit $EXIT_CODE_MAIN
          fi
          if [ $EXIT_CODE_TEST -ne 0 ]; then
          echo "Error: The testnet genesis generation failed."
          exit $EXIT_CODE_TEST
          fi
          echo "Genesis files generated successfully."

      - name: Setup Node.js
        if: ${{ steps.changes.outputs.core == 'true' || steps.changes.outputs.sdk_web == 'true' }}
        uses: actions/setup-node@v2
        with:
          node-version: '20.3.1'
      - name: Run Web and SDK tests
        if: ${{ steps.changes.outputs.core == 'true' || steps.changes.outputs.sdk_web == 'true' }}
        run: |
          # Check Docker
          docker --version
          docker pull lncm/bitcoind:v25.1
          # docker pull bitseed/ord:0.18.0-burn
          # docker pull bitseed/bitseed:0.1.8
          # Setup pnpm and run web/SDK tests
          # . $NVM_DIR/nvm.sh
          # nvm install 20.3.1
          # nvm use 20.3.1
          npm install pnpm@9.4.0 -g
          pnpm install
          # pnpm bitseed-sdk playwright-deps
          # Run web/SDK tasks in parallel
          
          pnpm rooch-sdk lint
          
          pnpm test-suite build &
          PID_TEST_SUITE=$!
          pnpm rooch-sdk build &
          PID_SDK=$!
          pnpm rooch-sdk-kit build &
          PID_SDK_KIT=$!
          # pnpm bitseed-sdk lint
          # pnpm bitseed-sdk build
          
          EXIT_CODE_LINT=$?
          wait $PID_TEST_SUITE
          EXIT_CODE_TEST_SUITE=$?
          wait $PID_SDK
          EXIT_CODE_SDK=$?
          wait $PID_SDK_KIT
          EXIT_CODE_SDK_KIT=$?
          if [ $EXIT_CODE_LINT -ne 0 ]; then
          echo "Error: The linting failed."
          exit $EXIT_CODE_LINT
          fi
          if [ $EXIT_CODE_TEST_SUITE -ne 0 ]; then
          echo "Error: The test suite build failed."
          exit $EXIT_CODE_TEST_SUITE
          fi
          if [ $EXIT_CODE_SDK -ne 0 ]; then
          echo "Error: The SDK build failed."
          exit $EXIT_CODE_SDK
          fi
          if [ $EXIT_CODE_SDK_KIT -ne 0 ]; then
          echo "Error: The SDK kit build failed."
          exit $EXIT_CODE_SDK_KIT
          fi
          echo "Web and SDK tests passed."
          # Run tests
          pnpm rooch-sdk test
          pnpm rooch-sdk-kit test || true
          # pnpm bitseed-sdk test || true
      - uses: CatChen/check-git-status-action@v1
        with:
          fail-if-not-clean: true
          push-if-not-clean: false
          targets: '.'

      - name: Validate Debug Docker files
        if: contains(github.event.pull_request.changed_files.*.filename, 'docker/DockerfileDebug')
        run: docker build -f docker/DockerfileDebug -t rooch-test-debug .
      - name: Validate Docker files
        if: contains(github.event.pull_request.changed_files.*.filename, 'docker/Dockerfile')
        run: docker build -f docker/Dockerfile -t rooch-test .
      - name: Validate Homebrew formula
        if: contains(github.event.pull_request.changed_files.*.filename, 'Formula/')
        run: |
          brew audit --strict --online Formula/rooch.rb

      - name: Run ShellCheck
        if: ${{ steps.changes.outputs.scripts == 'true' }}
        uses: Azbagheri/shell-linter@v0.8.0
        with:
          path: "scripts/*.sh"
          severity: "error"