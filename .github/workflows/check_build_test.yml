name: Check-Build-Test

on:
  push:
    branches: [ 'main' ]
    paths-ignore:
      - 'docs/**'
      - 'fixtures/**'
      - 'kube/**'
      - '**.md'
  pull_request:
    branches: [ 'main' ]
    paths-ignore:
      - 'docs/**'
      - 'fixtures/**'
      - 'kube/**'
      - '**.md'

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  ENV_TEST_ON_CI: 1

jobs:
  check_build_test:
    name: Check-Build-Test
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: |
            ~/.pnpm-store
            node_modules
          key: ${{ runner.OS }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.OS }}-pnpm-

      - name: Install GitHub CLI
        run: |
          (type -p wget >/dev/null || (sudo apt update && sudo apt-get install wget -y)) \
          && sudo mkdir -p -m 755 /etc/apt/keyrings \
          && wget -qO- https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo tee /etc/apt/keyrings/githubcli-archive-keyring.gpg > /dev/null \
          && sudo chmod go+r /etc/apt/keyrings/githubcli-archive-keyring.gpg \
          && echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
          && sudo apt update \
          && sudo apt install gh -y

      - uses: ./.github/actions/rust-setup

      - name: Basic checks and builds
        run: |
          # Run basic checks in parallel
          cargo fmt -- --check &
          ./scripts/pr.sh -c &
          wait
          
          # Build and init
          cargo build
          cargo run --package framework-release --bin framework-release
          cargo run --bin rooch init --skip-password

      - name: Run Rust tests in parallel
        run: ./scripts/pr.sh -t

      - name: Run Move tests
        run: ./scripts/pr.sh -m

      - name: Run example tests
        run: ./scripts/pr.sh -e

      - name: Generate genesis files for Mainnet and Testnet
        run: |
          cargo run -p rooch-genesis -- -n main &
          cargo run -p rooch-genesis -- -n test &
          wait

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.3.1'

      - name: Run Web and SDK tests
        run: |
          # Check Docker
          docker --version
          docker pull lncm/bitcoind:v25.1 &
          # docker pull bitseed/ord:0.18.0-burn &
          # docker pull bitseed/bitseed:0.1.8 &
          
          # Setup pnpm and run web/SDK tests
          # . $NVM_DIR/nvm.sh
          # nvm install 20.3.1
          # nvm use 20.3.1
          npm install pnpm@9.4.0 -g
          pnpm install
          # pnpm bitseed-sdk playwright-deps
          
          # Run web/SDK tasks in parallel
          pnpm lint &
          pnpm test-suite build &
          pnpm rooch-sdk build &
          pnpm rooch-sdk-kit build &
          # pnpm bitseed-sdk lint &
          # pnpm bitseed-sdk build &
          wait
          
          # Run tests
          pnpm rooch-sdk test
          pnpm rooch-sdk-kit test || true
          # pnpm bitseed-sdk test || true

      - uses: CatChen/check-git-status-action@v1
        with:
          fail-if-not-clean: true
          push-if-not-clean: false
          targets: '.'