name: Check-Build-Test

on:
  push:
    branches: ["main"]
    paths-ignore:
      - 'docs/**'
      - 'fixtures/**'
      - 'kube/**'
      - 'scripts/**'
      - '**.md'
  pull_request:
    branches: ["main"]
    paths-ignore:
      - 'docs/**'
      - 'fixtures/**'
      - 'kube/**'
      - 'scripts/**'
      - '**.md'

env:
  CARGO_TERM_COLOR: always

jobs:
  check_build_test:
    name: Check-Build-Test
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v3
      - uses: rooch-network/rooch/.github/actions/rust-setup@main
      #  with:
      #    fetch-depth: 0
      - name: Check code format
        run: cargo fmt -- --check
      - name: Lint rust sources
        run: cargo clippy --all-targets --all-features --tests --benches -- -D warnings
      - name: Build
        run: cargo build
      - name: Execute rust tests
        run: cargo nextest run --workspace --all-features
      - name: Run CLI integration test
        # cargo-nextest does not support the CLI integration test powered by Cucumber Rust.
        # Use cargo test to run CLI integration tests.
        # TODO: FIXME
        run: cargo test -p testsuite --test integration
      - name: Export rooch_types.yaml
        run: cargo run --bin rooch abi export-rooch-types
      - name: Run Rooch init
        run: cargo run --bin rooch init
      - name: Execute stdlib tests
        run: cargo run --bin rooch move test -p moveos/moveos-stdlib/moveos-stdlib/
      - name: Execute framework tests
        run: cargo run --bin rooch move test -p crates/rooch-framework/
      - name: Build and test example projects
        run: ./scripts/pr.sh -e
      - uses: CatChen/check-git-status-action@v1
        with:
          fail-if-not-clean: true # optional
          push-if-not-clean: false # optional
          targets: "." #optional
