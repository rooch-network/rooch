name: Check-Build-Test

on:
  push:
    branches: ['main']
    paths-ignore:
      - 'docs/**'
      - 'fixtures/**'
      - 'kube/**'
      - '**.md'
  pull_request:
    branches: ['main']
    paths-ignore:
      - 'docs/**'
      - 'fixtures/**'
      - 'kube/**'
      - '**.md'

env:
  CARGO_TERM_COLOR: always

jobs:
  check_build_test:
    name: Check-Build-Test
    runs-on: self-hosted
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - uses: rooch-network/rooch/.github/actions/rust-setup@main
      # Todo self-hosted install docker fail
      #- name: Set up Docker
      #  uses: docker-practice/actions-setup-docker@master
      #- name: Start Docker
      #  run: |
      #    docker --version
      #    sudo dockerd  &
      #    sleep 6
      #    docker images
      - name: Check Docker
        run: |
          docker --version
          sleep 6
          docker images

      - name: Check code format
        run: cargo fmt -- --check
      - name: Lint rust sources
        run: ./scripts/pr.sh -c
      - name: Build
        run: cargo build
      - name: Framework compatibiliy
        run: cargo run --package framework-release --bin framework-release
      - name: Execute rust tests
        run: cargo nextest run --workspace --all-features --exclude rooch-framework-tests --exclude rooch-integration-test-runner -v
      - name: Execute the framework test with 1 thread
        run: cargo test --release run -p rooch-framework-tests -p rooch-integration-test-runner
      - name: Run CLI integration test
        # cargo-nextest does not support the CLI integration test powered by Cucumber Rust.
        # Use cargo test to run CLI integration tests.
        run: cargo test --release -p testsuite --test integration
      - name: Run Rooch init
        run: cargo run --bin rooch init --skip-password
      - name: Execute Move stdlib and framework tests
        run: ./scripts/pr.sh -m
      - name: Build and test example projects
        run: ./scripts/pr.sh -e

      # web & sdk & dashboard
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.x'
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.OS }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.OS }}-pnpm-
            ## Build and test app start
      - name: Install pnpm dependencies
        run: npm install pnpm -g && pnpm install
      - name: Gen SDK dependencie Code
        run: pnpm rooch-sdk gen
      - name: Lint
        run: pnpm lint
        continue-on-error: true
        timeout-minutes: 15
      - name: Build SDK
        run: pnpm rooch-sdk build
      - name: Test SDK
        run: pnpm rooch-sdk test
      - name: Build SDK KIT
        run: pnpm rooch-sdk-kit build
      - name: Test SDK KIT
        run: pnpm rooch-sdk-kit test
      - name: Build Dashboard
        run: pnpm dashboard build

      - uses: CatChen/check-git-status-action@v1
        with:
          fail-if-not-clean: true # optional
          push-if-not-clean: false # optional
          targets: '.' #optional
