name: Check-Build-Test

on:
  push:
    branches: ["main"]
    paths:
      - 'crates/**'
      - 'examples/**'
      - 'moveos/**'
      - '.github/**'
      - 'Cargo.toml'
  pull_request:
    branches: ["main"]
    paths:
      - 'crates/**'
      - 'examples/**'
      - 'moveos/**'
      - '.github/**'
      - 'Cargo.toml'

env:
  CARGO_TERM_COLOR: always

jobs:
  check_build_test:
    name: Check-Build-Test
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v3
      - uses: rooch-network/rooch/.github/actions/rust-setup@main
      #  with:
      #    fetch-depth: 0
      - name: Check code format
        run: cargo fmt -- --check
      - name: Lint rust sources
        run: cargo clippy --all-targets --all-features --tests --benches -- -D warnings
      - name: Build
        run: cargo build
      - name: Execute rust tests
        run: cargo nextest run --workspace --all-features
      - name: Run CLI integration test
        # cargo-nextest does not support the CLI integration test powered by Cucumber Rust.
        # Use cargo test to run CLI integration tests.
        # TODO: FIXME
        run: cargo test -p testsuite --test integration
      - name: Run Rooch init
        run: cargo run --bin rooch init
      - name: Execute stdlib tests
        run: cargo run --bin rooch move test -p moveos/moveos-stdlib/moveos-stdlib/
      - name: Execute framework tests
        run: cargo run --bin rooch move test -p crates/rooch-framework/
      - name: Build example projects
        run: for dir in examples/*/; do dir=${dir%*/};  cargo run --bin rooch move build -p "$dir" --named-addresses rooch_examples=0xabcd2345; done
      - name: Test example projects
        run: for dir in examples/*/; do dir=${dir%*/};  cargo run --bin rooch move test -p "$dir"; done
      - name: Display disk space after build
        run: df -h
