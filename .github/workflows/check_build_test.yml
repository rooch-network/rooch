name: Check-Build-Test

on:
  push:
    branches: [ 'main' ]
    paths-ignore:
      - 'docs/**'
      - 'fixtures/**'
      - 'kube/**'
      - '**.md'
  pull_request:
    branches: [ 'main' ]
    paths-ignore:
      - 'docs/**'
      - 'fixtures/**'
      - 'kube/**'
      - '**.md'

env:
  CARGO_TERM_COLOR: always

jobs:
  check_build_test:
    name: Check-Build-Test
    runs-on: self-hosted
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - name: Install GitHub CLI
        run: |
          (type -p wget >/dev/null || (sudo apt update && sudo apt-get install wget -y)) \
          && sudo mkdir -p -m 755 /etc/apt/keyrings \
          && wget -qO- https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo tee /etc/apt/keyrings/githubcli-archive-keyring.gpg > /dev/null \
          && sudo chmod go+r /etc/apt/keyrings/githubcli-archive-keyring.gpg \
          && echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
          && sudo apt update \
          && sudo apt install gh -y
      - uses: ./.github/actions/rust-setup # Using relative path to reference the action in the current branch
      # Todo self-hosted install docker fail
      #- name: Set up Docker
      #  uses: docker-practice/actions-setup-docker@master
      #- name: Start Docker
      #  run: |
      #    docker --version
      #    sudo dockerd  &
      #    sleep 6
      #    docker images
      - name: Check Docker
        run: |
          docker --version
          sleep 6
          docker images
          docker pull lncm/bitcoind:v25.1
          docker pull bitseed/ord:0.18.0-burn
          docker pull bitseed/bitseed:0.1.8

      - name: Check code format
        run: cargo fmt -- --check
      - name: Lint rust sources
        run: ./scripts/pr.sh -c
      - name: Build
        run: cargo build
      - name: Framework compatibility
        run: cargo run --package framework-release --bin framework-release
      - name: Run Rooch init
        run: cargo run --bin rooch init --skip-password
      - name: Execute Move stdlib and framework tests
        run: ./scripts/pr.sh -m
      - name: Execute rust tests
        run: ./scripts/pr.sh -t
      - name: Build and test example projects
        run: ./scripts/pr.sh -e

      # web & sdk & dashboard
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.3.1'
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.OS }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.OS }}-pnpm-
            ## Build and test app start
      - name: Install pnpm dependencies
        run: npm install pnpm@9.4.0 -g && pnpm install
      - name: Install playwright browsers
        run: pnpm bitseed-sdk playwright-deps
      - name: Lint
        run: pnpm lint
        continue-on-error: true
        timeout-minutes: 15
      - name: Build Test Suite
        run: pnpm test-suite build
      - name: Build SDK
        run: pnpm rooch-sdk build
      - name: Test SDK
        run: pnpm rooch-sdk test
      - name: Build SDK KIT
        run: pnpm rooch-sdk-kit build
      - name: Test SDK KIT
        run: pnpm rooch-sdk-kit test
      - name: Lint Bitseed SDK
        run: pnpm bitseed-sdk lint
      - name: Build Bitseed SDK
        run: pnpm bitseed-sdk build
      - name: Test Bitseed SDK
        run: pnpm bitseed-sdk test
        continue-on-error: true
        timeout-minutes: 15

      - uses: CatChen/check-git-status-action@v1
        with:
          fail-if-not-clean: true # optional
          push-if-not-clean: false # optional
          targets: '.' #optional
