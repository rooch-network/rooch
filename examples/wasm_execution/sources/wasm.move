// Copyright (c) RoochNetwork
// SPDX-License-Identifier: Apache-2.0

module rooch_examples::wasm_execution {
   use moveos_std::context::{Context};
   use moveos_std::wasm;
   use std::debug;
   use std::vector;

   entry public fun run(_ctx: &Context) {
      let wasm_bytes: vector<u8> = x"";
      // 1. create wasm VM instance (required step)
      let wasm_instance_id = wasm::create_wasm_instance(wasm_bytes);
      debug::print(&wasm_instance_id);

      // 2. encode the JSON string bytes by using CBOR format

      // 3. add the length value of the CBOR data

      // 4. put the bytes data of args to the stack area in the wasm VM memory
      let function_name = b"test_alloc";
      let arg = b"argument1";
      let arg_list = vector::empty<vector<u8>>();
      vector::push_back(&mut arg_list, arg);
      let wrapped_args_list = wasm::create_memory_wasm_args(wasm_instance_id, function_name, arg_list);
      debug::print(&wrapped_args_list);

      // 5. call the wasm function (required step)
      // when the calling is finished, release the wasm instance and memory
      let ret_val = wasm::execute_wasm_function(wasm_instance_id, function_name, wrapped_args_list);
      debug::print(&ret_val);

      // 6. get the length of the data

      // 7. read the bytes dat of return value by pointer offset and data length

      // 8. release the wasm VM instance (required step)
   }
}
